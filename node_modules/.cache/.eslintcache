[{"/Users/Yana_Krupina/diplom/react_chat/src/index.js":"1","/Users/Yana_Krupina/diplom/react_chat/src/App.js":"2","/Users/Yana_Krupina/diplom/react_chat/src/component/Login.js":"3","/Users/Yana_Krupina/diplom/react_chat/src/component/Account.js":"4","/Users/Yana_Krupina/diplom/react_chat/src/firebase.js":"5","/Users/Yana_Krupina/diplom/react_chat/src/component/Chat.js":"6","/Users/Yana_Krupina/diplom/react_chat/src/logic/chatStart.js":"7","/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js":"8","/Users/Yana_Krupina/diplom/react_chat/src/component/ChatChange.js":"9","/Users/Yana_Krupina/diplom/react_chat/src/component/ChatTech.js":"10","/Users/Yana_Krupina/diplom/react_chat/src/component/Todo.js":"11"},{"size":244,"mtime":1623019028844,"results":"12","hashOfConfig":"13"},{"size":821,"mtime":1623182778956,"results":"14","hashOfConfig":"13"},{"size":6347,"mtime":1623185239009,"results":"15","hashOfConfig":"13"},{"size":14733,"mtime":1623629419197,"results":"16","hashOfConfig":"13"},{"size":1323,"mtime":1623043436078,"results":"17","hashOfConfig":"13"},{"size":870,"mtime":1623024857155,"results":"18","hashOfConfig":"13"},{"size":22142,"mtime":1623207009823,"results":"19","hashOfConfig":"13"},{"size":7463,"mtime":1623053599876,"results":"20","hashOfConfig":"13"},{"size":8313,"mtime":1623185029521,"results":"21","hashOfConfig":"13"},{"size":425,"mtime":1623090922585,"results":"22","hashOfConfig":"13"},{"size":3601,"mtime":1623203053892,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"vor2cz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/Yana_Krupina/diplom/react_chat/src/index.js",[],["49","50"],"/Users/Yana_Krupina/diplom/react_chat/src/App.js",["51"],"import 'bootstrap/dist/css/bootstrap.min.css';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { auth } from './firebase';\nimport Login from './component/Login';\nimport Account from './component/Account';\nexport const ID = '';\n\n\nfunction App() {\n  const [user, setUser] = useState('');\n  const [id, setId] = useState('');\n\n  const authListener = () => {\n    auth.onAuthStateChanged(user => {\n      if(user) {\n        setUser(user);\n      } else {\n        setUser('');\n      }\n    })\n  };\n\n  useEffect(() => {\n    authListener();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {id ? (\n        <Account\n          id = {id}\n          setId = {setId}\n        />\n      ) : (\n        <Login\n          id = {id}\n          setId = {setId}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/Yana_Krupina/diplom/react_chat/src/component/Login.js",["52"],"import { useState } from \"react\";\nimport { auth, createUserDocument } from '../firebase';\nimport './login.css';\n\nconst Login = (props) => {\n    const [displayName, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [emailError, setEmailError] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [hasAccount, setHasAccount] = useState(false);\n    const {\n        id,\n        setId,\n    } = props;\n\n    const handleLogin = async (e) => {\n        // e.preventDefault();\n        if (email && password) {\n          try {\n            const { user } = await auth.signInWithEmailAndPassword(email, password);\n            setId(user.uid);\n          } catch (error) {\n            switch(error.code) {\n                case 'auth/invalid-email':\n                case 'auth/user-disabled':\n                case 'auth/user-not-found':\n                  setEmailError(error.message);\n                  break;\n                case 'auth/wrong-password':\n                  setPasswordError(error.message);\n                  break;\n                default:;\n              }\n          }\n        }\n      };\n    \n    const handleSignUp = async (e) => {\n        // e.preventDefault();\n        try {\n          const { user } = await auth.createUserWithEmailAndPassword(\n            email,\n            password\n          );\n          setId(user.uid);\n          await createUserDocument(user, { displayName });\n        } catch (error) {\n            switch(error.code) {\n                case 'auth/email-already-in-use':\n                case 'auth/invalid-email':\n                  setEmailError(error.message);\n                  break;\n                case 'auth/weak-password':\n                  setPasswordError(error.message);\n                  break;\n                default:;\n            }\n        }\n        // this.setState({ displayName: '', email: '', password: '' });\n      };\n\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row no-gutter\">\n                <div className=\"d-none d-md-flex col-md-4 col-lg-6 bg-image\"></div>\n                <div className=\"col-md-8 col-lg-6 nopadding\">\n                <div className=\"login d-flex align-items-center py-5\">\n                    <div className=\"container\">\n                    <div className=\"row rowForm\">\n                        <div className=\"col-md-9 col-lg-8 mx-auto nopadding\">\n                        <h3 className=\"login-heading mb-4\">Welcome back!</h3>\n                        <div>\n                            {hasAccount ? (\n                                <>\n                                </>\n                            ): (\n                                <div className=\"form-label-group\">\n                                    <label htmlFor=\"inputEmail titleForm\">Name</label>\n                                    <input type=\"text\" \n                                        id=\"inputName\" \n                                        className=\"form-control\" \n                                        placeholder=\"Name\" \n                                        required \n                                        autoFocus\n                                        value={displayName}\n                                        onChange = {(e) => setName(e.target.value)}\n                                        />\n                                </div>\n                            )}\n                            <div className=\"form-label-group\">\n                                <label htmlFor=\"inputEmail titleForm\">Email address</label>\n                                <input type=\"email\" \n                                    id=\"inputEmail\" \n                                    className=\"form-control\" \n                                    placeholder=\"Email address\" \n                                    required\n                                    value={email}\n                                    onChange = {(e) => setEmail(e.target.value)}/>\n                            </div>\n                            <p className = 'errorMsg'>{emailError}</p>\n\n                            <div className=\"form-label-group\">\n                                <label htmlFor=\"inputPassword titleForm\">Password</label>\n                                <input type=\"password\" \n                                    id=\"inputPassword\" \n                                    className=\"form-control\" \n                                    placeholder=\"Password\" \n                                    required\n                                    value={password}\n                                    onChange = {(e) => setPassword(e.target.value)}/>\n                            </div>\n                            <p className = 'errorMsg'>{passwordError}</p>\n                            {hasAccount ? (\n                                <>\n                                <button \n                                    className=\"btn btn-lg btn-yellow btn-block btn-login text-uppercase font-weight-bold mb-2\" \n                                    onClick = {handleLogin}\n                                    >Sign in</button>\n                                    <p className = \"titleForm\">Don't an account ? \n                                        <span className = \"titleFormLight\" onClick = {() => setHasAccount(!hasAccount)}>Sign up</span>\n                                    </p>\n                                </>\n                            ): (\n                                <>\n                                <button \n                                    className=\"btn btn-lg btn-yellow btn-block btn-login text-uppercase font-weight-bold mb-2\" \n                                    onClick ={handleSignUp}>Sign up</button>\n                                    <p className = \"titleForm\">Have an account ? \n                                        <span className = \"titleFormLight\" onClick = {() => setHasAccount(!hasAccount)}>Sign in</span>\n                                    </p>\n                                </>\n                            )}\n                        </div>\n                        </div>\n                    </div>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","/Users/Yana_Krupina/diplom/react_chat/src/component/Account.js",["53","54","55","56","57","58"],"/Users/Yana_Krupina/diplom/react_chat/src/firebase.js",[],"/Users/Yana_Krupina/diplom/react_chat/src/component/Chat.js",[],"/Users/Yana_Krupina/diplom/react_chat/src/logic/chatStart.js",[],"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js",[],"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatChange.js",["59","60","61","62","63"],"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatTech.js",[],"/Users/Yana_Krupina/diplom/react_chat/src/component/Todo.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":11,"column":10,"nodeType":"70","messageId":"71","endLine":11,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":13,"column":9,"nodeType":"70","messageId":"71","endLine":13,"endColumn":11},{"ruleId":"68","severity":1,"message":"73","line":3,"column":8,"nodeType":"70","messageId":"71","endLine":3,"endColumn":12},{"ruleId":"68","severity":1,"message":"74","line":7,"column":29,"nodeType":"70","messageId":"71","endLine":7,"endColumn":32},{"ruleId":"68","severity":1,"message":"75","line":7,"column":57,"nodeType":"70","messageId":"71","endLine":7,"endColumn":63},{"ruleId":"68","severity":1,"message":"76","line":18,"column":12,"nodeType":"70","messageId":"71","endLine":18,"endColumn":16},{"ruleId":"77","severity":1,"message":"78","line":54,"column":10,"nodeType":"79","endLine":54,"endColumn":12,"suggestions":"80"},{"ruleId":"81","severity":1,"message":"82","line":164,"column":33,"nodeType":"83","endLine":164,"endColumn":45},{"ruleId":"68","severity":1,"message":"84","line":6,"column":29,"nodeType":"70","messageId":"71","endLine":6,"endColumn":40},{"ruleId":"68","severity":1,"message":"85","line":6,"column":50,"nodeType":"70","messageId":"71","endLine":6,"endColumn":63},{"ruleId":"68","severity":1,"message":"86","line":66,"column":27,"nodeType":"70","messageId":"71","endLine":66,"endColumn":34},{"ruleId":"68","severity":1,"message":"87","line":67,"column":27,"nodeType":"70","messageId":"71","endLine":67,"endColumn":31},{"ruleId":"68","severity":1,"message":"88","line":68,"column":27,"nodeType":"70","messageId":"71","endLine":68,"endColumn":38},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'id' is assigned a value but never used.","'Chat' is defined but never used.","'Day' is defined but never used.","'Agenda' is defined but never used.","'name' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'userCurrent' is assigned a value but never used.","'setNewAccount' is assigned a value but never used.","'primary' is assigned a value but never used.","'unit' is assigned a value but never used.","'unitManager' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [getUser]",{"range":"94","text":"95"},[1620,1622],"[getUser]"]