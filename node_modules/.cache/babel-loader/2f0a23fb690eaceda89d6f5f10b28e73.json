{"ast":null,"code":"var _jsxFileName = \"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatChange.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatChange = props => {\n  const {\n    setUserCurrent,\n    userCurrent,\n    idUser\n  } = props;\n\n  const getPrimary = (value, duration) => {\n    if (duration === 'Frontend Developer') {\n      return 'JavaScript, HTML, CSS';\n    } else {\n      if (duration === 'Backend Developer') {\n        return value;\n      } else {\n        return 'QA test';\n      }\n    }\n  };\n\n  const getUnit = (duration, unit) => {\n    return `Digital Engagement Practice/Digital Technology/\n                DEP UA/DEP UA East & West/DEP UA East/${duration}/\n                ${unit}`;\n  };\n\n  const getManager = value => {\n    switch (value) {\n      case 'ReactJS':\n      case 'Java':\n      case 'Automated Test Specialists':\n        return 'Lochlan Cottrell';\n\n      case 'React Native':\n      case '.NET':\n      case 'DBMS testers':\n        return 'Yasin Huang';\n\n      case 'AngularJS':\n      case 'PHP':\n      case 'Test Analysts':\n        return 'Amanpreet Cowan';\n\n      case 'NodeJS':\n      case 'Python':\n      case 'Developers-testers':\n        return 'Dewi Dunlap';\n\n      case 'Vue':\n      case 'C++':\n      case 'Testers-DevOPs':\n        return 'Tonya Chang';\n\n      case 'BabelJs':\n      default:\n        return 'Kendall Bolton';\n    }\n  };\n\n  const getHR = value => {\n    switch (value) {\n      case 'Frontend Developer':\n        return 'Coral Howarth';\n\n      case 'Backend Developer':\n        return 'Zidane Pate';\n\n      case 'Testers':\n        return 'Bradley Hendrix';\n\n      default:\n        return 'Fraya Hood';\n    }\n  };\n\n  const handleEnd = async ({\n    steps,\n    values\n  }) => {\n    const {\n      primary,\n      unit,\n      unitManager\n    } = '';\n    console.log(values);\n    const user = {};\n\n    if (values[0] === 'name') {\n      user.displayName = values[1];\n      setUserCurrent(user);\n      firestore.collection('users').doc(idUser).update({\n        displayName: values[1]\n      }).then(() => {\n        console.log('User updated!');\n      });\n    } else {\n      if (values[0] === 'phone') {\n        user.phone = values[1];\n      } else {\n        if (values[0] === 'duration') {\n          user.duration = values[1];\n          user.profession = values[2];\n          primary = user.primary = getPrimary(user.profession, user.duration);\n          unit = user.unit = getUnit(user.duration, user.profession);\n          unitManager = user.unitManager = getManager(user.profession);\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatBot, {\n    steps: stepsChange,\n    handleEnd: handleEnd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatChange;\nChatChange.propTypes = {\n  steps: PropTypes.object\n};\nChatChange.defaultProps = {\n  steps: undefined\n};\nexport default ChatChange;\nexport const stepsChange = [{\n  id: '1',\n  message: 'What do you want change?',\n  trigger: 'change'\n}, {\n  id: 'change',\n  options: [{\n    value: 'name',\n    label: 'Name',\n    trigger: 'name'\n  }, {\n    value: 'phone',\n    label: 'Phone',\n    trigger: 'phone'\n  }, {\n    value: 'duration',\n    label: 'Global direction',\n    trigger: 'duration'\n  }]\n}, {\n  id: 'name',\n  message: 'What is your new name?',\n  user: true,\n  trigger: 'end'\n}, {\n  id: 'phone',\n  message: 'What is your new phone?',\n  user: true,\n  trigger: 'end',\n  validator: value => {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value < 9) {\n      return `Your enter incorrect number`;\n    }\n\n    return true;\n  }\n}, {\n  id: 'duration',\n  message: 'What is your global direction?',\n  trigger: 'duration_options'\n}, {\n  id: 'duration_options',\n  options: [{\n    value: 'Frontend Developer',\n    label: 'Frontend Developer',\n    trigger: 'front'\n  }, {\n    value: 'Backend Developer',\n    label: 'Backend Developer',\n    trigger: 'back'\n  }, {\n    value: 'Testers',\n    label: 'Testers',\n    trigger: 'test'\n  }]\n}, {\n  id: 'front',\n  message: 'What is your key technology?',\n  trigger: 'front_options'\n}, {\n  id: 'front_options',\n  options: [{\n    value: 'ReactJS',\n    label: 'ReactJS',\n    trigger: 'end'\n  }, {\n    value: 'React Native',\n    label: 'React Native',\n    trigger: 'end'\n  }, {\n    value: 'AngularJS',\n    label: 'AngularJS',\n    trigger: 'end'\n  }, {\n    value: 'NodeJS',\n    label: 'NodeJS',\n    trigger: 'end'\n  }, {\n    value: 'Vue',\n    label: 'Vue',\n    trigger: 'end'\n  }, {\n    value: 'BabelJs',\n    label: 'BabelJs',\n    trigger: 'end'\n  }]\n}, {\n  id: 'back',\n  message: 'What is your key technology?',\n  trigger: 'back_options'\n}, {\n  id: 'back_options',\n  options: [{\n    value: 'Java',\n    label: 'Java',\n    trigger: 'end'\n  }, {\n    value: '.NET',\n    label: '.NET',\n    trigger: 'end'\n  }, {\n    value: 'PHP',\n    label: 'PHP',\n    trigger: 'end'\n  }, {\n    value: 'Python',\n    label: 'Python',\n    trigger: 'end'\n  }, {\n    value: 'C++',\n    label: 'C++',\n    trigger: 'end'\n  }]\n}, {\n  id: 'test',\n  message: 'What is your key technology?',\n  trigger: 'test_options'\n}, {\n  id: 'test_options',\n  options: [{\n    value: 'Automated Test Specialists',\n    label: 'Automated Test Specialists',\n    trigger: 'end'\n  }, {\n    value: 'DBMS testers',\n    label: 'DBMS testers',\n    trigger: 'end'\n  }, {\n    value: 'Test Analysts',\n    label: 'Test Analysts',\n    trigger: 'end'\n  }, {\n    value: 'Developers-testers',\n    label: 'Developers-testers',\n    trigger: 'end'\n  }, {\n    value: 'Testers-DevOPs',\n    label: 'Testers-DevOPs',\n    trigger: 'end'\n  }]\n}, {\n  id: 'end',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatChange\");","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/src/component/ChatChange.js"],"names":["ChatBot","PropTypes","firestore","ChatChange","props","setUserCurrent","userCurrent","idUser","getPrimary","value","duration","getUnit","unit","getManager","getHR","handleEnd","steps","values","primary","unitManager","console","log","user","displayName","collection","doc","update","then","phone","profession","stepsChange","propTypes","object","defaultProps","undefined","id","message","trigger","options","label","validator","isNaN","end"],"mappings":"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","sourcesContent":["import ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore } from '../firebase';\n\nconst ChatChange = (props) => {\n    const { setUserCurrent, userCurrent, idUser } = props;\n\n    const getPrimary = (value, duration) => {\n        if(duration === 'Frontend Developer' ) {\n            return 'JavaScript, HTML, CSS';\n        } else {\n            if(duration === 'Backend Developer') {\n                return value;\n            } else {\n                return 'QA test'\n            }\n        }\n    }\n\n    const getUnit = (duration, unit) => {\n        return `Digital Engagement Practice/Digital Technology/\n                DEP UA/DEP UA East & West/DEP UA East/${duration}/\n                ${unit}`\n    }\n    \n    const getManager = (value) => {\n        switch (value) {\n            case 'ReactJS':\n            case 'Java':\n                case 'Automated Test Specialists': return 'Lochlan Cottrell';\n            case 'React Native':\n            case '.NET':\n                case 'DBMS testers': return 'Yasin Huang';\n            case 'AngularJS':\n            case 'PHP':\n                case 'Test Analysts': return 'Amanpreet Cowan';\n            case 'NodeJS':\n            case 'Python':\n                case 'Developers-testers': return 'Dewi Dunlap';\n            case 'Vue':\n            case 'C++':\n                case 'Testers-DevOPs': return 'Tonya Chang';\n            case 'BabelJs': \n            default: return 'Kendall Bolton';\n        }\n    }\n\n    const getHR = (value) => {\n        switch (value) {\n            case 'Frontend Developer': return 'Coral Howarth';\n            case 'Backend Developer': return 'Zidane Pate';\n            case 'Testers': return 'Bradley Hendrix';\n            default: return 'Fraya Hood'\n        }\n    }\n\n    const handleEnd = async ({ steps, values }) => {\n        const {primary, unit, unitManager} = '';\n        console.log(values)\n        const user = {};\n        if(values[0] === 'name') {\n            user.displayName = values[1];\n            setUserCurrent(user);\n            firestore\n            .collection('users')\n            .doc(idUser)\n            .update({\n                displayName: values[1]\n            })\n            .then(() => {\n                console.log('User updated!');\n            });\n        } else {\n            if(values[0] === 'phone'){\n                user.phone = values[1];\n            } else {\n                if(values[0] === 'duration'){\n                    user.duration = values[1];\n                    user.profession = values[2];\n                    primary = user.primary = getPrimary(user.profession, user.duration);\n                    unit = user.unit = getUnit(user.duration, user.profession);\n                    unitManager = user.unitManager = getManager(user.profession);\n                }\n            }\n        }\n      }\n\n    return (\n        <ChatBot\n          steps={stepsChange}\n          handleEnd={handleEnd}\n        />\n    );\n}\n  \n  ChatChange.propTypes = {\n    steps: PropTypes.object,\n  };\n  \n  ChatChange.defaultProps = {\n    steps: undefined,\n  };\n  \n  export default ChatChange;\n\n  export const stepsChange = [\n      {\n        id: '1',\n        message: 'What do you want change?',\n        trigger: 'change',\n      },\n      {\n        id: 'change',\n        options: [\n          { value: 'name', label: 'Name', trigger: 'name' },\n          { value: 'phone', label: 'Phone', trigger: 'phone' },\n          { value: 'duration', label: 'Global direction', trigger: 'duration' },\n        ],\n      },\n      {\n        id: 'name',\n        message: 'What is your new name?',\n        user: true,\n        trigger: 'end',\n      },\n      {\n        id: 'phone',\n        message: 'What is your new phone?',\n        user: true,\n        trigger: 'end',\n        validator: (value) => {\n            if (isNaN(value)) {\n              return 'value must be a number';\n            } else if (value < 0) {\n              return 'value must be positive';\n            } else if (value < 9) {\n              return `Your enter incorrect number`;\n            }\n  \n            return true;\n        },\n      },\n      {\n        id: 'duration',\n        message: 'What is your global direction?',\n        trigger: 'duration_options',\n      },\n      {\n        id: 'duration_options',\n        options: [\n          { value: 'Frontend Developer', label: 'Frontend Developer', trigger: 'front' },\n          { value: 'Backend Developer', label: 'Backend Developer', trigger: 'back' },\n          { value: 'Testers', label: 'Testers', trigger: 'test' },\n        ],\n      },\n      {\n        id: 'front',\n        message: 'What is your key technology?',\n        trigger: 'front_options',\n      },\n      {\n        id: 'front_options',\n        options: [\n          { value: 'ReactJS', label: 'ReactJS', trigger: 'end' },\n          { value: 'React Native', label: 'React Native', trigger: 'end' },\n          { value: 'AngularJS', label: 'AngularJS', trigger: 'end' },\n          { value: 'NodeJS', label: 'NodeJS', trigger: 'end' },\n          { value: 'Vue', label: 'Vue', trigger: 'end' },  \n          { value: 'BabelJs', label: 'BabelJs', trigger: 'end' },\n        ],\n      },\n      {\n        id: 'back',\n        message: 'What is your key technology?',\n        trigger: 'back_options',\n      },\n      {\n        id: 'back_options',\n        options: [\n          { value: 'Java', label: 'Java', trigger: 'end' },\n          { value: '.NET', label: '.NET', trigger: 'end' },\n          { value: 'PHP', label: 'PHP', trigger: 'end' },\n          { value: 'Python', label: 'Python', trigger: 'end' },\n          { value: 'C++', label: 'C++', trigger: 'end' },  \n        ],\n      },\n      {\n        id: 'test',\n        message: 'What is your key technology?',\n        trigger: 'test_options',\n      },\n      {\n        id: 'test_options',\n        options: [\n          { value: 'Automated Test Specialists', label: 'Automated Test Specialists', trigger: 'end' },\n          { value: 'DBMS testers', label: 'DBMS testers', trigger: 'end' },\n          { value: 'Test Analysts', label: 'Test Analysts', trigger: 'end' },\n          { value: 'Developers-testers', label: 'Developers-testers', trigger: 'end' },\n          { value: 'Testers-DevOPs', label: 'Testers-DevOPs', trigger: 'end' },  \n        ],\n      },\n      {\n        id: 'end',\n        message: 'Thanks! Your data was submitted successfully!',\n        end: true,\n      },\n];"]},"metadata":{},"sourceType":"module"}