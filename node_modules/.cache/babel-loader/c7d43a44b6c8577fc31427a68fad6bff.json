{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n\n/* eslint-disable max-len */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\nimport * as events from '../base/constant';\nimport * as util from '../base/util';\n/**\n * Schedule CRUD operations\n */\n\nvar Crud =\n/** @class */\nfunction () {\n  function Crud(parent) {\n    this.parent = parent;\n    this.crudObj = {\n      sourceEvent: null,\n      targetEvent: null,\n      isCrudAction: false\n    };\n  }\n\n  Crud.prototype.getQuery = function () {\n    var start = this.parent.activeView.startDate();\n    var end = this.parent.activeView.endDate();\n    return this.parent.dataModule.generateQuery(start, end);\n  };\n\n  Crud.prototype.getTable = function () {\n    if (this.parent.eventSettings.query) {\n      var query = this.parent.eventSettings.query.clone();\n      return query.fromTable;\n    }\n\n    return null;\n  };\n\n  Crud.prototype.refreshData = function (args) {\n    var _this = this;\n\n    var actionArgs = {\n      requestType: args.requestType,\n      cancel: false,\n      data: args.data,\n      addedRecords: args.editParams.addedRecords,\n      changedRecords: args.editParams.changedRecords,\n      deletedRecords: args.editParams.deletedRecords\n    };\n\n    if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\n      this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\n    }\n\n    if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\n      this.parent.resizeModule.actionObj.element.style.display = 'none';\n    }\n\n    if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\n      if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\n        this.crudObj.isCrudAction = true;\n        this.crudObj.sourceEvent = [];\n        var crudData = args.data instanceof Array ? args.data.length === 0 && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data : (typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : [args.data];\n\n        var _loop_1 = function (data) {\n          this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\n          var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\n\n          if (this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) {\n            return tdData.groupIndex === groupIndex;\n          }).length === 0 && this_1.crudObj.isCrudAction) {\n            this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\n          }\n        };\n\n        var this_1 = this;\n\n        for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\n          var data = crudData_1[_i];\n\n          _loop_1(data);\n        }\n\n        this.crudObj.targetEvent = this.crudObj.sourceEvent;\n      }\n    }\n\n    if (this.parent.dataModule.dataManager.dataSource.offline) {\n      this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\n        if (!offlineArgs.cancel) {\n          _this.parent.renderModule.refreshDataManager();\n        }\n      });\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      args.promise.then(function (e) {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n\n        _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\n          if (!onlineArgs.cancel) {\n            _this.parent.renderModule.refreshDataManager();\n          }\n        });\n      }).catch(function (e) {\n        if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n          return;\n        }\n\n        _this.parent.trigger(events.actionFailure, {\n          error: e\n        });\n      });\n    }\n  };\n\n  Crud.prototype.addEvent = function (eventData) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowAdding) {\n      if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n\n      var addEvents = eventData instanceof Array ? eventData : [eventData];\n      var args = {\n        requestType: 'eventCreate',\n        cancel: false,\n        data: addEvents,\n        addedRecords: addEvents,\n        changedRecords: [],\n        deletedRecords: []\n      };\n      this.parent.trigger(events.actionBegin, args, function (addArgs) {\n        if (!addArgs.cancel) {\n          var fields = _this.parent.eventFields;\n          var editParams = {\n            addedRecords: [],\n            changedRecords: [],\n            deletedRecords: []\n          };\n          var promise = void 0;\n\n          if (addArgs.addedRecords instanceof Array) {\n            for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\n              var event_1 = _a[_i];\n              editParams.addedRecords.push(_this.parent.eventBase.processTimezone(event_1, true));\n            }\n\n            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n          } else {\n            var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\n\n            editParams.addedRecords.push(event_2);\n            promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\n          }\n\n          var crudArgs = {\n            requestType: 'eventCreated',\n            cancel: false,\n            data: addArgs.addedRecords,\n            promise: promise,\n            editParams: editParams\n          };\n\n          _this.refreshData(crudArgs);\n        }\n      });\n    }\n  };\n\n  Crud.prototype.saveEvent = function (eventData, action) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowEditing) {\n      if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n        this.parent.quickPopup.openValidationError('blockAlert', eventData);\n        return;\n      }\n\n      this.parent.currentAction = action;\n\n      if (action) {\n        switch (action) {\n          case 'Save':\n            this.processSave(eventData);\n            break;\n\n          case 'EditOccurrence':\n            this.processOccurrences(eventData, action);\n            break;\n\n          case 'EditFollowingEvents':\n            this.processFollowSeries(eventData, action);\n            break;\n\n          case 'EditSeries':\n            this.processEntireSeries(eventData, action);\n            break;\n        }\n      } else {\n        var updateEvents = eventData instanceof Array ? eventData : [eventData];\n        var args = {\n          requestType: 'eventChange',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: updateEvents,\n          deletedRecords: []\n        };\n        this.parent.trigger(events.actionBegin, args, function (saveArgs) {\n          if (!saveArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n\n            if (saveArgs.changedRecords instanceof Array) {\n              for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\n                var event_3 = _a[_i];\n\n                var eventData_1 = _this.parent.eventBase.processTimezone(event_3, true);\n\n                editParams.changedRecords.push(eventData_1);\n              }\n\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\n\n              editParams.changedRecords.push(event_4);\n              promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\n            }\n\n            var crudArgs = {\n              requestType: 'eventChanged',\n              cancel: false,\n              data: saveArgs.changedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n\n  Crud.prototype.deleteEvent = function (eventData, action) {\n    var _this = this;\n\n    if (this.parent.eventSettings.allowDeleting) {\n      this.parent.currentAction = action;\n      var deleteEvents = [];\n\n      if (typeof eventData === 'string' || typeof eventData === 'number') {\n        deleteEvents = this.parent.eventsData.filter(function (eventObj) {\n          return eventObj[_this.parent.eventFields.id] === eventData;\n        });\n      } else {\n        deleteEvents = eventData instanceof Array ? eventData : [eventData];\n      }\n\n      if (action) {\n        switch (action) {\n          case 'Delete':\n            this.processDelete(deleteEvents);\n            break;\n\n          case 'DeleteOccurrence':\n            this.processOccurrences(deleteEvents, action);\n            break;\n\n          case 'DeleteFollowingEvents':\n            this.processFollowSeries(deleteEvents, action);\n            break;\n\n          case 'DeleteSeries':\n            this.processEntireSeries(deleteEvents, action);\n            break;\n        }\n      } else {\n        var args = {\n          requestType: 'eventRemove',\n          cancel: false,\n          data: eventData,\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: deleteEvents\n        };\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n          if (!deleteArgs.cancel) {\n            var promise = void 0;\n            var fields = _this.parent.eventFields;\n            var editParams = {\n              addedRecords: [],\n              changedRecords: [],\n              deletedRecords: []\n            };\n\n            if (deleteArgs.deletedRecords.length > 1) {\n              editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\n              promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n            } else {\n              editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\n              promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\n            }\n\n            _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\n\n            var crudArgs = {\n              requestType: 'eventRemoved',\n              cancel: false,\n              data: deleteArgs.deletedRecords,\n              promise: promise,\n              editParams: editParams\n            };\n\n            _this.refreshData(crudArgs);\n          }\n        });\n      }\n    }\n  };\n\n  Crud.prototype.processOccurrences = function (eventData, action) {\n    var _this = this;\n\n    var occurrenceData = [];\n    var isDeletedRecords = false;\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_2 = eventData; _i < eventData_2.length; _i++) {\n        var event_5 = eventData_2[_i];\n        occurrenceData.push({\n          occurrence: event_5,\n          parent: this.getParentEvent(event_5)\n        });\n      }\n    } else {\n      occurrenceData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n\n    var updateEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateEvents,\n      deletedRecords: []\n    };\n    args.data = occurrenceData;\n    this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\n      if (!occurrenceArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var occurrenceEvents = occurrenceData instanceof Array ? occurrenceData : [occurrenceData];\n\n        var _loop_2 = function (a, count) {\n          var childEvent = occurrenceArgs.changedRecords[a];\n          var parentEvent = occurrenceEvents[a].parent;\n          var parentException = parentEvent[fields.recurrenceException];\n          var editedData = void 0;\n          var exceptionDate = void 0;\n\n          switch (action) {\n            case 'EditOccurrence':\n              editedData = _this.parent.eventsProcessed.filter(function (event) {\n                return event.Guid === childEvent.Guid;\n              })[0];\n              exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\n\n              if (exceptionDate !== parentEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = exceptionDate;\n                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\n                childEvent[fields.recurrenceID] = parentEvent[fields.id];\n                childEvent[fields.followingID] = null;\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              } else {\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              }\n\n              break;\n\n            case 'DeleteOccurrence':\n              if (!childEvent[fields.recurrenceException]) {\n                parentEvent[fields.recurrenceException] = _this.excludeDateCheck(childEvent[fields.startTime], parentException);\n                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              }\n\n              if (childEvent[fields.id] !== parentEvent[fields.id]) {\n                editParams.deletedRecords.push(childEvent);\n                isDeletedRecords = true;\n              }\n\n              break;\n          }\n        };\n\n        for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\n          _loop_2(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processFollowSeries = function (eventData, action) {\n    var _this = this;\n\n    var followData = [];\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\n        var event_6 = eventData_3[_i];\n        followData.push({\n          occurrence: event_6,\n          parent: this.getParentEvent(event_6)\n        });\n      }\n    } else {\n      followData = {\n        occurrence: eventData,\n        parent: this.getParentEvent(eventData)\n      };\n    }\n\n    var updateFollowEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateFollowEvents,\n      deletedRecords: []\n    };\n    args.data = followData;\n    this.parent.trigger(events.actionBegin, args, function (followArgs) {\n      if (!followArgs.cancel) {\n        var fields_1 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var followEvents = followData instanceof Array ? followData : [followData];\n\n        var _loop_3 = function (a, count) {\n          var childEvent = followArgs.changedRecords[a];\n          var parentEvent = followEvents[a].parent;\n\n          var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\n\n          var isSpanned = void 0;\n\n          switch (action) {\n            case 'EditFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent);\n\n              isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\n              childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\n              childEvent[fields_1.recurrenceID] = null;\n              editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n\n              if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\n                childEvent[fields_1.recurrenceException] = null;\n\n                if (followData_1.occurrence.length > 0) {\n                  var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\n\n                  if (rule.indexOf('COUNT') === -1) {\n                    childEvent[fields_1.recurrenceRule] = rule;\n                  }\n                }\n\n                if (followData_1.follow.length > 0) {\n                  childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\n                  editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\n                }\n\n                if (isSpanned) {\n                  followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\n                    return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\n                  });\n                }\n\n                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\n              }\n\n              break;\n\n            case 'DeleteFollowingEvents':\n              _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\n\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n              editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\n              break;\n          }\n        };\n\n        for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\n          _loop_3(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: followArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processEntireSeries = function (eventData, action) {\n    var _this = this;\n\n    var seriesData = [];\n    var isDeletedRecords = false;\n\n    if (eventData instanceof Array) {\n      for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\n        var event_7 = eventData_4[_i];\n        seriesData.push(this.getParentEvent(event_7, true));\n      }\n    } else {\n      seriesData = this.getParentEvent(eventData, true);\n    }\n\n    var updateSeriesEvents = eventData instanceof Array ? eventData : [eventData];\n    var args = {\n      requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: updateSeriesEvents,\n      deletedRecords: []\n    };\n    args.data = seriesData;\n    this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\n      if (!seriesArgs.cancel) {\n        var fields_2 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n        var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\n\n        var _loop_4 = function (a, count) {\n          var childEvent = seriesArgs.changedRecords[a];\n          var parentEvent = seriesEvents[a];\n\n          var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\n\n          var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\n\n          switch (action) {\n            case 'EditSeries':\n              if (childEvent[fields_2.startTime] > parentEvent[fields_2.startTime] && childEvent[fields_2.recurrenceRule]) {\n                _this.processRecurrenceRule(parentEvent, childEvent);\n              }\n\n              childEvent[fields_2.id] = parentEvent[fields_2.id];\n              childEvent[fields_2.recurrenceID] = null;\n              childEvent[fields_2.followingID] = null;\n\n              if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\n                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\n                  return eventObj[fields_2.id] === childEvent[fields_2.id];\n                });\n\n                if (originalParent.length > 0) {\n                  childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\n                }\n              } else {\n                childEvent[fields_2.recurrenceException] = null;\n                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\n              }\n\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n              _this.parent.uiStateValues.isIgnoreOccurrence = false;\n              break;\n\n            case 'DeleteSeries':\n              editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\n              isDeletedRecords = true;\n              break;\n          }\n        };\n\n        for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\n          _loop_4(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\n\n        _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\n\n        var crudArgs = {\n          requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\n          cancel: false,\n          data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processDelete = function (eventData) {\n    var _this = this;\n\n    var deleteData = [];\n\n    for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\n      var eventObj = eventData_5[_i];\n\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        deleteData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        deleteData.push(eventObj);\n      }\n    }\n\n    var args = {\n      requestType: 'eventRemove',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: [],\n      deletedRecords: eventData\n    };\n    args.data = deleteData;\n    this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n      if (!deleteArgs.cancel) {\n        var fields_3 = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n\n        var _loop_5 = function (a, count) {\n          var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\n\n          if (!isDelete) {\n            var parentEvent_1 = deleteData[a].parent;\n            var isEdited = editParams.changedRecords.filter(function (obj) {\n              return obj[fields_3.id] === parentEvent_1[fields_3.id];\n            });\n            var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\n\n            if (isEdited.length > 0) {\n              var editedData = isEdited[0];\n              editedData[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\n            } else {\n              parentEvent_1[fields_3.recurrenceException] = _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\n            }\n\n            if (isEdited.length === 0) {\n              editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\n            }\n\n            isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\n          }\n\n          if (isDelete) {\n            editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\n          }\n        };\n\n        for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\n          _loop_5(a, count);\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\n\n        var crudArgs = {\n          requestType: 'eventRemoved',\n          cancel: false,\n          data: deleteArgs.deletedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.processSave = function (data) {\n    var _this = this;\n\n    var eventData = data instanceof Array ? data : [data];\n    var editData = [];\n\n    for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\n      var eventObj = eventData_6[_i];\n\n      if (eventObj[this.parent.eventFields.recurrenceRule]) {\n        editData.push({\n          occurrence: eventObj,\n          parent: this.getParentEvent(eventObj)\n        });\n      } else {\n        editData.push(eventObj);\n      }\n    }\n\n    var args = {\n      requestType: 'eventChange',\n      cancel: false,\n      addedRecords: [],\n      changedRecords: eventData,\n      deletedRecords: []\n    };\n    args.data = editData;\n    this.parent.trigger(events.actionBegin, args, function (editArgs) {\n      if (!editArgs.cancel) {\n        var fields = _this.parent.eventFields;\n        var editParams = {\n          addedRecords: [],\n          changedRecords: [],\n          deletedRecords: []\n        };\n\n        for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\n          var record = _a[_i];\n\n          if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\n            var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\n\n            var parentEle = _this.getParentEvent(record);\n\n            parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ? exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\n            record[fields.id] = _this.parent.getEventMaxID();\n            record[fields.recurrenceException] = exceptionString;\n            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\n          } else {\n            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n          }\n        }\n\n        var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n\n        var crudArgs = {\n          requestType: 'eventChanged',\n          cancel: false,\n          data: editArgs.changedRecords,\n          promise: promise,\n          editParams: editParams\n        };\n\n        _this.refreshData(crudArgs);\n      }\n    });\n  };\n\n  Crud.prototype.getParentEvent = function (event, isParent) {\n    if (isParent === void 0) {\n      isParent = false;\n    }\n\n    var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\n\n    if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\n      this.parent.eventBase.timezoneConvert(parentEvent);\n    }\n\n    return parentEvent;\n  };\n\n  Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\n    var exDate = getRecurrenceStringFromDate(eventStartTime);\n\n    if (!isNullOrUndefined(exceptionDateList)) {\n      if (exceptionDateList.indexOf(exDate) === -1) {\n        exceptionDateList = !isNullOrUndefined(exceptionDateList) ? exceptionDateList + ',' + exDate : exDate;\n      }\n    } else {\n      exceptionDateList = exDate;\n    }\n\n    return exceptionDateList;\n  };\n\n  Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\n    var fields = this.parent.eventFields;\n    var recurrenceRule = parentEvent[fields.recurrenceRule];\n    var endDate;\n\n    if (followEvent instanceof Date) {\n      endDate = new Date(+followEvent);\n    } else {\n      endDate = new Date(+followEvent[fields.startTime]);\n      var newRecurrenceRule = followEvent[fields.recurrenceRule];\n      var startDate = parentEvent[fields.startTime];\n      var ruleException = this.parent.currentAction === 'DeleteFollowingEvents' ? followEvent[fields.recurrenceException] : null;\n      var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\n      var untilDate = new Date(dateCollection.slice(-1)[0]);\n      untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\n      endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\n      followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\n    }\n\n    parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\n  };\n\n  Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\n    var splitRule = recurrenceRule.split(';');\n    var updatedRule = '';\n\n    for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\n      var rule = splitRule_1[_i];\n\n      if (rule !== '') {\n        var ruleKey = rule.split('=')[0];\n        var ruleValue = rule.split('=')[1];\n\n        if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\n          ruleValue = getRecurrenceStringFromDate(untilDate);\n          rule = rule.replace(rule, 'UNTIL=' + ruleValue);\n        }\n\n        updatedRule += rule + ';';\n      }\n    }\n\n    if (isParent && updatedRule.indexOf('UNTIL') === -1) {\n      updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\n    }\n\n    return updatedRule;\n  };\n\n  Crud.prototype.isBlockEvent = function (eventData) {\n    var eventCollection = eventData instanceof Array ? eventData : [eventData];\n    var value = false;\n\n    for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n      var event_8 = eventCollection_1[_i];\n      value = event_8[this.parent.eventFields.isBlock] || false;\n    }\n\n    return value;\n  };\n  /**\n   * To destroy the crud module.\n   *\n   * @returns {void}\n   * @private\n   */\n\n\n  Crud.prototype.destroy = function () {\n    this.crudObj = null;\n    this.parent = null;\n  };\n\n  return Crud;\n}();\n\nexport { Crud };","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/node_modules/@syncfusion/ej2-schedule/src/schedule/actions/crud.js"],"names":["isNullOrUndefined","getRecurrenceStringFromDate","generate","events","util","Crud","parent","crudObj","sourceEvent","targetEvent","isCrudAction","prototype","getQuery","start","activeView","startDate","end","endDate","dataModule","generateQuery","getTable","eventSettings","query","clone","fromTable","refreshData","args","_this","actionArgs","requestType","cancel","data","addedRecords","editParams","changedRecords","deletedRecords","dragAndDropModule","actionObj","element","style","display","resizeModule","activeViewOptions","group","resources","length","allowGroupEdit","rowAutoHeight","virtualScrollModule","byGroupID","crudData","Array","_loop_1","this_1","groupIndex","eventBase","getGroupIndexFromEvent","crudModule","filter","tdData","push","resourceBase","lastResourceLevel","_i","crudData_1","dataManager","dataSource","offline","trigger","actionComplete","offlineArgs","renderModule","refreshDataManager","promise","then","e","isDestroyed","onlineArgs","catch","actionFailure","error","addEvent","eventData","allowAdding","isBlockEvent","isBlockRange","quickPopup","openValidationError","addEvents","actionBegin","addArgs","fields","eventFields","_a","event_1","processTimezone","saveChanges","id","event_2","insert","crudArgs","saveEvent","action","allowEditing","currentAction","processSave","processOccurrences","processFollowSeries","processEntireSeries","updateEvents","saveArgs","event_3","eventData_1","event_4","update","deleteEvent","allowDeleting","deleteEvents","eventsData","eventObj","processDelete","deleteArgs","concat","remove","selectWorkCellByTime","occurrenceData","isDeletedRecords","eventData_2","event_5","occurrence","getParentEvent","occurrenceArgs","occurrenceEvents","_loop_2","a","count","childEvent","parentEvent","parentException","recurrenceException","editedData","exceptionDate","eventsProcessed","event","Guid","excludeDateCheck","startTime","recurrenceID","followingID","followData","eventData_3","event_6","updateFollowEvents","followArgs","fields_1","followEvents","_loop_3","followData_1","getEventCollections","isSpanned","processRecurrenceRule","isFollowingEvent","uiStateValues","isIgnoreOccurrence","rule","slice","recurrenceRule","indexOf","follow","seriesData","eventData_4","event_7","updateSeriesEvents","seriesArgs","fields_2","seriesEvents","_loop_4","eventCollections","deletedEvents","originalParent","deleteData","eventData_5","fields_3","_loop_5","isDelete","parentEvent_1","isEdited","obj","editedDate","editData","eventData_6","editArgs","record","exceptionString","parentEle","getEventMaxID","isParent","startTimezone","endTimezone","timezoneConvert","eventStartTime","exceptionDateList","exDate","followEvent","Date","newRecurrenceRule","ruleException","dateCollection","firstDayOfWeek","untilDate","setHours","getHours","getMinutes","getSeconds","getUpdatedRecurrenceRule","addDays","getTime","splitRule","split","updatedRule","splitRule_1","ruleKey","ruleValue","replace","eventCollection","value","eventCollection_1","event_8","isBlock","destroy"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable max-len */\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { getRecurrenceStringFromDate, generate } from '../../recurrence-editor/date-generator';\nimport * as events from '../base/constant';\nimport * as util from '../base/util';\n/**\n * Schedule CRUD operations\n */\nvar Crud = /** @class */ (function () {\n    function Crud(parent) {\n        this.parent = parent;\n        this.crudObj = { sourceEvent: null, targetEvent: null, isCrudAction: false };\n    }\n    Crud.prototype.getQuery = function () {\n        var start = this.parent.activeView.startDate();\n        var end = this.parent.activeView.endDate();\n        return this.parent.dataModule.generateQuery(start, end);\n    };\n    Crud.prototype.getTable = function () {\n        if (this.parent.eventSettings.query) {\n            var query = this.parent.eventSettings.query.clone();\n            return query.fromTable;\n        }\n        return null;\n    };\n    Crud.prototype.refreshData = function (args) {\n        var _this = this;\n        var actionArgs = {\n            requestType: args.requestType, cancel: false, data: args.data,\n            addedRecords: args.editParams.addedRecords, changedRecords: args.editParams.changedRecords,\n            deletedRecords: args.editParams.deletedRecords\n        };\n        if (this.parent.dragAndDropModule && this.parent.dragAndDropModule.actionObj && this.parent.dragAndDropModule.actionObj.element) {\n            this.parent.dragAndDropModule.actionObj.element.style.display = 'none';\n        }\n        if (this.parent.resizeModule && this.parent.resizeModule.actionObj && this.parent.resizeModule.actionObj.element) {\n            this.parent.resizeModule.actionObj.element.style.display = 'none';\n        }\n        if (this.parent.activeViewOptions.group.resources.length > 0 && !this.parent.activeViewOptions.group.allowGroupEdit\n            && !this.parent.rowAutoHeight && !this.parent.virtualScrollModule && this.parent.activeViewOptions.group.byGroupID) {\n            if (args.requestType === 'eventCreated' || args.requestType === 'eventRemoved') {\n                this.crudObj.isCrudAction = true;\n                this.crudObj.sourceEvent = [];\n                var crudData = args.data instanceof Array ? (args.data.length === 0 &&\n                    args.requestType === 'eventRemoved' ? args.editParams.deletedRecords : args.data) :\n                    ((typeof args.data === 'string' || typeof args.data === 'number') && args.requestType === 'eventRemoved') ?\n                        args.editParams.deletedRecords : [args.data];\n                var _loop_1 = function (data) {\n                    this_1.crudObj.isCrudAction = !(args.requestType === 'eventRemoved' && !isNullOrUndefined(data.parent));\n                    var groupIndex = this_1.parent.eventBase.getGroupIndexFromEvent(data);\n                    if (this_1.parent.crudModule.crudObj.sourceEvent.filter(function (tdData) { return tdData.groupIndex === groupIndex; }).length === 0\n                        && this_1.crudObj.isCrudAction) {\n                        this_1.crudObj.sourceEvent.push(this_1.parent.resourceBase.lastResourceLevel[groupIndex]);\n                    }\n                };\n                var this_1 = this;\n                for (var _i = 0, crudData_1 = crudData; _i < crudData_1.length; _i++) {\n                    var data = crudData_1[_i];\n                    _loop_1(data);\n                }\n                this.crudObj.targetEvent = this.crudObj.sourceEvent;\n            }\n        }\n        if (this.parent.dataModule.dataManager.dataSource.offline) {\n            this.parent.trigger(events.actionComplete, actionArgs, function (offlineArgs) {\n                if (!offlineArgs.cancel) {\n                    _this.parent.renderModule.refreshDataManager();\n                }\n            });\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            args.promise.then(function (e) {\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n                    return;\n                }\n                _this.parent.trigger(events.actionComplete, actionArgs, function (onlineArgs) {\n                    if (!onlineArgs.cancel) {\n                        _this.parent.renderModule.refreshDataManager();\n                    }\n                });\n            }).catch(function (e) {\n                if (!_this.parent || _this.parent && _this.parent.isDestroyed) {\n                    return;\n                }\n                _this.parent.trigger(events.actionFailure, { error: e });\n            });\n        }\n    };\n    Crud.prototype.addEvent = function (eventData) {\n        var _this = this;\n        if (this.parent.eventSettings.allowAdding) {\n            if (!this.isBlockEvent(eventData) && this.parent.eventBase.isBlockRange(eventData)) {\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\n                return;\n            }\n            var addEvents = (eventData instanceof Array) ? eventData : [eventData];\n            var args = {\n                requestType: 'eventCreate', cancel: false, data: addEvents,\n                addedRecords: addEvents, changedRecords: [], deletedRecords: []\n            };\n            this.parent.trigger(events.actionBegin, args, function (addArgs) {\n                if (!addArgs.cancel) {\n                    var fields = _this.parent.eventFields;\n                    var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                    var promise = void 0;\n                    if (addArgs.addedRecords instanceof Array) {\n                        for (var _i = 0, _a = addArgs.addedRecords; _i < _a.length; _i++) {\n                            var event_1 = _a[_i];\n                            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(event_1, true));\n                        }\n                        promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                    }\n                    else {\n                        var event_2 = _this.parent.eventBase.processTimezone(addArgs.addedRecords, true);\n                        editParams.addedRecords.push(event_2);\n                        promise = _this.parent.dataModule.dataManager.insert(event_2, _this.getTable(), _this.getQuery());\n                    }\n                    var crudArgs = {\n                        requestType: 'eventCreated', cancel: false, data: addArgs.addedRecords, promise: promise, editParams: editParams\n                    };\n                    _this.refreshData(crudArgs);\n                }\n            });\n        }\n    };\n    Crud.prototype.saveEvent = function (eventData, action) {\n        var _this = this;\n        if (this.parent.eventSettings.allowEditing) {\n            if (this.parent.currentAction !== 'EditFollowingEvents' && !this.isBlockEvent(eventData)\n                && this.parent.eventBase.isBlockRange(eventData)) {\n                this.parent.quickPopup.openValidationError('blockAlert', eventData);\n                return;\n            }\n            this.parent.currentAction = action;\n            if (action) {\n                switch (action) {\n                    case 'Save':\n                        this.processSave(eventData);\n                        break;\n                    case 'EditOccurrence':\n                        this.processOccurrences(eventData, action);\n                        break;\n                    case 'EditFollowingEvents':\n                        this.processFollowSeries(eventData, action);\n                        break;\n                    case 'EditSeries':\n                        this.processEntireSeries(eventData, action);\n                        break;\n                }\n            }\n            else {\n                var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\n                var args = {\n                    requestType: 'eventChange', cancel: false, data: eventData,\n                    addedRecords: [], changedRecords: updateEvents, deletedRecords: []\n                };\n                this.parent.trigger(events.actionBegin, args, function (saveArgs) {\n                    if (!saveArgs.cancel) {\n                        var promise = void 0;\n                        var fields = _this.parent.eventFields;\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                        if (saveArgs.changedRecords instanceof Array) {\n                            for (var _i = 0, _a = saveArgs.changedRecords; _i < _a.length; _i++) {\n                                var event_3 = _a[_i];\n                                var eventData_1 = _this.parent.eventBase.processTimezone(event_3, true);\n                                editParams.changedRecords.push(eventData_1);\n                            }\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                        }\n                        else {\n                            var event_4 = _this.parent.eventBase.processTimezone(saveArgs.changedRecords, true);\n                            editParams.changedRecords.push(event_4);\n                            promise = _this.parent.dataModule.dataManager.update(fields.id, event_4, _this.getTable(), _this.getQuery());\n                        }\n                        var crudArgs = {\n                            requestType: 'eventChanged', cancel: false,\n                            data: saveArgs.changedRecords, promise: promise, editParams: editParams\n                        };\n                        _this.refreshData(crudArgs);\n                    }\n                });\n            }\n        }\n    };\n    Crud.prototype.deleteEvent = function (eventData, action) {\n        var _this = this;\n        if (this.parent.eventSettings.allowDeleting) {\n            this.parent.currentAction = action;\n            var deleteEvents = [];\n            if (typeof eventData === 'string' || typeof eventData === 'number') {\n                deleteEvents = this.parent.eventsData.filter(function (eventObj) {\n                    return eventObj[_this.parent.eventFields.id] === eventData;\n                });\n            }\n            else {\n                deleteEvents = (eventData instanceof Array ? eventData : [eventData]);\n            }\n            if (action) {\n                switch (action) {\n                    case 'Delete':\n                        this.processDelete(deleteEvents);\n                        break;\n                    case 'DeleteOccurrence':\n                        this.processOccurrences(deleteEvents, action);\n                        break;\n                    case 'DeleteFollowingEvents':\n                        this.processFollowSeries(deleteEvents, action);\n                        break;\n                    case 'DeleteSeries':\n                        this.processEntireSeries(deleteEvents, action);\n                        break;\n                }\n            }\n            else {\n                var args = {\n                    requestType: 'eventRemove', cancel: false, data: eventData,\n                    addedRecords: [], changedRecords: [], deletedRecords: deleteEvents\n                };\n                this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n                    if (!deleteArgs.cancel) {\n                        var promise = void 0;\n                        var fields = _this.parent.eventFields;\n                        var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                        if (deleteArgs.deletedRecords.length > 1) {\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deleteArgs.deletedRecords);\n                            promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                        }\n                        else {\n                            editParams.deletedRecords.push(deleteArgs.deletedRecords[0]);\n                            promise = _this.parent.dataModule.dataManager.remove(fields.id, deleteArgs.deletedRecords[0], _this.getTable(), _this.getQuery());\n                        }\n                        _this.parent.eventBase.selectWorkCellByTime(deleteArgs.deletedRecords);\n                        var crudArgs = {\n                            requestType: 'eventRemoved', cancel: false,\n                            data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\n                        };\n                        _this.refreshData(crudArgs);\n                    }\n                });\n            }\n        }\n    };\n    Crud.prototype.processOccurrences = function (eventData, action) {\n        var _this = this;\n        var occurrenceData = [];\n        var isDeletedRecords = false;\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_2 = eventData; _i < eventData_2.length; _i++) {\n                var event_5 = eventData_2[_i];\n                occurrenceData.push({ occurrence: event_5, parent: this.getParentEvent(event_5) });\n            }\n        }\n        else {\n            occurrenceData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\n        }\n        var updateEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditOccurrence' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateEvents, deletedRecords: []\n        };\n        args.data = occurrenceData;\n        this.parent.trigger(events.actionBegin, args, function (occurrenceArgs) {\n            if (!occurrenceArgs.cancel) {\n                var fields = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var occurrenceEvents = (occurrenceData instanceof Array ? occurrenceData : [occurrenceData]);\n                var _loop_2 = function (a, count) {\n                    var childEvent = occurrenceArgs.changedRecords[a];\n                    var parentEvent = occurrenceEvents[a].parent;\n                    var parentException = parentEvent[fields.recurrenceException];\n                    var editedData = void 0;\n                    var exceptionDate = void 0;\n                    switch (action) {\n                        case 'EditOccurrence':\n                            editedData = _this.parent.eventsProcessed.filter(function (event) { return event.Guid === childEvent.Guid; })[0];\n                            exceptionDate = _this.excludeDateCheck(editedData[fields.startTime], parentException);\n                            if (exceptionDate !== parentEvent[fields.recurrenceException]) {\n                                parentEvent[fields.recurrenceException] = exceptionDate;\n                                childEvent[fields.recurrenceException] = getRecurrenceStringFromDate(editedData[fields.startTime]);\n                                childEvent[fields.recurrenceID] = parentEvent[fields.id];\n                                childEvent[fields.followingID] = null;\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                                editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            }\n                            else {\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            }\n                            break;\n                        case 'DeleteOccurrence':\n                            if (!childEvent[fields.recurrenceException]) {\n                                parentEvent[fields.recurrenceException] =\n                                    _this.excludeDateCheck(childEvent[fields.startTime], parentException);\n                                editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            }\n                            if (childEvent[fields.id] !== parentEvent[fields.id]) {\n                                editParams.deletedRecords.push(childEvent);\n                                isDeletedRecords = true;\n                            }\n                            break;\n                    }\n                };\n                for (var a = 0, count = occurrenceArgs.changedRecords.length; a < count; a++) {\n                    _loop_2(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(occurrenceArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditOccurrence' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: isDeletedRecords ? occurrenceArgs.deletedRecords : occurrenceArgs.changedRecords,\n                    promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processFollowSeries = function (eventData, action) {\n        var _this = this;\n        var followData = [];\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_3 = eventData; _i < eventData_3.length; _i++) {\n                var event_6 = eventData_3[_i];\n                followData.push({ occurrence: event_6, parent: this.getParentEvent(event_6) });\n            }\n        }\n        else {\n            followData = { occurrence: eventData, parent: this.getParentEvent(eventData) };\n        }\n        var updateFollowEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditFollowingEvents' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateFollowEvents, deletedRecords: []\n        };\n        args.data = followData;\n        this.parent.trigger(events.actionBegin, args, function (followArgs) {\n            if (!followArgs.cancel) {\n                var fields_1 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var followEvents = followData instanceof Array ? followData : [followData];\n                var _loop_3 = function (a, count) {\n                    var childEvent = followArgs.changedRecords[a];\n                    var parentEvent = followEvents[a].parent;\n                    var followData_1 = _this.parent.eventBase.getEventCollections(parentEvent, childEvent);\n                    var isSpanned = void 0;\n                    switch (action) {\n                        case 'EditFollowingEvents':\n                            _this.processRecurrenceRule(parentEvent, childEvent);\n                            isSpanned = !_this.parent.eventBase.isFollowingEvent(parentEvent, childEvent);\n                            childEvent[fields_1.followingID] = isSpanned ? null : parentEvent[fields_1.id];\n                            childEvent[fields_1.recurrenceID] = null;\n                            editParams.addedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            if (!_this.parent.uiStateValues.isIgnoreOccurrence) {\n                                childEvent[fields_1.recurrenceException] = null;\n                                if (followData_1.occurrence.length > 0) {\n                                    var rule = followData_1.occurrence.slice(-1)[0][fields_1.recurrenceRule];\n                                    if (rule.indexOf('COUNT') === -1) {\n                                        childEvent[fields_1.recurrenceRule] = rule;\n                                    }\n                                }\n                                if (followData_1.follow.length > 0) {\n                                    childEvent[fields_1.recurrenceRule] = followData_1.follow.slice(-1)[0][fields_1.recurrenceRule];\n                                    editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.follow);\n                                }\n                                if (isSpanned) {\n                                    followData_1.occurrence = followData_1.occurrence.filter(function (eventObj) {\n                                        return eventObj[fields_1.recurrenceID] === childEvent[fields_1.id];\n                                    });\n                                }\n                                editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence);\n                            }\n                            break;\n                        case 'DeleteFollowingEvents':\n                            _this.processRecurrenceRule(parentEvent, childEvent[fields_1.startTime]);\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent, true));\n                            editParams.deletedRecords = editParams.deletedRecords.concat(followData_1.occurrence).concat(followData_1.follow);\n                            break;\n                    }\n                };\n                for (var a = 0, count = followArgs.changedRecords.length; a < count; a++) {\n                    _loop_3(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_1.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(followArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditFollowingEvents' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: followArgs.changedRecords, promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processEntireSeries = function (eventData, action) {\n        var _this = this;\n        var seriesData = [];\n        var isDeletedRecords = false;\n        if (eventData instanceof Array) {\n            for (var _i = 0, eventData_4 = eventData; _i < eventData_4.length; _i++) {\n                var event_7 = eventData_4[_i];\n                seriesData.push(this.getParentEvent(event_7, true));\n            }\n        }\n        else {\n            seriesData = this.getParentEvent(eventData, true);\n        }\n        var updateSeriesEvents = (eventData instanceof Array) ? eventData : [eventData];\n        var args = {\n            requestType: action === 'EditSeries' ? 'eventChange' : 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: updateSeriesEvents, deletedRecords: []\n        };\n        args.data = seriesData;\n        this.parent.trigger(events.actionBegin, args, function (seriesArgs) {\n            if (!seriesArgs.cancel) {\n                var fields_2 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var seriesEvents = seriesData instanceof Array ? seriesData : [seriesData];\n                var _loop_4 = function (a, count) {\n                    var childEvent = seriesArgs.changedRecords[a];\n                    var parentEvent = seriesEvents[a];\n                    var eventCollections = _this.parent.eventBase.getEventCollections(parentEvent);\n                    var deletedEvents = eventCollections.follow.concat(eventCollections.occurrence);\n                    switch (action) {\n                        case 'EditSeries':\n                            if ((childEvent[fields_2.startTime] > parentEvent[fields_2.startTime]) && childEvent[fields_2.recurrenceRule]) {\n                                _this.processRecurrenceRule(parentEvent, childEvent);\n                            }\n                            childEvent[fields_2.id] = parentEvent[fields_2.id];\n                            childEvent[fields_2.recurrenceID] = null;\n                            childEvent[fields_2.followingID] = null;\n                            if (_this.parent.uiStateValues.isIgnoreOccurrence && childEvent[fields_2.recurrenceException]) {\n                                var originalParent = _this.parent.eventsData.filter(function (eventObj) {\n                                    return eventObj[fields_2.id] === childEvent[fields_2.id];\n                                });\n                                if (originalParent.length > 0) {\n                                    childEvent[fields_2.recurrenceRule] = originalParent[0][fields_2.recurrenceRule];\n                                }\n                            }\n                            else {\n                                childEvent[fields_2.recurrenceException] = null;\n                                editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents);\n                            }\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(childEvent, true));\n                            _this.parent.uiStateValues.isIgnoreOccurrence = false;\n                            break;\n                        case 'DeleteSeries':\n                            editParams.deletedRecords = editParams.deletedRecords.concat(deletedEvents.concat(parentEvent));\n                            isDeletedRecords = true;\n                            break;\n                    }\n                };\n                for (var a = 0, count = seriesArgs.changedRecords.length; a < count; a++) {\n                    _loop_4(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_2.id, _this.getTable(), _this.getQuery());\n                _this.parent.eventBase.selectWorkCellByTime(seriesArgs.changedRecords);\n                var crudArgs = {\n                    requestType: action === 'EditSeries' ? 'eventChanged' : 'eventRemoved',\n                    cancel: false, data: isDeletedRecords ? seriesArgs.deletedRecords : seriesArgs.changedRecords,\n                    promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processDelete = function (eventData) {\n        var _this = this;\n        var deleteData = [];\n        for (var _i = 0, eventData_5 = eventData; _i < eventData_5.length; _i++) {\n            var eventObj = eventData_5[_i];\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\n                deleteData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\n            }\n            else {\n                deleteData.push(eventObj);\n            }\n        }\n        var args = {\n            requestType: 'eventRemove', cancel: false,\n            addedRecords: [], changedRecords: [], deletedRecords: eventData\n        };\n        args.data = deleteData;\n        this.parent.trigger(events.actionBegin, args, function (deleteArgs) {\n            if (!deleteArgs.cancel) {\n                var fields_3 = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                var _loop_5 = function (a, count) {\n                    var isDelete = isNullOrUndefined(deleteArgs.deletedRecords[a][_this.parent.eventFields.recurrenceRule]);\n                    if (!isDelete) {\n                        var parentEvent_1 = deleteData[a].parent;\n                        var isEdited = editParams.changedRecords.filter(function (obj) {\n                            return obj[fields_3.id] === parentEvent_1[fields_3.id];\n                        });\n                        var editedDate = deleteArgs.deletedRecords[a][fields_3.startTime];\n                        if (isEdited.length > 0) {\n                            var editedData = isEdited[0];\n                            editedData[fields_3.recurrenceException] =\n                                _this.excludeDateCheck(editedDate, editedData[fields_3.recurrenceException]);\n                        }\n                        else {\n                            parentEvent_1[fields_3.recurrenceException] =\n                                _this.excludeDateCheck(editedDate, parentEvent_1[fields_3.recurrenceException]);\n                        }\n                        if (isEdited.length === 0) {\n                            editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEvent_1, true));\n                        }\n                        isDelete = deleteArgs.deletedRecords[a][fields_3.id] !== parentEvent_1[fields_3.id];\n                    }\n                    if (isDelete) {\n                        editParams.deletedRecords.push(deleteArgs.deletedRecords[a]);\n                    }\n                };\n                for (var a = 0, count = deleteArgs.deletedRecords.length; a < count; a++) {\n                    _loop_5(a, count);\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields_3.id, _this.getTable(), _this.getQuery());\n                var crudArgs = {\n                    requestType: 'eventRemoved', cancel: false, data: deleteArgs.deletedRecords, promise: promise, editParams: editParams\n                };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.processSave = function (data) {\n        var _this = this;\n        var eventData = (data instanceof Array) ? data : [data];\n        var editData = [];\n        for (var _i = 0, eventData_6 = eventData; _i < eventData_6.length; _i++) {\n            var eventObj = eventData_6[_i];\n            if (eventObj[this.parent.eventFields.recurrenceRule]) {\n                editData.push({ occurrence: eventObj, parent: this.getParentEvent(eventObj) });\n            }\n            else {\n                editData.push(eventObj);\n            }\n        }\n        var args = { requestType: 'eventChange', cancel: false, addedRecords: [], changedRecords: eventData, deletedRecords: [] };\n        args.data = editData;\n        this.parent.trigger(events.actionBegin, args, function (editArgs) {\n            if (!editArgs.cancel) {\n                var fields = _this.parent.eventFields;\n                var editParams = { addedRecords: [], changedRecords: [], deletedRecords: [] };\n                for (var _i = 0, _a = editArgs.changedRecords; _i < _a.length; _i++) {\n                    var record = _a[_i];\n                    if (!isNullOrUndefined(record[fields.recurrenceRule]) && isNullOrUndefined(record[fields.recurrenceException])) {\n                        var exceptionString = getRecurrenceStringFromDate(record[fields.startTime]);\n                        var parentEle = _this.getParentEvent(record);\n                        parentEle[fields.recurrenceException] = isNullOrUndefined(parentEle[fields.recurrenceException]) ?\n                            exceptionString : parentEle[fields.recurrenceException].concat(',' + exceptionString);\n                        record[fields.id] = _this.parent.getEventMaxID();\n                        record[fields.recurrenceException] = exceptionString;\n                        editParams.addedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(parentEle, true));\n                    }\n                    else {\n                        editParams.changedRecords.push(_this.parent.eventBase.processTimezone(record, true));\n                    }\n                }\n                var promise = _this.parent.dataModule.dataManager.saveChanges(editParams, fields.id, _this.getTable(), _this.getQuery());\n                var crudArgs = { requestType: 'eventChanged', cancel: false, data: editArgs.changedRecords, promise: promise, editParams: editParams };\n                _this.refreshData(crudArgs);\n            }\n        });\n    };\n    Crud.prototype.getParentEvent = function (event, isParent) {\n        if (isParent === void 0) { isParent = false; }\n        var parentEvent = this.parent.eventBase.getParentEvent(event, isParent) || event;\n        if (parentEvent[this.parent.eventFields.startTimezone] || parentEvent[this.parent.eventFields.endTimezone]) {\n            this.parent.eventBase.timezoneConvert(parentEvent);\n        }\n        return parentEvent;\n    };\n    Crud.prototype.excludeDateCheck = function (eventStartTime, exceptionDateList) {\n        var exDate = getRecurrenceStringFromDate(eventStartTime);\n        if (!isNullOrUndefined(exceptionDateList)) {\n            if (exceptionDateList.indexOf(exDate) === -1) {\n                exceptionDateList = !(isNullOrUndefined(exceptionDateList)) ? exceptionDateList + ',' + exDate : exDate;\n            }\n        }\n        else {\n            exceptionDateList = exDate;\n        }\n        return exceptionDateList;\n    };\n    Crud.prototype.processRecurrenceRule = function (parentEvent, followEvent) {\n        var fields = this.parent.eventFields;\n        var recurrenceRule = parentEvent[fields.recurrenceRule];\n        var endDate;\n        if (followEvent instanceof Date) {\n            endDate = new Date(+followEvent);\n        }\n        else {\n            endDate = new Date(+followEvent[fields.startTime]);\n            var newRecurrenceRule = followEvent[fields.recurrenceRule];\n            var startDate = parentEvent[fields.startTime];\n            var ruleException = (this.parent.currentAction === 'DeleteFollowingEvents') ? followEvent[fields.recurrenceException] : null;\n            var dateCollection = generate(startDate, newRecurrenceRule, ruleException, this.parent.activeViewOptions.firstDayOfWeek);\n            var untilDate = new Date(dateCollection.slice(-1)[0]);\n            untilDate.setHours(endDate.getHours(), endDate.getMinutes(), endDate.getSeconds());\n            endDate.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds());\n            followEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(newRecurrenceRule, new Date(+untilDate), false);\n        }\n        parentEvent[fields.recurrenceRule] = this.getUpdatedRecurrenceRule(recurrenceRule, util.addDays(new Date(endDate.getTime()), -1), true);\n    };\n    Crud.prototype.getUpdatedRecurrenceRule = function (recurrenceRule, untilDate, isParent) {\n        var splitRule = recurrenceRule.split(';');\n        var updatedRule = '';\n        for (var _i = 0, splitRule_1 = splitRule; _i < splitRule_1.length; _i++) {\n            var rule = splitRule_1[_i];\n            if (rule !== '') {\n                var ruleKey = rule.split('=')[0];\n                var ruleValue = rule.split('=')[1];\n                if (ruleKey === 'COUNT' || ruleKey === 'UNTIL') {\n                    ruleValue = getRecurrenceStringFromDate(untilDate);\n                    rule = rule.replace(rule, 'UNTIL=' + ruleValue);\n                }\n                updatedRule += rule + ';';\n            }\n        }\n        if (isParent && updatedRule.indexOf('UNTIL') === -1) {\n            updatedRule += 'UNTIL=' + getRecurrenceStringFromDate(untilDate);\n        }\n        return updatedRule;\n    };\n    Crud.prototype.isBlockEvent = function (eventData) {\n        var eventCollection = (eventData instanceof Array) ? eventData : [eventData];\n        var value = false;\n        for (var _i = 0, eventCollection_1 = eventCollection; _i < eventCollection_1.length; _i++) {\n            var event_8 = eventCollection_1[_i];\n            value = event_8[this.parent.eventFields.isBlock] || false;\n        }\n        return value;\n    };\n    /**\n     * To destroy the crud module.\n     *\n     * @returns {void}\n     * @private\n     */\n    Crud.prototype.destroy = function () {\n        this.crudObj = null;\n        this.parent = null;\n    };\n    return Crud;\n}());\nexport { Crud };\n"]},"metadata":{},"sourceType":"module"}