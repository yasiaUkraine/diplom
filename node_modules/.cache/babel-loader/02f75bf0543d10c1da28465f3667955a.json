{"ast":null,"code":"var _jsxFileName = \"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatCreate = props => {\n  const {\n    setUserCurrent,\n    userCurrent,\n    idUser\n  } = props;\n\n  const getPrimary = (value, duration) => {\n    if (duration === 'Frontend Developer') {\n      return 'JavaScript, HTML, CSS';\n    } else {\n      if (duration === 'Backend Developer') {\n        return value;\n      } else {\n        return 'QA test';\n      }\n    }\n  };\n\n  const getUnit = (duration, unit) => {\n    return `Digital Engagement Practice/Digital Technology/\n                DEP UA/DEP UA East & West/DEP UA East/${duration}/\n                ${unit}`;\n  };\n\n  const getManager = value => {\n    switch (value) {\n      case 'ReactJS':\n      case 'Java':\n      case 'Automated Test Specialists':\n        return 'Lochlan Cottrell';\n\n      case 'React Native':\n      case '.NET':\n      case 'DBMS testers':\n        return 'Yasin Huang';\n\n      case 'AngularJS':\n      case 'PHP':\n      case 'Test Analysts':\n        return 'Amanpreet Cowan';\n\n      case 'NodeJS':\n      case 'Python':\n      case 'Developers-testers':\n        return 'Dewi Dunlap';\n\n      case 'Vue':\n      case 'C++':\n      case 'Testers-DevOPs':\n        return 'Tonya Chang';\n\n      case 'BabelJs':\n      default:\n        return 'Kendall Bolton';\n    }\n  };\n\n  const handleEnd = async ({\n    steps,\n    values\n  }) => {\n    const user = {};\n    user.duration = values[1];\n    user.profession = values[2];\n    user.status = values[0];\n    user.address = values[4];\n    user.phone = values[3];\n    user.displayName = userCurrent.displayName;\n    user.new = false;\n    user.email = userCurrent.email;\n    user.primary = getPrimary(user.profession, user.duration);\n    user.unit = getUnit(user.duration, user.profession);\n    user.unitManager = getManager(user.profession);\n    setUserCurrent(user);\n    console.log(123, user, idUser);\n    firestore.collection('users').doc(idUser).update({\n      new: false,\n      duration: values[1],\n      profession: values[2],\n      status: values[0],\n      address: values[4],\n      phone: values[3]\n    }).then(() => {\n      console.log('User updated!');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatBot, {\n    steps: stepsStart,\n    handleEnd: handleEnd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatCreate;\nChatCreate.propTypes = {\n  steps: PropTypes.object\n};\nChatCreate.defaultProps = {\n  steps: undefined\n};\nexport default ChatCreate;\nexport const stepsStart = [{\n  id: '1',\n  message: 'What is your position??',\n  trigger: 'position'\n}, {\n  id: 'position',\n  options: [{\n    value: 'Junior',\n    label: 'Junior',\n    trigger: '2'\n  }, {\n    value: 'Middle',\n    label: 'Middle',\n    trigger: '2'\n  }, {\n    value: 'Senior',\n    label: 'Senior',\n    trigger: '2'\n  }, {\n    value: 'Lead',\n    label: 'Lead',\n    trigger: '2'\n  }]\n}, {\n  id: '2',\n  message: 'What is your global direction?',\n  trigger: 'duration'\n}, {\n  id: 'duration',\n  options: [{\n    value: 'Frontend Developer',\n    label: 'Frontend Developer',\n    trigger: 'front'\n  }, {\n    value: 'Backend Developer',\n    label: 'Backend Developer',\n    trigger: 'back'\n  }, {\n    value: 'Testers',\n    label: 'Testers',\n    trigger: 'test'\n  }]\n}, {\n  id: '9',\n  user: true,\n  trigger: '3'\n}, {\n  id: 'front',\n  message: 'What is your key technology?',\n  trigger: 'front_options'\n}, {\n  id: 'front_options',\n  options: [{\n    value: 'ReactJS',\n    label: 'ReactJS',\n    trigger: '3'\n  }, {\n    value: 'React Native',\n    label: 'React Native',\n    trigger: '3'\n  }, {\n    value: 'AngularJS',\n    label: 'AngularJS',\n    trigger: '3'\n  }, {\n    value: 'NodeJS',\n    label: 'NodeJS',\n    trigger: '3'\n  }, {\n    value: 'Vue',\n    label: 'Vue',\n    trigger: '3'\n  }, {\n    value: 'BabelJs',\n    label: 'BabelJs',\n    trigger: '3'\n  }]\n}, {\n  id: 'back',\n  message: 'What is your key technology?',\n  trigger: 'back_options'\n}, {\n  id: 'back_options',\n  options: [{\n    value: 'Java',\n    label: 'Java',\n    trigger: '3'\n  }, {\n    value: '.NET',\n    label: '.NET',\n    trigger: '3'\n  }, {\n    value: 'PHP',\n    label: 'PHP',\n    trigger: '3'\n  }, {\n    value: 'Python',\n    label: 'Python',\n    trigger: '3'\n  }, {\n    value: 'C++',\n    label: 'C++',\n    trigger: '3'\n  }]\n}, {\n  id: 'test',\n  message: 'What is your key technology?',\n  trigger: 'test_options'\n}, {\n  id: 'test_options',\n  options: [{\n    value: 'Automated Test Specialists',\n    label: 'Automated Test Specialists',\n    trigger: '3'\n  }, {\n    value: 'DBMS testers',\n    label: 'DBMS testers',\n    trigger: '3'\n  }, {\n    value: 'Test Analysts',\n    label: 'Test Analysts',\n    trigger: '3'\n  }, {\n    value: 'Developers-testers',\n    label: 'Developers-testers',\n    trigger: '3'\n  }, {\n    value: 'Testers-DevOPs',\n    label: 'Testers-DevOPs',\n    trigger: '3'\n  }]\n}, {\n  id: '3',\n  message: 'What is your phone?',\n  trigger: 'phone'\n}, {\n  id: 'phone',\n  user: true,\n  trigger: '4',\n  validator: value => {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value < 9) {\n      return `Your enter incorrect number`;\n    }\n\n    return true;\n  }\n}, {\n  id: '4',\n  message: 'What is your office address?',\n  trigger: 'address'\n}, {\n  id: 'address',\n  options: [{\n    value: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`,\n    label: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`,\n    trigger: 'end'\n  }, {\n    value: `5200 Yonge Street North York, ON M2N 5P6 Canada`,\n    label: `5200 Yonge Street North York, ON M2N 5P6 Canada`,\n    trigger: 'end'\n  }, {\n    value: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`,\n    label: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`,\n    trigger: 'end'\n  }]\n}, {\n  id: 'end',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatCreate\");","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js"],"names":["ChatBot","PropTypes","firestore","ChatCreate","props","setUserCurrent","userCurrent","idUser","getPrimary","value","duration","getUnit","unit","getManager","handleEnd","steps","values","user","profession","status","address","phone","displayName","new","email","primary","unitManager","console","log","collection","doc","update","then","stepsStart","propTypes","object","defaultProps","undefined","id","message","trigger","options","label","validator","isNaN","end"],"mappings":"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","sourcesContent":["\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore } from '../firebase';\n\nconst ChatCreate = (props) => {\n    const { setUserCurrent, userCurrent, idUser} = props;\n\n    const getPrimary = (value, duration) => {\n        if(duration === 'Frontend Developer' ) {\n            return 'JavaScript, HTML, CSS';\n        } else {\n            if(duration === 'Backend Developer') {\n                return value;\n            } else {\n                return 'QA test'\n            }\n        }\n    }\n\n    const getUnit = (duration, unit) => {\n        return `Digital Engagement Practice/Digital Technology/\n                DEP UA/DEP UA East & West/DEP UA East/${duration}/\n                ${unit}`\n    }\n    \n    const getManager = (value) => {\n        switch (value) {\n            case 'ReactJS':\n            case 'Java':\n                case 'Automated Test Specialists': return 'Lochlan Cottrell';\n            case 'React Native':\n            case '.NET':\n                case 'DBMS testers': return 'Yasin Huang';\n            case 'AngularJS':\n            case 'PHP':\n                case 'Test Analysts': return 'Amanpreet Cowan';\n            case 'NodeJS':\n            case 'Python':\n                case 'Developers-testers': return 'Dewi Dunlap';\n            case 'Vue':\n            case 'C++':\n                case 'Testers-DevOPs': return 'Tonya Chang';\n            case 'BabelJs': \n            default: return 'Kendall Bolton';\n        }\n    }\n\n    const handleEnd = async ({ steps, values }) => {\n        const user = {};\n        user.duration = values[1];\n        user.profession = values[2];\n        user.status = values[0];\n        user.address = values[4];\n        user.phone = values[3];\n        user.displayName = userCurrent.displayName;\n        user.new = false;\n        user.email = userCurrent.email;\n        user.primary = getPrimary(user.profession, user.duration);\n        user.unit = getUnit(user.duration, user.profession);\n        user.unitManager = getManager(user.profession);\n\n        setUserCurrent(user);\n        console.log(123, user ,idUser);\n        firestore\n        .collection('users')\n        .doc(idUser)\n        .update({\n            new: false,\n            duration : values[1],\n            profession : values[2],\n            status: values[0],\n            address: values[4],\n            phone : values[3],\n        })\n        .then(() => {\n            console.log('User updated!');\n        });\n      }\n\n    return (\n        <ChatBot\n          steps={stepsStart}\n          handleEnd={handleEnd}\n        />\n    );\n}\n  \n  ChatCreate.propTypes = {\n    steps: PropTypes.object,\n  };\n  \n  ChatCreate.defaultProps = {\n    steps: undefined,\n  };\n  \n  export default ChatCreate;\n\n  export const stepsStart = [\n      {\n        id: '1',\n        message: 'What is your position??',\n        trigger: 'position',\n      },\n      {\n        id: 'position',\n        options: [\n          { value: 'Junior', label: 'Junior', trigger: '2' },\n          { value: 'Middle', label: 'Middle', trigger: '2' },\n          { value: 'Senior', label: 'Senior', trigger: '2' },\n          { value: 'Lead', label: 'Lead', trigger: '2' },\n        ],\n      },\n      {\n        id: '2',\n        message: 'What is your global direction?',\n        trigger: 'duration',\n      },\n      {\n        id: 'duration',\n        options: [\n          { value: 'Frontend Developer', label: 'Frontend Developer', trigger: 'front' },\n          { value: 'Backend Developer', label: 'Backend Developer', trigger: 'back' },\n          { value: 'Testers', label: 'Testers', trigger: 'test' },\n        ],\n      },\n      {\n        id: '9',\n        user: true,\n        trigger: '3',\n      },\n      {\n        id: 'front',\n        message: 'What is your key technology?',\n        trigger: 'front_options',\n      },\n      {\n        id: 'front_options',\n        options: [\n          { value: 'ReactJS', label: 'ReactJS', trigger: '3' },\n          { value: 'React Native', label: 'React Native', trigger: '3' },\n          { value: 'AngularJS', label: 'AngularJS', trigger: '3' },\n          { value: 'NodeJS', label: 'NodeJS', trigger: '3' },\n          { value: 'Vue', label: 'Vue', trigger: '3' },  \n          { value: 'BabelJs', label: 'BabelJs', trigger: '3' },\n        ],\n      },\n      {\n        id: 'back',\n        message: 'What is your key technology?',\n        trigger: 'back_options',\n      },\n      {\n        id: 'back_options',\n        options: [\n          { value: 'Java', label: 'Java', trigger: '3' },\n          { value: '.NET', label: '.NET', trigger: '3' },\n          { value: 'PHP', label: 'PHP', trigger: '3' },\n          { value: 'Python', label: 'Python', trigger: '3' },\n          { value: 'C++', label: 'C++', trigger: '3' },  \n        ],\n      },\n      {\n        id: 'test',\n        message: 'What is your key technology?',\n        trigger: 'test_options',\n      },\n      {\n        id: 'test_options',\n        options: [\n          { value: 'Automated Test Specialists', label: 'Automated Test Specialists', trigger: '3' },\n          { value: 'DBMS testers', label: 'DBMS testers', trigger: '3' },\n          { value: 'Test Analysts', label: 'Test Analysts', trigger: '3' },\n          { value: 'Developers-testers', label: 'Developers-testers', trigger: '3' },\n          { value: 'Testers-DevOPs', label: 'Testers-DevOPs', trigger: '3' },  \n        ],\n      },\n      {\n        id: '3',\n        message: 'What is your phone?',\n        trigger: 'phone',\n      },\n      {\n        id: 'phone',\n        user: true,\n        trigger: '4',\n        validator: (value) => {\n          if (isNaN(value)) {\n            return 'value must be a number';\n          } else if (value < 0) {\n            return 'value must be positive';\n          } else if (value < 9) {\n            return `Your enter incorrect number`;\n          }\n\n          return true;\n        },\n      },\n      {\n        id: '4',\n        message: 'What is your office address?',\n        trigger: 'address',\n      },\n      {\n        id: 'address',\n        options: [\n          { value: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`, \n            label: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`, \n            trigger: 'end' },\n          { value: `5200 Yonge Street North York, ON M2N 5P6 Canada`, \n            label: `5200 Yonge Street North York, ON M2N 5P6 Canada`, \n            trigger: 'end' },\n          { value: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`, \n            label: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`, \n            trigger: 'end' },\n        ],\n      },\n      {\n        id: 'end',\n        message: 'Thanks! Your data was submitted successfully!',\n        end: true,\n      },\n];"]},"metadata":{},"sourceType":"module"}