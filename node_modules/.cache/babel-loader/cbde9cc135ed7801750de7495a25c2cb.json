{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Component, EventHandler, addClass, append, Property, Event, L10n, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, extend, removeClass, prepend, isNullOrUndefined, detach, getValue } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, rippleEffect, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor, remove, select, selectAll } from '@syncfusion/ej2-base';\n\nvar FieldSettings =\n/** @class */\nfunction (_super) {\n  __extends(FieldSettings, _super);\n\n  function FieldSettings() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  __decorate([Property()], FieldSettings.prototype, \"text\", void 0);\n\n  __decorate([Property()], FieldSettings.prototype, \"value\", void 0);\n\n  __decorate([Property()], FieldSettings.prototype, \"iconCss\", void 0);\n\n  __decorate([Property()], FieldSettings.prototype, \"groupBy\", void 0);\n\n  __decorate([Property()], FieldSettings.prototype, \"htmlAttributes\", void 0);\n\n  return FieldSettings;\n}(ChildProperty);\n\nexport { FieldSettings };\nexport var dropDownBaseClasses = {\n  root: 'e-dropdownbase',\n  rtl: 'e-rtl',\n  content: 'e-content',\n  selected: 'e-active',\n  hover: 'e-hover',\n  noData: 'e-nodata',\n  fixedHead: 'e-fixed-head',\n  focus: 'e-item-focus',\n  li: 'e-list-item',\n  group: 'e-list-group-item',\n  disabled: 'e-disabled',\n  grouping: 'e-dd-group'\n};\nvar ITEMTEMPLATE_PROPERTY = 'ItemTemplate';\nvar VALUETEMPLATE_PROPERTY = 'ValueTemplate';\nvar GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nvar FOOTERTEMPLATE_PROPERTY = 'FooterTemplate';\nvar NORECORDSTEMPLATE_PROPERTY = 'NoRecordsTemplate';\nvar ACTIONFAILURETEMPLATE_PROPERTY = 'ActionFailureTemplate';\n/**\n * DropDownBase component will generate the list items based on given data and act as base class to drop-down related components\n */\n\nvar DropDownBase =\n/** @class */\nfunction (_super) {\n  __extends(DropDownBase, _super);\n  /**\n   * * Constructor for DropDownBase class\n   *\n   * @param {DropDownBaseModel} options - Specifies the DropDownBase model.\n   * @param {string | HTMLElement} element - Specifies the element to render as component.\n   * @private\n   */\n\n\n  function DropDownBase(options, element) {\n    var _this = _super.call(this, options, element) || this;\n\n    _this.preventChange = false;\n    _this.isAngular = false;\n    _this.isPreventChange = false;\n    return _this;\n  }\n\n  DropDownBase.prototype.getPropObject = function (prop, newProp, oldProp) {\n    var newProperty = new Object();\n    var oldProperty = new Object();\n\n    var propName = function (prop) {\n      return prop;\n    };\n\n    newProperty[propName(prop)] = newProp[propName(prop)];\n    oldProperty[propName(prop)] = oldProp[propName(prop)];\n    var data = new Object();\n    data.newProperty = newProperty;\n    data.oldProperty = oldProperty;\n    return data;\n  };\n\n  DropDownBase.prototype.getValueByText = function (text, ignoreCase, ignoreAccent) {\n    var value = null;\n\n    if (!isNullOrUndefined(this.listData)) {\n      if (ignoreCase) {\n        value = this.checkValueCase(text, true, ignoreAccent);\n      } else {\n        value = this.checkValueCase(text, false, ignoreAccent);\n      }\n    }\n\n    return value;\n  };\n\n  DropDownBase.prototype.checkValueCase = function (text, ignoreCase, ignoreAccent, isTextByValue) {\n    var _this = this;\n\n    var value = null;\n\n    if (isTextByValue) {\n      value = text;\n    }\n\n    var dataSource = this.listData;\n    var fields = this.fields;\n    var type = this.typeOfData(dataSource).typeof;\n\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n      for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n        var item = dataSource_1[_i];\n\n        if (!isNullOrUndefined(item)) {\n          if (ignoreAccent) {\n            value = this.checkingAccent(String(item), text, ignoreCase);\n          } else {\n            if (ignoreCase) {\n              if (this.checkIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n              }\n            } else {\n              if (this.checkNonIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase, isTextByValue);\n              }\n            }\n          }\n        }\n      }\n    } else {\n      if (ignoreCase) {\n        dataSource.filter(function (item) {\n          var itemValue = getValue(fields.value, item);\n\n          if (!isNullOrUndefined(itemValue) && _this.checkIgnoreCase(getValue(fields.text, item).toString(), text)) {\n            value = getValue(fields.value, item);\n          }\n        });\n      } else {\n        if (isTextByValue) {\n          dataSource.filter(function (item) {\n            var itemValue = getValue(fields.value, item);\n\n            if (!isNullOrUndefined(itemValue) && !isNullOrUndefined(value) && itemValue.toString() === value.toString()) {\n              value = getValue(fields.text, item);\n            }\n          });\n        } else {\n          dataSource.filter(function (item) {\n            if (_this.checkNonIgnoreCase(getValue(fields.text, item), text)) {\n              value = getValue(fields.value, item);\n            }\n          });\n        }\n      }\n    }\n\n    return value;\n  };\n\n  DropDownBase.prototype.checkingAccent = function (item, text, ignoreCase) {\n    var dataItem = DataUtil.ignoreDiacritics(String(item));\n    var textItem = DataUtil.ignoreDiacritics(text.toString());\n    var value = null;\n\n    if (ignoreCase) {\n      if (this.checkIgnoreCase(dataItem, textItem)) {\n        value = this.getItemValue(String(item), text, ignoreCase);\n      }\n    } else {\n      if (this.checkNonIgnoreCase(String(item), text)) {\n        value = this.getItemValue(String(item), text, ignoreCase);\n      }\n    }\n\n    return value;\n  };\n\n  DropDownBase.prototype.checkIgnoreCase = function (item, text) {\n    return String(item).toLowerCase() === text.toString().toLowerCase() ? true : false;\n  };\n\n  DropDownBase.prototype.checkNonIgnoreCase = function (item, text) {\n    return String(item) === text.toString() ? true : false;\n  };\n\n  DropDownBase.prototype.getItemValue = function (dataItem, typedText, ignoreCase, isTextByValue) {\n    var value = null;\n    var dataSource = this.listData;\n    var type = this.typeOfData(dataSource).typeof;\n\n    if (isTextByValue) {\n      value = dataItem.toString();\n    } else {\n      if (ignoreCase) {\n        value = type === 'string' ? String(dataItem) : this.getFormattedValue(String(dataItem));\n      } else {\n        value = type === 'string' ? typedText : this.getFormattedValue(typedText);\n      }\n    }\n\n    return value;\n  };\n\n  DropDownBase.prototype.templateCompiler = function (baseTemplate) {\n    var checkTemplate = false;\n\n    if (baseTemplate) {\n      try {\n        checkTemplate = selectAll(baseTemplate, document).length ? true : false;\n      } catch (exception) {\n        checkTemplate = false;\n      }\n    }\n\n    return checkTemplate;\n  };\n\n  DropDownBase.prototype.l10nUpdate = function (actionFailure) {\n    var ele = this.getModuleName() === 'listbox' ? this.ulElement : this.list;\n\n    if (this.noRecordsTemplate !== 'No records found' || this.actionFailureTemplate !== 'Request failed') {\n      this.DropDownBaseresetBlazorTemplates(false, false, true, true);\n      var template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n      var compiledString = void 0;\n      var templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n      ele.innerHTML = '';\n      var tempaltecheck = this.templateCompiler(template);\n\n      if (tempaltecheck) {\n        compiledString = compile(select(template, document).innerHTML.trim());\n      } else {\n        compiledString = compile(template);\n      }\n\n      var templateName = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate'; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n      var noDataCompTemp = compiledString({}, this, templateName, templateId, this.isStringTemplate, null, ele);\n\n      if (noDataCompTemp && noDataCompTemp.length > 0) {\n        for (var i = 0; i < noDataCompTemp.length; i++) {\n          ele.appendChild(noDataCompTemp[i]);\n        }\n      }\n\n      this.DropDownBaseupdateBlazorTemplates(false, false, !actionFailure, actionFailure, false, false, false, false);\n    } else {\n      var l10nLocale = {\n        noRecordsTemplate: 'No records found',\n        actionFailureTemplate: 'Request failed'\n      };\n      var componentLocale = new L10n(this.getLocaleName(), {}, this.locale);\n\n      if (componentLocale.getConstant('actionFailureTemplate') !== '') {\n        this.l10n = componentLocale;\n      } else {\n        this.l10n = new L10n(this.getModuleName() === 'listbox' ? 'listbox' : 'dropdowns', l10nLocale, this.locale);\n      }\n\n      var content = actionFailure ? this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n\n      if (this.getModuleName() === 'listbox') {\n        var liElem = this.createElement('li');\n        liElem.textContent = content;\n        ele.appendChild(liElem);\n        liElem.classList.add('e-list-nrt');\n      } else {\n        ele.innerHTML = content;\n      }\n    }\n  };\n\n  DropDownBase.prototype.getLocaleName = function () {\n    return 'drop-down-base';\n  };\n\n  DropDownBase.prototype.getTextByValue = function (value) {\n    var text = this.checkValueCase(value, false, false, true);\n    return text;\n  };\n\n  DropDownBase.prototype.getFormattedValue = function (value) {\n    if (this.listData && this.listData.length) {\n      var item = this.typeOfData(this.listData);\n\n      if (isBlazor() && isNullOrUndefined(value) || value === 'null') {\n        return null;\n      }\n\n      if (typeof getValue(this.fields.value ? this.fields.value : 'value', item.item) === 'number' || item.typeof === 'number') {\n        return parseFloat(value);\n      }\n\n      if (typeof getValue(this.fields.value ? this.fields.value : 'value', item.item) === 'boolean' || item.typeof === 'boolean') {\n        return value === 'true' || '' + value === 'true';\n      }\n    }\n\n    return value;\n  };\n  /**\n   * Sets RTL to dropdownbase wrapper\n   *\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.setEnableRtl = function () {\n    if (this.list) {\n      this.enableRtlElements.push(this.list);\n    }\n\n    if (this.enableRtl) {\n      addClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n    } else {\n      removeClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n    }\n  };\n  /**\n   * Initialize the Component.\n   *\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.initialize = function () {\n    this.bindEvent = true;\n    this.actionFailureTemplateId = \"\" + this.element.id + ACTIONFAILURETEMPLATE_PROPERTY;\n\n    if (this.element.tagName === 'UL') {\n      var jsonElement = ListBase.createJsonFromElement(this.element);\n      this.setProperties({\n        fields: {\n          text: 'text',\n          value: 'text'\n        }\n      }, true);\n      this.resetList(jsonElement, this.fields);\n    } else if (this.element.tagName === 'SELECT') {\n      var dataSource = this.dataSource instanceof Array ? this.dataSource.length > 0 ? true : false : !isNullOrUndefined(this.dataSource) ? true : false;\n\n      if (!dataSource) {\n        this.renderItemsBySelect();\n      }\n    } else {\n      this.setListData(this.dataSource, this.fields, this.query);\n    }\n  };\n\n  DropDownBase.prototype.DropDownBaseupdateBlazorTemplates = function (item, group, noRecord, action, value, header, footer, isEmpty) {\n    if (!this.isStringTemplate) {\n      if (this.itemTemplate && item) {\n        updateBlazorTemplate(this.itemTemplateId, ITEMTEMPLATE_PROPERTY, this, isEmpty);\n      }\n\n      if (this.groupTemplate && group) {\n        updateBlazorTemplate(this.groupTemplateId, GROUPTEMPLATE_PROPERTY, this, isEmpty);\n      }\n\n      if (this.noRecordsTemplate && noRecord) {\n        updateBlazorTemplate(this.noRecordsTemplateId, NORECORDSTEMPLATE_PROPERTY, this, isEmpty);\n      }\n\n      if (this.actionFailureTemplate && action) {\n        updateBlazorTemplate(this.actionFailureTemplateId, ACTIONFAILURETEMPLATE_PROPERTY, this, isEmpty);\n      }\n\n      if (value) {\n        updateBlazorTemplate(this.valueTemplateId, VALUETEMPLATE_PROPERTY, this, isEmpty);\n      }\n\n      if (header) {\n        updateBlazorTemplate(this.headerTemplateId, HEADERTEMPLATE_PROPERTY, this);\n      }\n\n      if (footer) {\n        updateBlazorTemplate(this.footerTemplateId, FOOTERTEMPLATE_PROPERTY, this);\n      }\n    }\n  };\n\n  DropDownBase.prototype.DropDownBaseresetBlazorTemplates = function (item, group, noRecord, action, value, header, footer) {\n    if (!this.isStringTemplate) {\n      if (this.itemTemplate && item) {\n        resetBlazorTemplate(this.itemTemplateId, ITEMTEMPLATE_PROPERTY);\n      }\n\n      if (this.groupTemplate && group) {\n        resetBlazorTemplate(this.groupTemplateId, GROUPTEMPLATE_PROPERTY);\n      }\n\n      if (this.noRecordsTemplate && noRecord) {\n        resetBlazorTemplate(this.noRecordsTemplateId, NORECORDSTEMPLATE_PROPERTY);\n      }\n\n      if (this.actionFailureTemplate && action) {\n        resetBlazorTemplate(this.actionFailureTemplateId, ACTIONFAILURETEMPLATE_PROPERTY);\n      }\n\n      if (value) {\n        resetBlazorTemplate(this.valueTemplateId, VALUETEMPLATE_PROPERTY);\n      }\n\n      if (header) {\n        resetBlazorTemplate(this.headerTemplateId, HEADERTEMPLATE_PROPERTY);\n      }\n\n      if (footer) {\n        resetBlazorTemplate(this.footerTemplateId, FOOTERTEMPLATE_PROPERTY);\n      }\n    }\n  };\n  /**\n   * Get the properties to be maintained in persisted state.\n   *\n   * @returns {string} Returns the persisted data of the component.\n   */\n\n\n  DropDownBase.prototype.getPersistData = function () {\n    return this.addOnPersist([]);\n  };\n  /**\n   * Sets the enabled state to DropDownBase.\n   *\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.setEnabled = function () {\n    this.element.setAttribute('aria-disabled', this.enabled ? 'false' : 'true');\n  };\n  /**\n   * Sets the enabled state to DropDownBase.\n   *\n   * @param {string} value - Specifies the attribute values to add on the input element.\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.updateDataAttribute = function (value) {\n    var invalidAttr = ['class', 'style', 'id', 'type'];\n    var attr = {};\n\n    for (var a = 0; a < this.element.attributes.length; a++) {\n      if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 && !(this.getModuleName() === 'dropdownlist' && this.element.attributes[a].name === 'readonly')) {\n        attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n      }\n    }\n\n    extend(attr, value, attr);\n    this.setProperties({\n      htmlAttributes: attr\n    }, true);\n  };\n\n  DropDownBase.prototype.renderItemsBySelect = function () {\n    var element = this.element;\n    var fields = {\n      value: 'value',\n      text: 'text'\n    };\n    var jsonElement = [];\n    var group = element.querySelectorAll('select>optgroup');\n    var option = element.querySelectorAll('select>option');\n    this.getJSONfromOption(jsonElement, option, fields);\n\n    if (group.length) {\n      for (var i = 0; i < group.length; i++) {\n        var item = group[i];\n        var optionGroup = {};\n        optionGroup[fields.text] = item.label;\n        optionGroup.isHeader = true;\n        var child = item.querySelectorAll('option');\n        jsonElement.push(optionGroup);\n        this.getJSONfromOption(jsonElement, child, fields);\n      }\n\n      element.querySelectorAll('select>option');\n    }\n\n    this.updateFields(fields.text, fields.value, this.fields.groupBy, this.fields.htmlAttributes, this.fields.iconCss);\n    this.resetList(jsonElement, fields);\n  };\n\n  DropDownBase.prototype.updateFields = function (text, value, groupBy, htmlAttributes, iconCss) {\n    var field = {\n      'fields': {\n        text: text,\n        value: value,\n        groupBy: !isNullOrUndefined(groupBy) ? groupBy : this.fields && this.fields.groupBy,\n        htmlAttributes: !isNullOrUndefined(htmlAttributes) ? htmlAttributes : this.fields && this.fields.htmlAttributes,\n        iconCss: !isNullOrUndefined(iconCss) ? iconCss : this.fields && this.fields.iconCss\n      }\n    };\n    this.setProperties(field, true);\n  };\n\n  DropDownBase.prototype.getJSONfromOption = function (items, options, fields) {\n    for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n      var option = options_1[_i];\n      var json = {};\n      json[fields.text] = option.innerText;\n      json[fields.value] = !isNullOrUndefined(option.getAttribute(fields.value)) ? option.getAttribute(fields.value) : option.innerText;\n      items.push(json);\n    }\n  };\n  /**\n   * Execute before render the list items\n   *\n   * @private\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.preRender = function () {\n    // there is no event handler\n    this.scrollTimer = -1;\n    this.enableRtlElements = [];\n    this.isRequested = false;\n    this.isDataFetched = false;\n    this.itemTemplateId = \"\" + this.element.id + ITEMTEMPLATE_PROPERTY;\n    this.valueTemplateId = \"\" + this.element.id + VALUETEMPLATE_PROPERTY;\n    this.groupTemplateId = \"\" + this.element.id + GROUPTEMPLATE_PROPERTY;\n    this.headerTemplateId = \"\" + this.element.id + HEADERTEMPLATE_PROPERTY;\n    this.footerTemplateId = \"\" + this.element.id + FOOTERTEMPLATE_PROPERTY;\n    this.noRecordsTemplateId = \"\" + this.element.id + NORECORDSTEMPLATE_PROPERTY;\n  };\n  /**\n   * Creates the list items of DropDownBase component.\n   *\n   * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.setListData = function (dataSource, fields, query) {\n    var _this = this;\n\n    fields = fields ? fields : this.fields;\n    var ulElement;\n    this.isActive = true;\n    var eventArgs = {\n      cancel: false,\n      data: dataSource,\n      query: query\n    };\n    this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n    this.trigger('actionBegin', eventArgs, function (eventArgs) {\n      if (!eventArgs.cancel) {\n        _this.showSpinner();\n\n        if (dataSource instanceof DataManager) {\n          _this.isRequested = true;\n\n          if (_this.isDataFetched) {\n            _this.emptyDataRequest(fields);\n\n            return;\n          }\n\n          eventArgs.data.executeQuery(_this.getQuery(eventArgs.query)).then(function (e) {\n            _this.isPreventChange = _this.isAngular && _this.preventChange ? true : _this.isPreventChange;\n\n            _this.trigger('actionComplete', e, function (e) {\n              if (!e.cancel) {\n                var listItems = e.result;\n\n                if (listItems.length === 0) {\n                  _this.isDataFetched = true;\n                }\n\n                ulElement = _this.renderItems(listItems, fields);\n\n                _this.onActionComplete(ulElement, listItems, e);\n\n                if (_this.groupTemplate) {\n                  _this.renderGroupTemplate(ulElement);\n                }\n\n                _this.isRequested = false;\n\n                _this.bindChildItems(listItems, ulElement, fields, e);\n              }\n            });\n          }).catch(function (e) {\n            _this.isRequested = false;\n\n            _this.onActionFailure(e);\n\n            _this.hideSpinner();\n          });\n        } else {\n          var dataManager = new DataManager(eventArgs.data);\n\n          var listItems = _this.getQuery(eventArgs.query).executeLocal(dataManager);\n\n          var localDataArgs = {\n            cancel: false,\n            result: listItems\n          };\n          _this.isPreventChange = _this.isAngular && _this.preventChange ? true : _this.isPreventChange;\n\n          _this.trigger('actionComplete', localDataArgs, function (localDataArgs) {\n            if (!localDataArgs.cancel) {\n              ulElement = _this.renderItems(localDataArgs.result, fields);\n\n              _this.onActionComplete(ulElement, localDataArgs.result);\n\n              if (_this.groupTemplate) {\n                _this.renderGroupTemplate(ulElement);\n              }\n\n              _this.bindChildItems(localDataArgs.result, ulElement, fields);\n            }\n          });\n        }\n      }\n    });\n  };\n\n  DropDownBase.prototype.bindChildItems = function (listItems, ulElement, fields, e) {\n    var _this = this;\n\n    if (listItems.length >= 100 && this.getModuleName() === 'autocomplete') {\n      setTimeout(function () {\n        var childNode = _this.remainingItems(_this.sortedData, fields);\n\n        append(childNode, ulElement);\n\n        _this.DropDownBaseupdateBlazorTemplates(true, false, false, false);\n\n        _this.liCollections = _this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n\n        _this.updateListValues();\n\n        _this.raiseDataBound(listItems, e);\n      }, 0);\n    } else {\n      this.raiseDataBound(listItems, e);\n    }\n  };\n\n  DropDownBase.prototype.updateListValues = function () {// Used this method in component side.\n  };\n\n  DropDownBase.prototype.findListElement = function (list, findNode, attribute, value) {\n    var liElement = null;\n\n    if (list) {\n      var listArr = [].slice.call(list.querySelectorAll(findNode));\n\n      for (var index = 0; index < listArr.length; index++) {\n        if (listArr[index].getAttribute(attribute) === value + '') {\n          liElement = listArr[index];\n          break;\n        }\n      }\n    }\n\n    return liElement;\n  };\n\n  DropDownBase.prototype.raiseDataBound = function (listItems, e) {\n    this.hideSpinner();\n    var dataBoundEventArgs = {\n      items: listItems,\n      e: e\n    };\n    this.trigger('dataBound', dataBoundEventArgs);\n  };\n\n  DropDownBase.prototype.remainingItems = function (dataSource, fields) {\n    var spliceData = new DataManager(dataSource).executeLocal(new Query().skip(100));\n\n    if (this.itemTemplate) {\n      var listElements = this.templateListItem(spliceData, fields);\n      return [].slice.call(listElements.childNodes);\n    }\n\n    var type = this.typeOfData(spliceData).typeof;\n\n    if (type === 'string' || type === 'number' || type === 'boolean') {\n      return ListBase.createListItemFromArray(this.createElement, spliceData, true, this.listOption(spliceData, fields), this);\n    }\n\n    return ListBase.createListItemFromJson(this.createElement, spliceData, this.listOption(spliceData, fields), 1, true, this);\n  };\n\n  DropDownBase.prototype.emptyDataRequest = function (fields) {\n    var listItems = [];\n    this.onActionComplete(this.renderItems(listItems, fields), listItems);\n    this.isRequested = false;\n    this.hideSpinner();\n  };\n\n  DropDownBase.prototype.showSpinner = function () {// Used this method in component side.\n  };\n\n  DropDownBase.prototype.hideSpinner = function () {// Used this method in component side.\n  };\n\n  DropDownBase.prototype.onActionFailure = function (e) {\n    this.liCollections = [];\n    this.trigger('actionFailure', e);\n    this.l10nUpdate(true);\n    addClass([this.list], dropDownBaseClasses.noData);\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  DropDownBase.prototype.onActionComplete = function (ulElement, list, e) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    this.listData = list;\n\n    if (isBlazor() && this.isServerRendered && this.getModuleName() === 'listbox') {\n      remove(this.list.querySelector('.e-list-parent'));\n      remove(this.list.querySelector('.e-hidden-select'));\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      if (this.isReact) {\n        this.clearTemplate(['itemTemplate', 'groupTemplate', 'actionFailureTemplate', 'noRecordsTemplate']);\n      }\n\n      this.list.innerHTML = '';\n    }\n\n    this.fixedHeaderElement = isNullOrUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement : null;\n    this.list.appendChild(ulElement);\n    this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n    this.ulElement = this.list.querySelector('ul');\n    this.postRender(this.list, list, this.bindEvent);\n  };\n  /* eslint-disable @typescript-eslint/no-unused-vars */\n\n\n  DropDownBase.prototype.postRender = function (listElement, list, bindEvent) {\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    var focusItem = listElement.querySelector('.' + dropDownBaseClasses.li);\n    var selectedItem = listElement.querySelector('.' + dropDownBaseClasses.selected);\n\n    if (focusItem && !selectedItem) {\n      focusItem.classList.add(dropDownBaseClasses.focus);\n    }\n\n    if (list.length <= 0) {\n      this.l10nUpdate();\n      addClass([listElement], dropDownBaseClasses.noData);\n    } else {\n      listElement.classList.remove(dropDownBaseClasses.noData);\n    }\n  };\n  /**\n   * Get the query to do the data operation before list item generation.\n   *\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {Query} Returns the query to do the data query operation.\n   */\n\n\n  DropDownBase.prototype.getQuery = function (query) {\n    return query ? query : this.query ? this.query : new Query();\n  };\n  /**\n   * To render the template content for group header element.\n   *\n   * @param {HTMLElement} listEle - Specifies the group list elements.\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.renderGroupTemplate = function (listEle) {\n    if (this.fields.groupBy !== null && this.dataSource || this.element.querySelector('.' + dropDownBaseClasses.group)) {\n      var dataSource = this.dataSource;\n      var option = {\n        groupTemplateID: this.groupTemplateId,\n        isStringTemplate: this.isStringTemplate\n      };\n      var headerItems = listEle.querySelectorAll('.' + dropDownBaseClasses.group);\n      var groupcheck = this.templateCompiler(this.groupTemplate);\n\n      if (groupcheck) {\n        var groupValue = select(this.groupTemplate, document).innerHTML.trim(); // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n        var tempHeaders = ListBase.renderGroupTemplate(groupValue, dataSource, this.fields.properties, headerItems, option, this);\n      } else {\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        var tempHeaders = ListBase.renderGroupTemplate(this.groupTemplate, dataSource, this.fields.properties, headerItems, option, this);\n      }\n\n      this.DropDownBaseupdateBlazorTemplates(false, true, false, false, false, false, false, false);\n    }\n  };\n  /**\n   * To create the ul li list items\n   *\n   * @param {object []} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @returns {HTMLElement} Return the ul li list items.\n   */\n\n\n  DropDownBase.prototype.createListItems = function (dataSource, fields) {\n    if (dataSource && fields.groupBy || this.element.querySelector('optgroup')) {\n      if (fields.groupBy) {\n        if (this.sortOrder !== 'None') {\n          dataSource = this.getSortedDataSource(dataSource);\n        }\n\n        dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n      }\n\n      addClass([this.list], dropDownBaseClasses.grouping);\n    } else {\n      dataSource = this.getSortedDataSource(dataSource);\n    }\n\n    var options = this.listOption(dataSource, fields);\n    var spliceData = dataSource.length > 100 ? new DataManager(dataSource).executeLocal(new Query().take(100)) : dataSource;\n    this.sortedData = dataSource;\n    return ListBase.createList(this.createElement, this.getModuleName() === 'autocomplete' ? spliceData : dataSource, options, true, this);\n  };\n\n  DropDownBase.prototype.listOption = function (dataSource, fields) {\n    var iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n    var fieldValues = !isNullOrUndefined(fields.properties) ? fields.properties : fields;\n    var options = fields.text !== null || fields.value !== null ? {\n      fields: fieldValues,\n      showIcon: iconCss,\n      ariaAttributes: {\n        groupItemRole: 'presentation'\n      }\n    } : {\n      fields: {\n        value: 'text'\n      }\n    };\n    return extend({}, options, fields, true);\n  };\n\n  DropDownBase.prototype.setFloatingHeader = function (e) {\n    if (isNullOrUndefined(this.fixedHeaderElement)) {\n      this.fixedHeaderElement = this.createElement('div', {\n        className: dropDownBaseClasses.fixedHead\n      });\n\n      if (!this.list.querySelector('li').classList.contains(dropDownBaseClasses.group)) {\n        this.fixedHeaderElement.style.display = 'none';\n      }\n\n      prepend([this.fixedHeaderElement], this.list);\n      this.setFixedHeader();\n    }\n\n    if (!isNullOrUndefined(this.fixedHeaderElement) && this.fixedHeaderElement.style.zIndex === '0') {\n      this.setFixedHeader();\n    }\n\n    this.scrollStop(e);\n  };\n\n  DropDownBase.prototype.scrollStop = function (e) {\n    var target = !isNullOrUndefined(e) ? e.target : this.list;\n    var liHeight = parseInt(getComputedStyle(this.getValidLi(), null).getPropertyValue('height'), 10);\n    var topIndex = Math.round(target.scrollTop / liHeight);\n    var liCollections = this.list.querySelectorAll('li' + ':not(.e-hide-listitem)');\n\n    for (var i = topIndex; i > -1; i--) {\n      if (!isNullOrUndefined(liCollections[i]) && liCollections[i].classList.contains(dropDownBaseClasses.group)) {\n        var currentLi = liCollections[i];\n        this.fixedHeaderElement.innerHTML = currentLi.innerHTML;\n        this.fixedHeaderElement.style.top = target.scrollTop + 'px';\n        this.fixedHeaderElement.style.display = 'block';\n        break;\n      } else {\n        this.fixedHeaderElement.style.display = 'none';\n        this.fixedHeaderElement.style.top = 'none';\n      }\n    }\n  };\n\n  DropDownBase.prototype.getValidLi = function () {\n    return this.liCollections[0];\n  };\n  /**\n   * To render the list items\n   *\n   * @param {object[]} listData - Specifies the list of array of data.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @returns {HTMLElement} Return the list items.\n   */\n\n\n  DropDownBase.prototype.renderItems = function (listData, fields) {\n    var ulElement;\n\n    if (this.itemTemplate && listData) {\n      var dataSource = listData;\n\n      if (dataSource && fields.groupBy) {\n        if (this.sortOrder !== 'None') {\n          dataSource = this.getSortedDataSource(dataSource);\n        }\n\n        dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n      } else {\n        dataSource = this.getSortedDataSource(dataSource);\n      }\n\n      this.sortedData = dataSource;\n      var spliceData = dataSource.length > 100 ? new DataManager(dataSource).executeLocal(new Query().take(100)) : dataSource;\n      ulElement = this.templateListItem(this.getModuleName() === 'autocomplete' ? spliceData : dataSource, fields);\n      var isTempEmpty = this.getModuleName() === 'listbox' ? true : false;\n      this.DropDownBaseupdateBlazorTemplates(true, false, false, false, false, false, false, isTempEmpty);\n    } else {\n      ulElement = this.createListItems(listData, fields);\n    }\n\n    return ulElement;\n  };\n\n  DropDownBase.prototype.templateListItem = function (dataSource, fields) {\n    this.DropDownBaseresetBlazorTemplates(true, false, false, false);\n    var option = this.listOption(dataSource, fields);\n    option.templateID = this.itemTemplateId;\n    option.isStringTemplate = this.isStringTemplate;\n    var itemcheck = this.templateCompiler(this.itemTemplate);\n\n    if (itemcheck) {\n      var itemValue = select(this.itemTemplate, document).innerHTML.trim();\n      return ListBase.renderContentTemplate(this.createElement, itemValue, dataSource, fields.properties, option, this);\n    } else {\n      return ListBase.renderContentTemplate(this.createElement, this.itemTemplate, dataSource, fields.properties, option, this);\n    }\n  };\n\n  DropDownBase.prototype.typeOfData = function (items) {\n    var item = {\n      typeof: null,\n      item: null\n    };\n\n    for (var i = 0; !isNullOrUndefined(items) && i < items.length; i++) {\n      if (!isNullOrUndefined(items[i])) {\n        var listDataType = typeof items[i] === 'string' || typeof items[i] === 'number' || typeof items[i] === 'boolean';\n        var isNullData = listDataType ? isNullOrUndefined(items[i]) : isNullOrUndefined(getValue(this.fields.value ? this.fields.value : 'value', items[i]));\n\n        if (!isNullData) {\n          return item = {\n            typeof: typeof items[i],\n            item: items[i]\n          };\n        }\n      }\n    }\n\n    return item;\n  };\n\n  DropDownBase.prototype.setFixedHeader = function () {\n    this.list.parentElement.style.display = 'block';\n    var borderWidth = 0;\n\n    if (this.list && this.list.parentElement) {\n      borderWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-width'), 10);\n      /*Shorthand property not working in Firefox for getComputedStyle method.\n      Refer bug report https://bugzilla.mozilla.org/show_bug.cgi?id=137688\n      Refer alternate solution https://stackoverflow.com/a/41696234/9133493*/\n\n      if (isNaN(borderWidth)) {\n        var borderTopWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-top-width'), 10);\n        var borderBottomWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-bottom-width'), 10);\n        var borderLeftWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-left-width'), 10);\n        var borderRightWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-right-width'), 10);\n        borderWidth = borderTopWidth + borderBottomWidth + borderLeftWidth + borderRightWidth;\n      }\n    }\n\n    var liWidth = this.getValidLi().offsetWidth - borderWidth;\n    this.fixedHeaderElement.style.width = liWidth.toString() + 'px';\n    setStyleAttribute(this.fixedHeaderElement, {\n      zIndex: 10\n    });\n    var firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group + ':not(.e-hide-listitem)');\n    this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n  };\n\n  DropDownBase.prototype.getSortedDataSource = function (dataSource) {\n    if (dataSource && this.sortOrder !== 'None') {\n      var textField = this.fields.text ? this.fields.text : 'text';\n\n      if (this.typeOfData(dataSource).typeof === 'string' || this.typeOfData(dataSource).typeof === 'number' || this.typeOfData(dataSource).typeof === 'boolean') {\n        textField = '';\n      }\n\n      dataSource = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, textField));\n    }\n\n    return dataSource;\n  };\n  /**\n   * Return the index of item which matched with given value in data source\n   *\n   * @param {string | number | boolean} value - Specifies given value.\n   * @returns {number} Returns the index of the item.\n   */\n\n\n  DropDownBase.prototype.getIndexByValue = function (value) {\n    var index;\n    var listItems = this.getItems();\n\n    for (var i = 0; i < listItems.length; i++) {\n      if (!isNullOrUndefined(value) && listItems[i].getAttribute('data-value') === value.toString()) {\n        index = i;\n        break;\n      }\n    }\n\n    return index;\n  };\n  /**\n   * To dispatch the event manually\n   *\n   * @param {HTMLElement} element - Specifies the element to dispatch the event.\n   * @param {string} type - Specifies the name of the event.\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.dispatchEvent = function (element, type) {\n    var evt = document.createEvent('HTMLEvents');\n    evt.initEvent(type, false, true);\n    element.dispatchEvent(evt);\n  };\n  /**\n   * To set the current fields\n   *\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.setFields = function () {\n    if (this.fields.value && !this.fields.text) {\n      this.updateFields(this.fields.value, this.fields.value);\n    } else if (!this.fields.value && this.fields.text) {\n      this.updateFields(this.fields.text, this.fields.text);\n    } else if (!this.fields.value && !this.fields.text) {\n      this.updateFields('text', 'text');\n    }\n  };\n  /**\n   * reset the items list.\n   *\n   * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n   * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n   * @param {Query} query - Accepts the external Query that execute along with data processing.\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.resetList = function (dataSource, fields, query) {\n    if (this.list) {\n      if (this.element.tagName === 'SELECT' && this.element.options.length > 0 || this.element.tagName === 'UL' && this.element.childNodes.length > 0) {\n        var data = dataSource instanceof Array ? dataSource.length > 0 : !isNullOrUndefined(dataSource);\n\n        if (!data && this.selectData && this.selectData.length > 0) {\n          dataSource = this.selectData;\n        }\n      }\n\n      this.setListData(dataSource, fields, query);\n    }\n  };\n\n  DropDownBase.prototype.updateSelectElementData = function (isFiltering) {\n    if (isFiltering && isNullOrUndefined(this.selectData) && this.listData && this.listData.length > 0) {\n      this.selectData = this.listData;\n    }\n  };\n\n  DropDownBase.prototype.updateSelection = function () {// This is for after added the item, need to update the selected index values.\n  };\n\n  DropDownBase.prototype.renderList = function () {\n    // This is for render the list items.\n    this.render();\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  DropDownBase.prototype.updateDataSource = function (props) {\n    this.resetList(this.dataSource);\n  };\n\n  DropDownBase.prototype.setUpdateInitial = function (props, newProp) {\n    this.isDataFetched = false;\n    var updateData = {};\n\n    for (var j = 0; props.length > j; j++) {\n      if (newProp[props[j]] && props[j] === 'fields') {\n        this.setFields();\n        updateData[props[j]] = newProp[props[j]];\n      } else if (newProp[props[j]]) {\n        updateData[props[j]] = newProp[props[j]];\n      }\n    }\n\n    if (Object.keys(updateData).length > 0) {\n      if (Object.keys(updateData).indexOf('dataSource') === -1) {\n        updateData.dataSource = this.dataSource;\n      }\n\n      this.updateDataSource(updateData);\n    }\n  };\n  /**\n   * When property value changes happened, then onPropertyChanged method will execute the respective changes in this component.\n   *\n   * @param {DropDownBaseModel} newProp - Returns the dynamic property value of the component.\n   * @param {DropDownBaseModel} oldProp - Returns the previous property value of the component.\n   * @private\n   * @returns {void}\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  DropDownBase.prototype.onPropertyChanged = function (newProp, oldProp) {\n    if (this.getModuleName() === 'dropdownbase') {\n      this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n    }\n\n    this.setUpdateInitial(['sortOrder', 'itemTemplate'], newProp);\n\n    for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n      var prop = _a[_i];\n\n      switch (prop) {\n        case 'query':\n        case 'sortOrder':\n        case 'dataSource':\n        case 'itemTemplate':\n          break;\n\n        case 'enableRtl':\n          this.setEnableRtl();\n          break;\n\n        case 'enabled':\n          this.setEnabled();\n          break;\n\n        case 'groupTemplate':\n          this.renderGroupTemplate(this.list);\n\n          if (this.ulElement && this.fixedHeaderElement) {\n            var firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group);\n            this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n          }\n\n          break;\n\n        case 'locale':\n          if (this.list && !isNullOrUndefined(this.liCollections) && this.liCollections.length === 0) {\n            this.l10nUpdate();\n          }\n\n          break;\n\n        case 'zIndex':\n          this.setProperties({\n            zIndex: newProp.zIndex\n          }, true);\n          this.setZIndex();\n          break;\n      }\n    }\n  };\n  /**\n   * Build and render the component\n   *\n   * @param {boolean} isEmptyData - Specifies the component to initialize with list data or not.\n   * @private\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.render = function (isEmptyData) {\n    this.list = this.createElement('div', {\n      className: dropDownBaseClasses.content,\n      attrs: {\n        'tabindex': '0'\n      }\n    });\n    this.list.classList.add(dropDownBaseClasses.root);\n    this.setFields();\n    var rippleModel = {\n      duration: 300,\n      selector: '.' + dropDownBaseClasses.li\n    };\n    this.rippleFun = rippleEffect(this.list, rippleModel);\n    var group = this.element.querySelector('select>optgroup');\n\n    if ((this.fields.groupBy || !isNullOrUndefined(group)) && !this.isGroupChecking) {\n      EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n    }\n\n    if (this.getModuleName() === 'dropdownbase') {\n      if (this.element.getAttribute('tabindex')) {\n        this.list.setAttribute('tabindex', this.element.getAttribute('tabindex'));\n      }\n\n      removeClass([this.element], dropDownBaseClasses.root);\n      this.element.style.display = 'none';\n      var wrapperElement = this.createElement('div');\n      this.element.parentElement.insertBefore(wrapperElement, this.element);\n      wrapperElement.appendChild(this.element);\n      wrapperElement.appendChild(this.list);\n    }\n\n    this.setEnableRtl();\n    this.setEnabled();\n\n    if (!isEmptyData) {\n      this.initialize();\n    }\n  };\n  /**\n   * Return the module name of this component.\n   *\n   * @private\n   * @returns {string} Return the module name of this component.\n   */\n\n\n  DropDownBase.prototype.getModuleName = function () {\n    return 'dropdownbase';\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets all the list items bound on this component.\n   *\n   * @returns {Element[]}\n   */\n\n\n  DropDownBase.prototype.getItems = function () {\n    return this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li);\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n   * but you can insert based on the index parameter.\n   *\n   * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n   * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n   * @returns {void}\n    */\n\n\n  DropDownBase.prototype.addItem = function (items, itemIndex) {\n    if (!this.list || this.list.textContent === this.noRecordsTemplate && this.getModuleName() !== 'listbox') {\n      this.renderList();\n    }\n\n    if (this.sortOrder !== 'None' && isNullOrUndefined(itemIndex)) {\n      var newList = [].slice.call(this.listData);\n      newList.push(items);\n      newList = this.getSortedDataSource(newList);\n\n      if (this.fields.groupBy) {\n        newList = ListBase.groupDataSource(newList, this.fields.properties, this.sortOrder);\n        itemIndex = newList.indexOf(items);\n      } else {\n        itemIndex = newList.indexOf(items);\n      }\n    }\n\n    this.DropDownBaseresetBlazorTemplates(true, false, false, false);\n    var itemsCount = this.getItems().length;\n    var selectedItemValue = this.list.querySelector('.' + dropDownBaseClasses.selected);\n    items = items instanceof Array ? items : [items];\n    var index;\n    index = isNullOrUndefined(itemIndex) || itemIndex < 0 || itemIndex > itemsCount - 1 ? itemsCount : itemIndex;\n    var fields = this.fields;\n\n    if (items && fields.groupBy) {\n      items = ListBase.groupDataSource(items, fields.properties);\n    }\n\n    var liCollections = [];\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var isHeader = item.isHeader;\n      var li = this.createElement('li', {\n        className: isHeader ? dropDownBaseClasses.group : dropDownBaseClasses.li,\n        id: 'option-add-' + i\n      });\n      var itemText = item instanceof Object ? getValue(fields.text, item) : item;\n\n      if (isHeader) {\n        li.innerText = itemText;\n      }\n\n      if (this.itemTemplate && !isHeader) {\n        var compiledString = compile(this.itemTemplate); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        var addItemTemplate = compiledString(item, this, 'itemTemplate', this.itemTemplateId, this.isStringTemplate, null, li);\n\n        if (addItemTemplate) {\n          append(addItemTemplate, li);\n        }\n\n        this.DropDownBaseupdateBlazorTemplates(true, false, false, false);\n      } else if (!isHeader) {\n        li.appendChild(document.createTextNode(itemText));\n      }\n\n      li.setAttribute('data-value', item instanceof Object ? getValue(fields.value, item) : item);\n      li.setAttribute('role', 'option');\n      this.notify('addItem', {\n        module: 'CheckBoxSelection',\n        item: li\n      });\n      liCollections.push(li);\n      this.listData.push(item);\n\n      if (this.sortOrder === 'None' && isNullOrUndefined(itemIndex) && index === 0) {\n        index = null;\n      }\n\n      this.updateActionCompleteData(li, item, index); //Listbox event\n\n      this.trigger('beforeItemRender', {\n        element: li,\n        item: item\n      });\n    }\n\n    if (itemsCount === 0 && isNullOrUndefined(this.list.querySelector('ul'))) {\n      this.list.innerHTML = '';\n      this.list.classList.remove(dropDownBaseClasses.noData);\n      this.list.appendChild(this.ulElement);\n      this.liCollections = liCollections;\n      append(liCollections, this.ulElement);\n      this.updateAddItemList(this.list, itemsCount);\n    } else {\n      if (this.getModuleName() === 'listbox' && itemsCount === 0) {\n        this.ulElement.innerHTML = '';\n      }\n\n      var attr = [];\n\n      for (var i = 0; i < items.length; i++) {\n        var listGroupItem = this.ulElement.querySelectorAll('.e-list-group-item');\n\n        for (var j = 0; j < listGroupItem.length; j++) {\n          attr[j] = listGroupItem[j].innerText;\n        }\n\n        if (attr.indexOf(liCollections[i].innerText) > -1 && fields.groupBy) {\n          for (var j = 0; j < listGroupItem.length; j++) {\n            if (attr[j] === liCollections[i].innerText) {\n              if (this.sortOrder === 'None') {\n                this.ulElement.insertBefore(liCollections[i + 1], listGroupItem[j + 1]);\n              } else {\n                this.ulElement.insertBefore(liCollections[i + 1], this.ulElement.childNodes[itemIndex]);\n              }\n\n              i = i + 1;\n              break;\n            }\n          }\n        } else {\n          if (this.liCollections[index]) {\n            this.liCollections[index].parentNode.insertBefore(liCollections[i], this.liCollections[index]);\n          } else {\n            this.ulElement.appendChild(liCollections[i]);\n          }\n        }\n\n        var tempLi = [].slice.call(this.liCollections);\n        tempLi.splice(index, 0, liCollections[i]);\n        this.liCollections = tempLi;\n        index += 1;\n\n        if (this.getModuleName() === 'multiselect') {\n          this.updateDataList();\n        }\n      }\n    }\n\n    if (selectedItemValue || itemIndex === 0) {\n      this.updateSelection();\n    }\n  };\n\n  DropDownBase.prototype.validationAttribute = function (target, hidden) {\n    var name = target.getAttribute('name') ? target.getAttribute('name') : target.getAttribute('id');\n    hidden.setAttribute('name', name);\n    target.removeAttribute('name');\n    var attributes = ['required', 'aria-required', 'form'];\n\n    for (var i = 0; i < attributes.length; i++) {\n      if (!target.getAttribute(attributes[i])) {\n        continue;\n      }\n\n      var attr = target.getAttribute(attributes[i]);\n      hidden.setAttribute(attributes[i], attr);\n      target.removeAttribute(attributes[i]);\n    }\n  };\n\n  DropDownBase.prototype.setZIndex = function () {// this is for component wise\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  DropDownBase.prototype.updateActionCompleteData = function (li, item, index) {// this is for ComboBox custom value\n  }; // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  DropDownBase.prototype.updateAddItemList = function (list, itemCount) {// this is for multiselect add item\n  };\n\n  DropDownBase.prototype.updateDataList = function () {// this is for multiselect update list items\n  };\n  /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Gets the data Object that matches the given value.\n   *\n   * @param { string | number } value - Specifies the value of the list item.\n   * @returns {Object}\n   * @blazorType object\n   */\n\n\n  DropDownBase.prototype.getDataByValue = function (value) {\n    if (!isNullOrUndefined(this.listData)) {\n      var type = this.typeOfData(this.listData).typeof;\n\n      if (type === 'string' || type === 'number' || type === 'boolean') {\n        for (var _i = 0, _a = this.listData; _i < _a.length; _i++) {\n          var item = _a[_i];\n\n          if (!isNullOrUndefined(item) && item === value) {\n            return item;\n          }\n        }\n      } else {\n        for (var _b = 0, _c = this.listData; _b < _c.length; _b++) {\n          var item = _c[_b];\n\n          if (!isNullOrUndefined(item) && getValue(this.fields.value ? this.fields.value : 'value', item) === value) {\n            return item;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n  /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n\n  /**\n   * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n   *\n   * @method destroy\n   * @returns {void}\n   */\n\n\n  DropDownBase.prototype.destroy = function () {\n    if (document.body.contains(this.list)) {\n      EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n\n      if (!isNullOrUndefined(this.rippleFun)) {\n        this.rippleFun();\n      }\n\n      detach(this.list);\n    }\n\n    _super.prototype.destroy.call(this);\n  };\n\n  __decorate([Complex({\n    text: null,\n    value: null,\n    iconCss: null,\n    groupBy: null\n  }, FieldSettings)], DropDownBase.prototype, \"fields\", void 0);\n\n  __decorate([Property(false)], DropDownBase.prototype, \"enablePersistence\", void 0);\n\n  __decorate([Property(null)], DropDownBase.prototype, \"itemTemplate\", void 0);\n\n  __decorate([Property(null)], DropDownBase.prototype, \"groupTemplate\", void 0);\n\n  __decorate([Property('No records found')], DropDownBase.prototype, \"noRecordsTemplate\", void 0);\n\n  __decorate([Property('Request failed')], DropDownBase.prototype, \"actionFailureTemplate\", void 0);\n\n  __decorate([Property('None')], DropDownBase.prototype, \"sortOrder\", void 0);\n\n  __decorate([Property(true)], DropDownBase.prototype, \"enabled\", void 0);\n\n  __decorate([Property([])], DropDownBase.prototype, \"dataSource\", void 0);\n\n  __decorate([Property(null)], DropDownBase.prototype, \"query\", void 0);\n\n  __decorate([Property('StartsWith')], DropDownBase.prototype, \"filterType\", void 0);\n\n  __decorate([Property(true)], DropDownBase.prototype, \"ignoreCase\", void 0);\n\n  __decorate([Property(1000)], DropDownBase.prototype, \"zIndex\", void 0);\n\n  __decorate([Property(false)], DropDownBase.prototype, \"ignoreAccent\", void 0);\n\n  __decorate([Property()], DropDownBase.prototype, \"locale\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"actionBegin\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"actionComplete\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"actionFailure\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"select\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"dataBound\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"created\", void 0);\n\n  __decorate([Event()], DropDownBase.prototype, \"destroyed\", void 0);\n\n  DropDownBase = __decorate([NotifyPropertyChanges], DropDownBase);\n  return DropDownBase;\n}(Component);\n\nexport { DropDownBase };","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/node_modules/@syncfusion/ej2-dropdowns/src/drop-down-base/drop-down-base.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","Component","EventHandler","addClass","append","Property","Event","L10n","compile","setStyleAttribute","extend","removeClass","prepend","isNullOrUndefined","detach","getValue","NotifyPropertyChanges","rippleEffect","ChildProperty","Complex","DataManager","Query","DataUtil","ListBase","updateBlazorTemplate","resetBlazorTemplate","isBlazor","remove","select","selectAll","FieldSettings","_super","apply","dropDownBaseClasses","root","rtl","content","selected","hover","noData","fixedHead","focus","li","group","disabled","grouping","ITEMTEMPLATE_PROPERTY","VALUETEMPLATE_PROPERTY","GROUPTEMPLATE_PROPERTY","HEADERTEMPLATE_PROPERTY","FOOTERTEMPLATE_PROPERTY","NORECORDSTEMPLATE_PROPERTY","ACTIONFAILURETEMPLATE_PROPERTY","DropDownBase","options","element","_this","call","preventChange","isAngular","isPreventChange","getPropObject","prop","newProp","oldProp","newProperty","oldProperty","propName","data","getValueByText","text","ignoreCase","ignoreAccent","value","listData","checkValueCase","isTextByValue","dataSource","fields","type","typeOfData","typeof","_i","dataSource_1","item","checkingAccent","String","checkIgnoreCase","getItemValue","checkNonIgnoreCase","filter","itemValue","toString","dataItem","ignoreDiacritics","textItem","toLowerCase","typedText","getFormattedValue","templateCompiler","baseTemplate","checkTemplate","document","exception","l10nUpdate","actionFailure","ele","getModuleName","ulElement","list","noRecordsTemplate","actionFailureTemplate","DropDownBaseresetBlazorTemplates","template","compiledString","templateId","actionFailureTemplateId","noRecordsTemplateId","innerHTML","tempaltecheck","trim","templateName","noDataCompTemp","isStringTemplate","appendChild","DropDownBaseupdateBlazorTemplates","l10nLocale","componentLocale","getLocaleName","locale","getConstant","l10n","liElem","createElement","textContent","classList","add","getTextByValue","parseFloat","setEnableRtl","enableRtlElements","push","enableRtl","initialize","bindEvent","id","tagName","jsonElement","createJsonFromElement","setProperties","resetList","renderItemsBySelect","setListData","query","noRecord","action","header","footer","isEmpty","itemTemplate","itemTemplateId","groupTemplate","groupTemplateId","valueTemplateId","headerTemplateId","footerTemplateId","getPersistData","addOnPersist","setEnabled","setAttribute","enabled","updateDataAttribute","invalidAttr","attr","a","attributes","indexOf","name","getAttribute","htmlAttributes","querySelectorAll","option","getJSONfromOption","optionGroup","label","isHeader","child","updateFields","groupBy","iconCss","field","items","options_1","json","innerText","preRender","scrollTimer","isRequested","isDataFetched","isActive","eventArgs","cancel","trigger","showSpinner","emptyDataRequest","executeQuery","getQuery","then","e","listItems","result","renderItems","onActionComplete","renderGroupTemplate","bindChildItems","catch","onActionFailure","hideSpinner","dataManager","executeLocal","localDataArgs","setTimeout","childNode","remainingItems","sortedData","liCollections","updateListValues","raiseDataBound","findListElement","findNode","attribute","liElement","listArr","slice","index","dataBoundEventArgs","spliceData","skip","listElements","templateListItem","childNodes","createListItemFromArray","listOption","createListItemFromJson","isServerRendered","querySelector","isReact","clearTemplate","fixedHeaderElement","postRender","listElement","focusItem","selectedItem","listEle","groupTemplateID","headerItems","groupcheck","groupValue","tempHeaders","properties","createListItems","sortOrder","getSortedDataSource","groupDataSource","take","createList","fieldValues","showIcon","ariaAttributes","groupItemRole","setFloatingHeader","className","contains","style","display","setFixedHeader","zIndex","scrollStop","liHeight","parseInt","getComputedStyle","getValidLi","getPropertyValue","topIndex","Math","round","scrollTop","currentLi","top","isTempEmpty","templateID","itemcheck","renderContentTemplate","listDataType","isNullData","parentElement","borderWidth","defaultView","isNaN","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","liWidth","offsetWidth","width","firstLi","textField","getDataSource","addSorting","getIndexByValue","getItems","dispatchEvent","evt","createEvent","initEvent","setFields","selectData","updateSelectElementData","isFiltering","updateSelection","renderList","render","updateDataSource","props","setUpdateInitial","updateData","j","keys","onPropertyChanged","_a","setZIndex","isEmptyData","attrs","rippleModel","duration","selector","rippleFun","isGroupChecking","wrapperElement","insertBefore","addItem","itemIndex","newList","itemsCount","selectedItemValue","itemText","addItemTemplate","createTextNode","notify","module","updateActionCompleteData","updateAddItemList","listGroupItem","parentNode","tempLi","splice","updateDataList","validationAttribute","hidden","removeAttribute","itemCount","getDataByValue","_b","_c","destroy","body"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, EventHandler, addClass, append, Property, Event, L10n, compile } from '@syncfusion/ej2-base';\nimport { setStyleAttribute, extend, removeClass, prepend, isNullOrUndefined, detach, getValue } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, rippleEffect, ChildProperty, Complex } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { ListBase } from '@syncfusion/ej2-lists';\nimport { updateBlazorTemplate, resetBlazorTemplate, isBlazor, remove, select, selectAll } from '@syncfusion/ej2-base';\nvar FieldSettings = /** @class */ (function (_super) {\n    __extends(FieldSettings, _super);\n    function FieldSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], FieldSettings.prototype, \"text\", void 0);\n    __decorate([\n        Property()\n    ], FieldSettings.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], FieldSettings.prototype, \"iconCss\", void 0);\n    __decorate([\n        Property()\n    ], FieldSettings.prototype, \"groupBy\", void 0);\n    __decorate([\n        Property()\n    ], FieldSettings.prototype, \"htmlAttributes\", void 0);\n    return FieldSettings;\n}(ChildProperty));\nexport { FieldSettings };\nexport var dropDownBaseClasses = {\n    root: 'e-dropdownbase',\n    rtl: 'e-rtl',\n    content: 'e-content',\n    selected: 'e-active',\n    hover: 'e-hover',\n    noData: 'e-nodata',\n    fixedHead: 'e-fixed-head',\n    focus: 'e-item-focus',\n    li: 'e-list-item',\n    group: 'e-list-group-item',\n    disabled: 'e-disabled',\n    grouping: 'e-dd-group'\n};\nvar ITEMTEMPLATE_PROPERTY = 'ItemTemplate';\nvar VALUETEMPLATE_PROPERTY = 'ValueTemplate';\nvar GROUPTEMPLATE_PROPERTY = 'GroupTemplate';\nvar HEADERTEMPLATE_PROPERTY = 'HeaderTemplate';\nvar FOOTERTEMPLATE_PROPERTY = 'FooterTemplate';\nvar NORECORDSTEMPLATE_PROPERTY = 'NoRecordsTemplate';\nvar ACTIONFAILURETEMPLATE_PROPERTY = 'ActionFailureTemplate';\n/**\n * DropDownBase component will generate the list items based on given data and act as base class to drop-down related components\n */\nvar DropDownBase = /** @class */ (function (_super) {\n    __extends(DropDownBase, _super);\n    /**\n     * * Constructor for DropDownBase class\n     *\n     * @param {DropDownBaseModel} options - Specifies the DropDownBase model.\n     * @param {string | HTMLElement} element - Specifies the element to render as component.\n     * @private\n     */\n    function DropDownBase(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.preventChange = false;\n        _this.isAngular = false;\n        _this.isPreventChange = false;\n        return _this;\n    }\n    DropDownBase.prototype.getPropObject = function (prop, newProp, oldProp) {\n        var newProperty = new Object();\n        var oldProperty = new Object();\n        var propName = function (prop) {\n            return prop;\n        };\n        newProperty[propName(prop)] = newProp[propName(prop)];\n        oldProperty[propName(prop)] = oldProp[propName(prop)];\n        var data = new Object();\n        data.newProperty = newProperty;\n        data.oldProperty = oldProperty;\n        return data;\n    };\n    DropDownBase.prototype.getValueByText = function (text, ignoreCase, ignoreAccent) {\n        var value = null;\n        if (!isNullOrUndefined(this.listData)) {\n            if (ignoreCase) {\n                value = this.checkValueCase(text, true, ignoreAccent);\n            }\n            else {\n                value = this.checkValueCase(text, false, ignoreAccent);\n            }\n        }\n        return value;\n    };\n    DropDownBase.prototype.checkValueCase = function (text, ignoreCase, ignoreAccent, isTextByValue) {\n        var _this = this;\n        var value = null;\n        if (isTextByValue) {\n            value = text;\n        }\n        var dataSource = this.listData;\n        var fields = this.fields;\n        var type = this.typeOfData(dataSource).typeof;\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            for (var _i = 0, dataSource_1 = dataSource; _i < dataSource_1.length; _i++) {\n                var item = dataSource_1[_i];\n                if (!isNullOrUndefined(item)) {\n                    if (ignoreAccent) {\n                        value = this.checkingAccent(String(item), text, ignoreCase);\n                    }\n                    else {\n                        if (ignoreCase) {\n                            if (this.checkIgnoreCase(String(item), text)) {\n                                value = this.getItemValue(String(item), text, ignoreCase);\n                            }\n                        }\n                        else {\n                            if (this.checkNonIgnoreCase(String(item), text)) {\n                                value = this.getItemValue(String(item), text, ignoreCase, isTextByValue);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        else {\n            if (ignoreCase) {\n                dataSource.filter(function (item) {\n                    var itemValue = getValue(fields.value, item);\n                    if (!isNullOrUndefined(itemValue) && _this.checkIgnoreCase(getValue(fields.text, item).toString(), text)) {\n                        value = getValue(fields.value, item);\n                    }\n                });\n            }\n            else {\n                if (isTextByValue) {\n                    dataSource.filter(function (item) {\n                        var itemValue = getValue(fields.value, item);\n                        if (!isNullOrUndefined(itemValue) && !isNullOrUndefined(value) && itemValue.toString() === value.toString()) {\n                            value = getValue(fields.text, item);\n                        }\n                    });\n                }\n                else {\n                    dataSource.filter(function (item) {\n                        if (_this.checkNonIgnoreCase(getValue(fields.text, item), text)) {\n                            value = getValue(fields.value, item);\n                        }\n                    });\n                }\n            }\n        }\n        return value;\n    };\n    DropDownBase.prototype.checkingAccent = function (item, text, ignoreCase) {\n        var dataItem = DataUtil.ignoreDiacritics(String(item));\n        var textItem = DataUtil.ignoreDiacritics(text.toString());\n        var value = null;\n        if (ignoreCase) {\n            if (this.checkIgnoreCase(dataItem, textItem)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n            }\n        }\n        else {\n            if (this.checkNonIgnoreCase(String(item), text)) {\n                value = this.getItemValue(String(item), text, ignoreCase);\n            }\n        }\n        return value;\n    };\n    DropDownBase.prototype.checkIgnoreCase = function (item, text) {\n        return String(item).toLowerCase() === text.toString().toLowerCase() ? true : false;\n    };\n    DropDownBase.prototype.checkNonIgnoreCase = function (item, text) {\n        return String(item) === text.toString() ? true : false;\n    };\n    DropDownBase.prototype.getItemValue = function (dataItem, typedText, ignoreCase, isTextByValue) {\n        var value = null;\n        var dataSource = this.listData;\n        var type = this.typeOfData(dataSource).typeof;\n        if (isTextByValue) {\n            value = dataItem.toString();\n        }\n        else {\n            if (ignoreCase) {\n                value = type === 'string' ? String(dataItem) : this.getFormattedValue(String(dataItem));\n            }\n            else {\n                value = type === 'string' ? typedText : this.getFormattedValue(typedText);\n            }\n        }\n        return value;\n    };\n    DropDownBase.prototype.templateCompiler = function (baseTemplate) {\n        var checkTemplate = false;\n        if (baseTemplate) {\n            try {\n                checkTemplate = (selectAll(baseTemplate, document).length) ? true : false;\n            }\n            catch (exception) {\n                checkTemplate = false;\n            }\n        }\n        return checkTemplate;\n    };\n    DropDownBase.prototype.l10nUpdate = function (actionFailure) {\n        var ele = this.getModuleName() === 'listbox' ? this.ulElement : this.list;\n        if (this.noRecordsTemplate !== 'No records found' || this.actionFailureTemplate !== 'Request failed') {\n            this.DropDownBaseresetBlazorTemplates(false, false, true, true);\n            var template = actionFailure ? this.actionFailureTemplate : this.noRecordsTemplate;\n            var compiledString = void 0;\n            var templateId = actionFailure ? this.actionFailureTemplateId : this.noRecordsTemplateId;\n            ele.innerHTML = '';\n            var tempaltecheck = this.templateCompiler(template);\n            if (tempaltecheck) {\n                compiledString = compile(select(template, document).innerHTML.trim());\n            }\n            else {\n                compiledString = compile(template);\n            }\n            var templateName = actionFailure ? 'actionFailureTemplate' : 'noRecordsTemplate';\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            var noDataCompTemp = compiledString({}, this, templateName, templateId, this.isStringTemplate, null, ele);\n            if (noDataCompTemp && noDataCompTemp.length > 0) {\n                for (var i = 0; i < noDataCompTemp.length; i++) {\n                    ele.appendChild(noDataCompTemp[i]);\n                }\n            }\n            this.DropDownBaseupdateBlazorTemplates(false, false, !actionFailure, actionFailure, false, false, false, false);\n        }\n        else {\n            var l10nLocale = { noRecordsTemplate: 'No records found', actionFailureTemplate: 'Request failed' };\n            var componentLocale = new L10n(this.getLocaleName(), {}, this.locale);\n            if (componentLocale.getConstant('actionFailureTemplate') !== '') {\n                this.l10n = componentLocale;\n            }\n            else {\n                this.l10n = new L10n(this.getModuleName() === 'listbox' ? 'listbox' : 'dropdowns', l10nLocale, this.locale);\n            }\n            var content = actionFailure ?\n                this.l10n.getConstant('actionFailureTemplate') : this.l10n.getConstant('noRecordsTemplate');\n            if (this.getModuleName() === 'listbox') {\n                var liElem = this.createElement('li');\n                liElem.textContent = content;\n                ele.appendChild(liElem);\n                liElem.classList.add('e-list-nrt');\n            }\n            else {\n                ele.innerHTML = content;\n            }\n        }\n    };\n    DropDownBase.prototype.getLocaleName = function () {\n        return 'drop-down-base';\n    };\n    DropDownBase.prototype.getTextByValue = function (value) {\n        var text = this.checkValueCase(value, false, false, true);\n        return text;\n    };\n    DropDownBase.prototype.getFormattedValue = function (value) {\n        if (this.listData && this.listData.length) {\n            var item = this.typeOfData(this.listData);\n            if (isBlazor() && isNullOrUndefined(value) || value === 'null') {\n                return null;\n            }\n            if (typeof getValue((this.fields.value ? this.fields.value : 'value'), item.item) === 'number'\n                || item.typeof === 'number') {\n                return parseFloat(value);\n            }\n            if (typeof getValue((this.fields.value ? this.fields.value : 'value'), item.item) === 'boolean'\n                || item.typeof === 'boolean') {\n                return ((value === 'true') || ('' + value === 'true'));\n            }\n        }\n        return value;\n    };\n    /**\n     * Sets RTL to dropdownbase wrapper\n     *\n     * @returns {void}\n     */\n    DropDownBase.prototype.setEnableRtl = function () {\n        if (this.list) {\n            this.enableRtlElements.push(this.list);\n        }\n        if (this.enableRtl) {\n            addClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n        }\n        else {\n            removeClass(this.enableRtlElements, dropDownBaseClasses.rtl);\n        }\n    };\n    /**\n     * Initialize the Component.\n     *\n     * @returns {void}\n     */\n    DropDownBase.prototype.initialize = function () {\n        this.bindEvent = true;\n        this.actionFailureTemplateId = \"\" + this.element.id + ACTIONFAILURETEMPLATE_PROPERTY;\n        if (this.element.tagName === 'UL') {\n            var jsonElement = ListBase.createJsonFromElement(this.element);\n            this.setProperties({ fields: { text: 'text', value: 'text' } }, true);\n            this.resetList(jsonElement, this.fields);\n        }\n        else if (this.element.tagName === 'SELECT') {\n            var dataSource = this.dataSource instanceof Array ? (this.dataSource.length > 0 ? true : false)\n                : !isNullOrUndefined(this.dataSource) ? true : false;\n            if (!dataSource) {\n                this.renderItemsBySelect();\n            }\n        }\n        else {\n            this.setListData(this.dataSource, this.fields, this.query);\n        }\n    };\n    DropDownBase.prototype.DropDownBaseupdateBlazorTemplates = function (item, group, noRecord, action, value, header, footer, isEmpty) {\n        if (!this.isStringTemplate) {\n            if (this.itemTemplate && item) {\n                updateBlazorTemplate(this.itemTemplateId, ITEMTEMPLATE_PROPERTY, this, isEmpty);\n            }\n            if (this.groupTemplate && group) {\n                updateBlazorTemplate(this.groupTemplateId, GROUPTEMPLATE_PROPERTY, this, isEmpty);\n            }\n            if (this.noRecordsTemplate && noRecord) {\n                updateBlazorTemplate(this.noRecordsTemplateId, NORECORDSTEMPLATE_PROPERTY, this, isEmpty);\n            }\n            if (this.actionFailureTemplate && action) {\n                updateBlazorTemplate(this.actionFailureTemplateId, ACTIONFAILURETEMPLATE_PROPERTY, this, isEmpty);\n            }\n            if (value) {\n                updateBlazorTemplate(this.valueTemplateId, VALUETEMPLATE_PROPERTY, this, isEmpty);\n            }\n            if (header) {\n                updateBlazorTemplate(this.headerTemplateId, HEADERTEMPLATE_PROPERTY, this);\n            }\n            if (footer) {\n                updateBlazorTemplate(this.footerTemplateId, FOOTERTEMPLATE_PROPERTY, this);\n            }\n        }\n    };\n    DropDownBase.prototype.DropDownBaseresetBlazorTemplates = function (item, group, noRecord, action, value, header, footer) {\n        if (!this.isStringTemplate) {\n            if (this.itemTemplate && item) {\n                resetBlazorTemplate(this.itemTemplateId, ITEMTEMPLATE_PROPERTY);\n            }\n            if (this.groupTemplate && group) {\n                resetBlazorTemplate(this.groupTemplateId, GROUPTEMPLATE_PROPERTY);\n            }\n            if (this.noRecordsTemplate && noRecord) {\n                resetBlazorTemplate(this.noRecordsTemplateId, NORECORDSTEMPLATE_PROPERTY);\n            }\n            if (this.actionFailureTemplate && action) {\n                resetBlazorTemplate(this.actionFailureTemplateId, ACTIONFAILURETEMPLATE_PROPERTY);\n            }\n            if (value) {\n                resetBlazorTemplate(this.valueTemplateId, VALUETEMPLATE_PROPERTY);\n            }\n            if (header) {\n                resetBlazorTemplate(this.headerTemplateId, HEADERTEMPLATE_PROPERTY);\n            }\n            if (footer) {\n                resetBlazorTemplate(this.footerTemplateId, FOOTERTEMPLATE_PROPERTY);\n            }\n        }\n    };\n    /**\n     * Get the properties to be maintained in persisted state.\n     *\n     * @returns {string} Returns the persisted data of the component.\n     */\n    DropDownBase.prototype.getPersistData = function () {\n        return this.addOnPersist([]);\n    };\n    /**\n     * Sets the enabled state to DropDownBase.\n     *\n     * @returns {void}\n     */\n    DropDownBase.prototype.setEnabled = function () {\n        this.element.setAttribute('aria-disabled', (this.enabled) ? 'false' : 'true');\n    };\n    /**\n     * Sets the enabled state to DropDownBase.\n     *\n     * @param {string} value - Specifies the attribute values to add on the input element.\n     * @returns {void}\n     */\n    DropDownBase.prototype.updateDataAttribute = function (value) {\n        var invalidAttr = ['class', 'style', 'id', 'type'];\n        var attr = {};\n        for (var a = 0; a < this.element.attributes.length; a++) {\n            if (invalidAttr.indexOf(this.element.attributes[a].name) === -1 &&\n                !(this.getModuleName() === 'dropdownlist' && this.element.attributes[a].name === 'readonly')) {\n                attr[this.element.attributes[a].name] = this.element.getAttribute(this.element.attributes[a].name);\n            }\n        }\n        extend(attr, value, attr);\n        this.setProperties({ htmlAttributes: attr }, true);\n    };\n    DropDownBase.prototype.renderItemsBySelect = function () {\n        var element = this.element;\n        var fields = { value: 'value', text: 'text' };\n        var jsonElement = [];\n        var group = element.querySelectorAll('select>optgroup');\n        var option = element.querySelectorAll('select>option');\n        this.getJSONfromOption(jsonElement, option, fields);\n        if (group.length) {\n            for (var i = 0; i < group.length; i++) {\n                var item = group[i];\n                var optionGroup = {};\n                optionGroup[fields.text] = item.label;\n                optionGroup.isHeader = true;\n                var child = item.querySelectorAll('option');\n                jsonElement.push(optionGroup);\n                this.getJSONfromOption(jsonElement, child, fields);\n            }\n            element.querySelectorAll('select>option');\n        }\n        this.updateFields(fields.text, fields.value, this.fields.groupBy, this.fields.htmlAttributes, this.fields.iconCss);\n        this.resetList(jsonElement, fields);\n    };\n    DropDownBase.prototype.updateFields = function (text, value, groupBy, htmlAttributes, iconCss) {\n        var field = {\n            'fields': {\n                text: text,\n                value: value,\n                groupBy: !isNullOrUndefined(groupBy) ? groupBy : this.fields && this.fields.groupBy,\n                htmlAttributes: !isNullOrUndefined(htmlAttributes) ? htmlAttributes : this.fields && this.fields.htmlAttributes,\n                iconCss: !isNullOrUndefined(iconCss) ? iconCss : this.fields && this.fields.iconCss\n            }\n        };\n        this.setProperties(field, true);\n    };\n    DropDownBase.prototype.getJSONfromOption = function (items, options, fields) {\n        for (var _i = 0, options_1 = options; _i < options_1.length; _i++) {\n            var option = options_1[_i];\n            var json = {};\n            json[fields.text] = option.innerText;\n            json[fields.value] = !isNullOrUndefined(option.getAttribute(fields.value)) ?\n                option.getAttribute(fields.value) : option.innerText;\n            items.push(json);\n        }\n    };\n    /**\n     * Execute before render the list items\n     *\n     * @private\n     * @returns {void}\n     */\n    DropDownBase.prototype.preRender = function () {\n        // there is no event handler\n        this.scrollTimer = -1;\n        this.enableRtlElements = [];\n        this.isRequested = false;\n        this.isDataFetched = false;\n        this.itemTemplateId = \"\" + this.element.id + ITEMTEMPLATE_PROPERTY;\n        this.valueTemplateId = \"\" + this.element.id + VALUETEMPLATE_PROPERTY;\n        this.groupTemplateId = \"\" + this.element.id + GROUPTEMPLATE_PROPERTY;\n        this.headerTemplateId = \"\" + this.element.id + HEADERTEMPLATE_PROPERTY;\n        this.footerTemplateId = \"\" + this.element.id + FOOTERTEMPLATE_PROPERTY;\n        this.noRecordsTemplateId = \"\" + this.element.id + NORECORDSTEMPLATE_PROPERTY;\n    };\n    /**\n     * Creates the list items of DropDownBase component.\n     *\n     * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {void}\n     */\n    DropDownBase.prototype.setListData = function (dataSource, fields, query) {\n        var _this = this;\n        fields = fields ? fields : this.fields;\n        var ulElement;\n        this.isActive = true;\n        var eventArgs = { cancel: false, data: dataSource, query: query };\n        this.isPreventChange = this.isAngular && this.preventChange ? true : this.isPreventChange;\n        this.trigger('actionBegin', eventArgs, function (eventArgs) {\n            if (!eventArgs.cancel) {\n                _this.showSpinner();\n                if (dataSource instanceof DataManager) {\n                    _this.isRequested = true;\n                    if (_this.isDataFetched) {\n                        _this.emptyDataRequest(fields);\n                        return;\n                    }\n                    eventArgs.data.executeQuery(_this.getQuery(eventArgs.query)).then(function (e) {\n                        _this.isPreventChange = _this.isAngular && _this.preventChange ? true : _this.isPreventChange;\n                        _this.trigger('actionComplete', e, function (e) {\n                            if (!e.cancel) {\n                                var listItems = e.result;\n                                if (listItems.length === 0) {\n                                    _this.isDataFetched = true;\n                                }\n                                ulElement = _this.renderItems(listItems, fields);\n                                _this.onActionComplete(ulElement, listItems, e);\n                                if (_this.groupTemplate) {\n                                    _this.renderGroupTemplate(ulElement);\n                                }\n                                _this.isRequested = false;\n                                _this.bindChildItems(listItems, ulElement, fields, e);\n                            }\n                        });\n                    }).catch(function (e) {\n                        _this.isRequested = false;\n                        _this.onActionFailure(e);\n                        _this.hideSpinner();\n                    });\n                }\n                else {\n                    var dataManager = new DataManager(eventArgs.data);\n                    var listItems = (_this.getQuery(eventArgs.query)).executeLocal(dataManager);\n                    var localDataArgs = { cancel: false, result: listItems };\n                    _this.isPreventChange = _this.isAngular && _this.preventChange ? true : _this.isPreventChange;\n                    _this.trigger('actionComplete', localDataArgs, function (localDataArgs) {\n                        if (!localDataArgs.cancel) {\n                            ulElement = _this.renderItems(localDataArgs.result, fields);\n                            _this.onActionComplete(ulElement, localDataArgs.result);\n                            if (_this.groupTemplate) {\n                                _this.renderGroupTemplate(ulElement);\n                            }\n                            _this.bindChildItems(localDataArgs.result, ulElement, fields);\n                        }\n                    });\n                }\n            }\n        });\n    };\n    DropDownBase.prototype.bindChildItems = function (listItems, ulElement, fields, e) {\n        var _this = this;\n        if (listItems.length >= 100 && this.getModuleName() === 'autocomplete') {\n            setTimeout(function () {\n                var childNode = _this.remainingItems(_this.sortedData, fields);\n                append(childNode, ulElement);\n                _this.DropDownBaseupdateBlazorTemplates(true, false, false, false);\n                _this.liCollections = _this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n                _this.updateListValues();\n                _this.raiseDataBound(listItems, e);\n            }, 0);\n        }\n        else {\n            this.raiseDataBound(listItems, e);\n        }\n    };\n    DropDownBase.prototype.updateListValues = function () {\n        // Used this method in component side.\n    };\n    DropDownBase.prototype.findListElement = function (list, findNode, attribute, value) {\n        var liElement = null;\n        if (list) {\n            var listArr = [].slice.call(list.querySelectorAll(findNode));\n            for (var index = 0; index < listArr.length; index++) {\n                if (listArr[index].getAttribute(attribute) === (value + '')) {\n                    liElement = listArr[index];\n                    break;\n                }\n            }\n        }\n        return liElement;\n    };\n    DropDownBase.prototype.raiseDataBound = function (listItems, e) {\n        this.hideSpinner();\n        var dataBoundEventArgs = {\n            items: listItems,\n            e: e\n        };\n        this.trigger('dataBound', dataBoundEventArgs);\n    };\n    DropDownBase.prototype.remainingItems = function (dataSource, fields) {\n        var spliceData = new DataManager(dataSource).executeLocal(new Query().skip(100));\n        if (this.itemTemplate) {\n            var listElements = this.templateListItem(spliceData, fields);\n            return [].slice.call(listElements.childNodes);\n        }\n        var type = this.typeOfData(spliceData).typeof;\n        if (type === 'string' || type === 'number' || type === 'boolean') {\n            return ListBase.createListItemFromArray(this.createElement, spliceData, true, this.listOption(spliceData, fields), this);\n        }\n        return ListBase.createListItemFromJson(this.createElement, spliceData, this.listOption(spliceData, fields), 1, true, this);\n    };\n    DropDownBase.prototype.emptyDataRequest = function (fields) {\n        var listItems = [];\n        this.onActionComplete(this.renderItems(listItems, fields), listItems);\n        this.isRequested = false;\n        this.hideSpinner();\n    };\n    DropDownBase.prototype.showSpinner = function () {\n        // Used this method in component side.\n    };\n    DropDownBase.prototype.hideSpinner = function () {\n        // Used this method in component side.\n    };\n    DropDownBase.prototype.onActionFailure = function (e) {\n        this.liCollections = [];\n        this.trigger('actionFailure', e);\n        this.l10nUpdate(true);\n        addClass([this.list], dropDownBaseClasses.noData);\n    };\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    DropDownBase.prototype.onActionComplete = function (ulElement, list, e) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        this.listData = list;\n        if (isBlazor() && this.isServerRendered && this.getModuleName() === 'listbox') {\n            remove(this.list.querySelector('.e-list-parent'));\n            remove(this.list.querySelector('.e-hidden-select'));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate(['itemTemplate', 'groupTemplate', 'actionFailureTemplate', 'noRecordsTemplate']);\n            }\n            this.list.innerHTML = '';\n        }\n        this.fixedHeaderElement = isNullOrUndefined(this.fixedHeaderElement) ? this.fixedHeaderElement : null;\n        this.list.appendChild(ulElement);\n        this.liCollections = this.list.querySelectorAll('.' + dropDownBaseClasses.li);\n        this.ulElement = this.list.querySelector('ul');\n        this.postRender(this.list, list, this.bindEvent);\n    };\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    DropDownBase.prototype.postRender = function (listElement, list, bindEvent) {\n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        var focusItem = listElement.querySelector('.' + dropDownBaseClasses.li);\n        var selectedItem = listElement.querySelector('.' + dropDownBaseClasses.selected);\n        if (focusItem && !selectedItem) {\n            focusItem.classList.add(dropDownBaseClasses.focus);\n        }\n        if (list.length <= 0) {\n            this.l10nUpdate();\n            addClass([listElement], dropDownBaseClasses.noData);\n        }\n        else {\n            listElement.classList.remove(dropDownBaseClasses.noData);\n        }\n    };\n    /**\n     * Get the query to do the data operation before list item generation.\n     *\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {Query} Returns the query to do the data query operation.\n     */\n    DropDownBase.prototype.getQuery = function (query) {\n        return query ? query : this.query ? this.query : new Query();\n    };\n    /**\n     * To render the template content for group header element.\n     *\n     * @param {HTMLElement} listEle - Specifies the group list elements.\n     * @returns {void}\n     */\n    DropDownBase.prototype.renderGroupTemplate = function (listEle) {\n        if (this.fields.groupBy !== null && this.dataSource || this.element.querySelector('.' + dropDownBaseClasses.group)) {\n            var dataSource = this.dataSource;\n            var option = { groupTemplateID: this.groupTemplateId, isStringTemplate: this.isStringTemplate };\n            var headerItems = listEle.querySelectorAll('.' + dropDownBaseClasses.group);\n            var groupcheck = this.templateCompiler(this.groupTemplate);\n            if (groupcheck) {\n                var groupValue = select(this.groupTemplate, document).innerHTML.trim();\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                var tempHeaders = ListBase.renderGroupTemplate(groupValue, dataSource, this.fields.properties, headerItems, option, this);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                var tempHeaders = ListBase.renderGroupTemplate(this.groupTemplate, dataSource, this.fields.properties, headerItems, option, this);\n            }\n            this.DropDownBaseupdateBlazorTemplates(false, true, false, false, false, false, false, false);\n        }\n    };\n    /**\n     * To create the ul li list items\n     *\n     * @param {object []} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @returns {HTMLElement} Return the ul li list items.\n     */\n    DropDownBase.prototype.createListItems = function (dataSource, fields) {\n        if (dataSource && fields.groupBy || this.element.querySelector('optgroup')) {\n            if (fields.groupBy) {\n                if (this.sortOrder !== 'None') {\n                    dataSource = this.getSortedDataSource(dataSource);\n                }\n                dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n            }\n            addClass([this.list], dropDownBaseClasses.grouping);\n        }\n        else {\n            dataSource = this.getSortedDataSource(dataSource);\n        }\n        var options = this.listOption(dataSource, fields);\n        var spliceData = (dataSource.length > 100) ?\n            new DataManager(dataSource).executeLocal(new Query().take(100))\n            : dataSource;\n        this.sortedData = dataSource;\n        return ListBase.createList(this.createElement, (this.getModuleName() === 'autocomplete') ? spliceData : dataSource, options, true, this);\n    };\n    DropDownBase.prototype.listOption = function (dataSource, fields) {\n        var iconCss = isNullOrUndefined(fields.iconCss) ? false : true;\n        var fieldValues = !isNullOrUndefined(fields.properties) ?\n            fields.properties : fields;\n        var options = (fields.text !== null || fields.value !== null) ? {\n            fields: fieldValues,\n            showIcon: iconCss, ariaAttributes: { groupItemRole: 'presentation' }\n        } : { fields: { value: 'text' } };\n        return extend({}, options, fields, true);\n    };\n    DropDownBase.prototype.setFloatingHeader = function (e) {\n        if (isNullOrUndefined(this.fixedHeaderElement)) {\n            this.fixedHeaderElement = this.createElement('div', { className: dropDownBaseClasses.fixedHead });\n            if (!this.list.querySelector('li').classList.contains(dropDownBaseClasses.group)) {\n                this.fixedHeaderElement.style.display = 'none';\n            }\n            prepend([this.fixedHeaderElement], this.list);\n            this.setFixedHeader();\n        }\n        if (!isNullOrUndefined(this.fixedHeaderElement) && this.fixedHeaderElement.style.zIndex === '0') {\n            this.setFixedHeader();\n        }\n        this.scrollStop(e);\n    };\n    DropDownBase.prototype.scrollStop = function (e) {\n        var target = !isNullOrUndefined(e) ? e.target : this.list;\n        var liHeight = parseInt(getComputedStyle(this.getValidLi(), null).getPropertyValue('height'), 10);\n        var topIndex = Math.round(target.scrollTop / liHeight);\n        var liCollections = this.list.querySelectorAll('li' + ':not(.e-hide-listitem)');\n        for (var i = topIndex; i > -1; i--) {\n            if (!isNullOrUndefined(liCollections[i]) && liCollections[i].classList.contains(dropDownBaseClasses.group)) {\n                var currentLi = liCollections[i];\n                this.fixedHeaderElement.innerHTML = currentLi.innerHTML;\n                this.fixedHeaderElement.style.top = target.scrollTop + 'px';\n                this.fixedHeaderElement.style.display = 'block';\n                break;\n            }\n            else {\n                this.fixedHeaderElement.style.display = 'none';\n                this.fixedHeaderElement.style.top = 'none';\n            }\n        }\n    };\n    DropDownBase.prototype.getValidLi = function () {\n        return this.liCollections[0];\n    };\n    /**\n     * To render the list items\n     *\n     * @param {object[]} listData - Specifies the list of array of data.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @returns {HTMLElement} Return the list items.\n     */\n    DropDownBase.prototype.renderItems = function (listData, fields) {\n        var ulElement;\n        if (this.itemTemplate && listData) {\n            var dataSource = listData;\n            if (dataSource && fields.groupBy) {\n                if (this.sortOrder !== 'None') {\n                    dataSource = this.getSortedDataSource(dataSource);\n                }\n                dataSource = ListBase.groupDataSource(dataSource, fields.properties, this.sortOrder);\n            }\n            else {\n                dataSource = this.getSortedDataSource(dataSource);\n            }\n            this.sortedData = dataSource;\n            var spliceData = (dataSource.length > 100) ?\n                new DataManager(dataSource).executeLocal(new Query().take(100))\n                : dataSource;\n            ulElement = this.templateListItem((this.getModuleName() === 'autocomplete') ? spliceData : dataSource, fields);\n            var isTempEmpty = (this.getModuleName() === 'listbox') ? true : false;\n            this.DropDownBaseupdateBlazorTemplates(true, false, false, false, false, false, false, isTempEmpty);\n        }\n        else {\n            ulElement = this.createListItems(listData, fields);\n        }\n        return ulElement;\n    };\n    DropDownBase.prototype.templateListItem = function (dataSource, fields) {\n        this.DropDownBaseresetBlazorTemplates(true, false, false, false);\n        var option = this.listOption(dataSource, fields);\n        option.templateID = this.itemTemplateId;\n        option.isStringTemplate = this.isStringTemplate;\n        var itemcheck = this.templateCompiler(this.itemTemplate);\n        if (itemcheck) {\n            var itemValue = select(this.itemTemplate, document).innerHTML.trim();\n            return ListBase.renderContentTemplate(this.createElement, itemValue, dataSource, fields.properties, option, this);\n        }\n        else {\n            return ListBase.renderContentTemplate(this.createElement, this.itemTemplate, dataSource, fields.properties, option, this);\n        }\n    };\n    DropDownBase.prototype.typeOfData = function (items) {\n        var item = { typeof: null, item: null };\n        for (var i = 0; (!isNullOrUndefined(items) && i < items.length); i++) {\n            if (!isNullOrUndefined(items[i])) {\n                var listDataType = typeof (items[i]) === 'string' ||\n                    typeof (items[i]) === 'number' || typeof (items[i]) === 'boolean';\n                var isNullData = listDataType ? isNullOrUndefined(items[i]) :\n                    isNullOrUndefined(getValue((this.fields.value ? this.fields.value : 'value'), items[i]));\n                if (!isNullData) {\n                    return item = { typeof: typeof items[i], item: items[i] };\n                }\n            }\n        }\n        return item;\n    };\n    DropDownBase.prototype.setFixedHeader = function () {\n        this.list.parentElement.style.display = 'block';\n        var borderWidth = 0;\n        if (this.list && this.list.parentElement) {\n            borderWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-width'), 10);\n            /*Shorthand property not working in Firefox for getComputedStyle method.\n            Refer bug report https://bugzilla.mozilla.org/show_bug.cgi?id=137688\n            Refer alternate solution https://stackoverflow.com/a/41696234/9133493*/\n            if (isNaN(borderWidth)) {\n                var borderTopWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-top-width'), 10);\n                var borderBottomWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-bottom-width'), 10);\n                var borderLeftWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-left-width'), 10);\n                var borderRightWidth = parseInt(document.defaultView.getComputedStyle(this.list.parentElement, null).getPropertyValue('border-right-width'), 10);\n                borderWidth = (borderTopWidth + borderBottomWidth + borderLeftWidth + borderRightWidth);\n            }\n        }\n        var liWidth = this.getValidLi().offsetWidth - borderWidth;\n        this.fixedHeaderElement.style.width = liWidth.toString() + 'px';\n        setStyleAttribute(this.fixedHeaderElement, { zIndex: 10 });\n        var firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group + ':not(.e-hide-listitem)');\n        this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n    };\n    DropDownBase.prototype.getSortedDataSource = function (dataSource) {\n        if (dataSource && this.sortOrder !== 'None') {\n            var textField = this.fields.text ? this.fields.text : 'text';\n            if (this.typeOfData(dataSource).typeof === 'string' || this.typeOfData(dataSource).typeof === 'number'\n                || this.typeOfData(dataSource).typeof === 'boolean') {\n                textField = '';\n            }\n            dataSource = ListBase.getDataSource(dataSource, ListBase.addSorting(this.sortOrder, textField));\n        }\n        return dataSource;\n    };\n    /**\n     * Return the index of item which matched with given value in data source\n     *\n     * @param {string | number | boolean} value - Specifies given value.\n     * @returns {number} Returns the index of the item.\n     */\n    DropDownBase.prototype.getIndexByValue = function (value) {\n        var index;\n        var listItems = this.getItems();\n        for (var i = 0; i < listItems.length; i++) {\n            if (!isNullOrUndefined(value) && listItems[i].getAttribute('data-value') === value.toString()) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    };\n    /**\n     * To dispatch the event manually\n     *\n     * @param {HTMLElement} element - Specifies the element to dispatch the event.\n     * @param {string} type - Specifies the name of the event.\n     * @returns {void}\n     */\n    DropDownBase.prototype.dispatchEvent = function (element, type) {\n        var evt = document.createEvent('HTMLEvents');\n        evt.initEvent(type, false, true);\n        element.dispatchEvent(evt);\n    };\n    /**\n     * To set the current fields\n     *\n     * @returns {void}\n     */\n    DropDownBase.prototype.setFields = function () {\n        if (this.fields.value && !this.fields.text) {\n            this.updateFields(this.fields.value, this.fields.value);\n        }\n        else if (!this.fields.value && this.fields.text) {\n            this.updateFields(this.fields.text, this.fields.text);\n        }\n        else if (!this.fields.value && !this.fields.text) {\n            this.updateFields('text', 'text');\n        }\n    };\n    /**\n     * reset the items list.\n     *\n     * @param {Object[] | string[] | number[] | DataManager | boolean[]} dataSource - Specifies the data to generate the list.\n     * @param {FieldSettingsModel} fields - Maps the columns of the data table and binds the data to the component.\n     * @param {Query} query - Accepts the external Query that execute along with data processing.\n     * @returns {void}\n     */\n    DropDownBase.prototype.resetList = function (dataSource, fields, query) {\n        if (this.list) {\n            if ((this.element.tagName === 'SELECT' && this.element.options.length > 0)\n                || (this.element.tagName === 'UL' && this.element.childNodes.length > 0)) {\n                var data = dataSource instanceof Array ? (dataSource.length > 0)\n                    : !isNullOrUndefined(dataSource);\n                if (!data && this.selectData && this.selectData.length > 0) {\n                    dataSource = this.selectData;\n                }\n            }\n            this.setListData(dataSource, fields, query);\n        }\n    };\n    DropDownBase.prototype.updateSelectElementData = function (isFiltering) {\n        if (isFiltering && isNullOrUndefined(this.selectData) && this.listData && this.listData.length > 0) {\n            this.selectData = this.listData;\n        }\n    };\n    DropDownBase.prototype.updateSelection = function () {\n        // This is for after added the item, need to update the selected index values.\n    };\n    DropDownBase.prototype.renderList = function () {\n        // This is for render the list items.\n        this.render();\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DropDownBase.prototype.updateDataSource = function (props) {\n        this.resetList(this.dataSource);\n    };\n    DropDownBase.prototype.setUpdateInitial = function (props, newProp) {\n        this.isDataFetched = false;\n        var updateData = {};\n        for (var j = 0; props.length > j; j++) {\n            if (newProp[props[j]] && props[j] === 'fields') {\n                this.setFields();\n                updateData[props[j]] = newProp[props[j]];\n            }\n            else if (newProp[props[j]]) {\n                updateData[props[j]] = newProp[props[j]];\n            }\n        }\n        if (Object.keys(updateData).length > 0) {\n            if (Object.keys(updateData).indexOf('dataSource') === -1) {\n                updateData.dataSource = this.dataSource;\n            }\n            this.updateDataSource(updateData);\n        }\n    };\n    /**\n     * When property value changes happened, then onPropertyChanged method will execute the respective changes in this component.\n     *\n     * @param {DropDownBaseModel} newProp - Returns the dynamic property value of the component.\n     * @param {DropDownBaseModel} oldProp - Returns the previous property value of the component.\n     * @private\n     * @returns {void}\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DropDownBase.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (this.getModuleName() === 'dropdownbase') {\n            this.setUpdateInitial(['fields', 'query', 'dataSource'], newProp);\n        }\n        this.setUpdateInitial(['sortOrder', 'itemTemplate'], newProp);\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'query':\n                case 'sortOrder':\n                case 'dataSource':\n                case 'itemTemplate':\n                    break;\n                case 'enableRtl':\n                    this.setEnableRtl();\n                    break;\n                case 'enabled':\n                    this.setEnabled();\n                    break;\n                case 'groupTemplate':\n                    this.renderGroupTemplate(this.list);\n                    if (this.ulElement && this.fixedHeaderElement) {\n                        var firstLi = this.ulElement.querySelector('.' + dropDownBaseClasses.group);\n                        this.fixedHeaderElement.innerHTML = firstLi.innerHTML;\n                    }\n                    break;\n                case 'locale':\n                    if (this.list && (!isNullOrUndefined(this.liCollections) && this.liCollections.length === 0)) {\n                        this.l10nUpdate();\n                    }\n                    break;\n                case 'zIndex':\n                    this.setProperties({ zIndex: newProp.zIndex }, true);\n                    this.setZIndex();\n                    break;\n            }\n        }\n    };\n    /**\n     * Build and render the component\n     *\n     * @param {boolean} isEmptyData - Specifies the component to initialize with list data or not.\n     * @private\n     * @returns {void}\n     */\n    DropDownBase.prototype.render = function (isEmptyData) {\n        this.list = this.createElement('div', { className: dropDownBaseClasses.content, attrs: { 'tabindex': '0' } });\n        this.list.classList.add(dropDownBaseClasses.root);\n        this.setFields();\n        var rippleModel = { duration: 300, selector: '.' + dropDownBaseClasses.li };\n        this.rippleFun = rippleEffect(this.list, rippleModel);\n        var group = this.element.querySelector('select>optgroup');\n        if ((this.fields.groupBy || !isNullOrUndefined(group)) && !this.isGroupChecking) {\n            EventHandler.add(this.list, 'scroll', this.setFloatingHeader, this);\n        }\n        if (this.getModuleName() === 'dropdownbase') {\n            if (this.element.getAttribute('tabindex')) {\n                this.list.setAttribute('tabindex', this.element.getAttribute('tabindex'));\n            }\n            removeClass([this.element], dropDownBaseClasses.root);\n            this.element.style.display = 'none';\n            var wrapperElement = this.createElement('div');\n            this.element.parentElement.insertBefore(wrapperElement, this.element);\n            wrapperElement.appendChild(this.element);\n            wrapperElement.appendChild(this.list);\n        }\n        this.setEnableRtl();\n        this.setEnabled();\n        if (!isEmptyData) {\n            this.initialize();\n        }\n    };\n    /**\n     * Return the module name of this component.\n     *\n     * @private\n     * @returns {string} Return the module name of this component.\n     */\n    DropDownBase.prototype.getModuleName = function () {\n        return 'dropdownbase';\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets all the list items bound on this component.\n     *\n     * @returns {Element[]}\n     */\n    DropDownBase.prototype.getItems = function () {\n        return this.ulElement.querySelectorAll('.' + dropDownBaseClasses.li);\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Adds a new item to the popup list. By default, new item appends to the list as the last item,\n     * but you can insert based on the index parameter.\n     *\n     * @param  { Object[] } items - Specifies an array of JSON data or a JSON data.\n     * @param { number } itemIndex - Specifies the index to place the newly added item in the popup list.\n     * @returns {void}\n\n     */\n    DropDownBase.prototype.addItem = function (items, itemIndex) {\n        if (!this.list || (this.list.textContent === this.noRecordsTemplate && this.getModuleName() !== 'listbox')) {\n            this.renderList();\n        }\n        if (this.sortOrder !== 'None' && isNullOrUndefined(itemIndex)) {\n            var newList = [].slice.call(this.listData);\n            newList.push(items);\n            newList = this.getSortedDataSource(newList);\n            if (this.fields.groupBy) {\n                newList = ListBase.groupDataSource(newList, this.fields.properties, this.sortOrder);\n                itemIndex = newList.indexOf(items);\n            }\n            else {\n                itemIndex = newList.indexOf(items);\n            }\n        }\n        this.DropDownBaseresetBlazorTemplates(true, false, false, false);\n        var itemsCount = this.getItems().length;\n        var selectedItemValue = this.list.querySelector('.' + dropDownBaseClasses.selected);\n        items = (items instanceof Array ? items : [items]);\n        var index;\n        index = (isNullOrUndefined(itemIndex) || itemIndex < 0 || itemIndex > itemsCount - 1) ? itemsCount : itemIndex;\n        var fields = this.fields;\n        if (items && fields.groupBy) {\n            items = ListBase.groupDataSource(items, fields.properties);\n        }\n        var liCollections = [];\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var isHeader = item.isHeader;\n            var li = this.createElement('li', { className: isHeader ? dropDownBaseClasses.group : dropDownBaseClasses.li, id: 'option-add-' + i });\n            var itemText = item instanceof Object ? getValue(fields.text, item) : item;\n            if (isHeader) {\n                li.innerText = itemText;\n            }\n            if (this.itemTemplate && !isHeader) {\n                var compiledString = compile(this.itemTemplate);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                var addItemTemplate = compiledString(item, this, 'itemTemplate', this.itemTemplateId, this.isStringTemplate, null, li);\n                if (addItemTemplate) {\n                    append(addItemTemplate, li);\n                }\n                this.DropDownBaseupdateBlazorTemplates(true, false, false, false);\n            }\n            else if (!isHeader) {\n                li.appendChild(document.createTextNode(itemText));\n            }\n            li.setAttribute('data-value', item instanceof Object ? getValue(fields.value, item) : item);\n            li.setAttribute('role', 'option');\n            this.notify('addItem', { module: 'CheckBoxSelection', item: li });\n            liCollections.push(li);\n            this.listData.push(item);\n            if (this.sortOrder === 'None' && isNullOrUndefined(itemIndex) && index === 0) {\n                index = null;\n            }\n            this.updateActionCompleteData(li, item, index);\n            //Listbox event\n            this.trigger('beforeItemRender', { element: li, item: item });\n        }\n        if (itemsCount === 0 && isNullOrUndefined(this.list.querySelector('ul'))) {\n            this.list.innerHTML = '';\n            this.list.classList.remove(dropDownBaseClasses.noData);\n            this.list.appendChild(this.ulElement);\n            this.liCollections = liCollections;\n            append(liCollections, this.ulElement);\n            this.updateAddItemList(this.list, itemsCount);\n        }\n        else {\n            if (this.getModuleName() === 'listbox' && itemsCount === 0) {\n                this.ulElement.innerHTML = '';\n            }\n            var attr = [];\n            for (var i = 0; i < items.length; i++) {\n                var listGroupItem = this.ulElement.querySelectorAll('.e-list-group-item');\n                for (var j = 0; j < listGroupItem.length; j++) {\n                    attr[j] = listGroupItem[j].innerText;\n                }\n                if (attr.indexOf(liCollections[i].innerText) > -1 && fields.groupBy) {\n                    for (var j = 0; j < listGroupItem.length; j++) {\n                        if (attr[j] === liCollections[i].innerText) {\n                            if (this.sortOrder === 'None') {\n                                this.ulElement.insertBefore(liCollections[i + 1], listGroupItem[j + 1]);\n                            }\n                            else {\n                                this.ulElement.insertBefore(liCollections[i + 1], this.ulElement.childNodes[itemIndex]);\n                            }\n                            i = i + 1;\n                            break;\n                        }\n                    }\n                }\n                else {\n                    if (this.liCollections[index]) {\n                        this.liCollections[index].parentNode.insertBefore(liCollections[i], this.liCollections[index]);\n                    }\n                    else {\n                        this.ulElement.appendChild(liCollections[i]);\n                    }\n                }\n                var tempLi = [].slice.call(this.liCollections);\n                tempLi.splice(index, 0, liCollections[i]);\n                this.liCollections = tempLi;\n                index += 1;\n                if (this.getModuleName() === 'multiselect') {\n                    this.updateDataList();\n                }\n            }\n        }\n        if (selectedItemValue || itemIndex === 0) {\n            this.updateSelection();\n        }\n    };\n    DropDownBase.prototype.validationAttribute = function (target, hidden) {\n        var name = target.getAttribute('name') ? target.getAttribute('name') : target.getAttribute('id');\n        hidden.setAttribute('name', name);\n        target.removeAttribute('name');\n        var attributes = ['required', 'aria-required', 'form'];\n        for (var i = 0; i < attributes.length; i++) {\n            if (!target.getAttribute(attributes[i])) {\n                continue;\n            }\n            var attr = target.getAttribute(attributes[i]);\n            hidden.setAttribute(attributes[i], attr);\n            target.removeAttribute(attributes[i]);\n        }\n    };\n    DropDownBase.prototype.setZIndex = function () {\n        // this is for component wise\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DropDownBase.prototype.updateActionCompleteData = function (li, item, index) {\n        // this is for ComboBox custom value\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    DropDownBase.prototype.updateAddItemList = function (list, itemCount) {\n        // this is for multiselect add item\n    };\n    DropDownBase.prototype.updateDataList = function () {\n        // this is for multiselect update list items\n    };\n    /* eslint-disable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Gets the data Object that matches the given value.\n     *\n     * @param { string | number } value - Specifies the value of the list item.\n     * @returns {Object}\n     * @blazorType object\n     */\n    DropDownBase.prototype.getDataByValue = function (value) {\n        if (!isNullOrUndefined(this.listData)) {\n            var type = this.typeOfData(this.listData).typeof;\n            if (type === 'string' || type === 'number' || type === 'boolean') {\n                for (var _i = 0, _a = this.listData; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (!isNullOrUndefined(item) && item === value) {\n                        return item;\n                    }\n                }\n            }\n            else {\n                for (var _b = 0, _c = this.listData; _b < _c.length; _b++) {\n                    var item = _c[_b];\n                    if (!isNullOrUndefined(item) && getValue((this.fields.value ? this.fields.value : 'value'), item) === value) {\n                        return item;\n                    }\n                }\n            }\n        }\n        return null;\n    };\n    /* eslint-enable valid-jsdoc, jsdoc/require-returns-description */\n    /**\n     * Removes the component from the DOM and detaches all its related event handlers. It also removes the attributes and classes.\n     *\n     * @method destroy\n     * @returns {void}\n     */\n    DropDownBase.prototype.destroy = function () {\n        if (document.body.contains(this.list)) {\n            EventHandler.remove(this.list, 'scroll', this.setFloatingHeader);\n            if (!isNullOrUndefined(this.rippleFun)) {\n                this.rippleFun();\n            }\n            detach(this.list);\n        }\n        _super.prototype.destroy.call(this);\n    };\n    __decorate([\n        Complex({ text: null, value: null, iconCss: null, groupBy: null }, FieldSettings)\n    ], DropDownBase.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], DropDownBase.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Property(null)\n    ], DropDownBase.prototype, \"itemTemplate\", void 0);\n    __decorate([\n        Property(null)\n    ], DropDownBase.prototype, \"groupTemplate\", void 0);\n    __decorate([\n        Property('No records found')\n    ], DropDownBase.prototype, \"noRecordsTemplate\", void 0);\n    __decorate([\n        Property('Request failed')\n    ], DropDownBase.prototype, \"actionFailureTemplate\", void 0);\n    __decorate([\n        Property('None')\n    ], DropDownBase.prototype, \"sortOrder\", void 0);\n    __decorate([\n        Property(true)\n    ], DropDownBase.prototype, \"enabled\", void 0);\n    __decorate([\n        Property([])\n    ], DropDownBase.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property(null)\n    ], DropDownBase.prototype, \"query\", void 0);\n    __decorate([\n        Property('StartsWith')\n    ], DropDownBase.prototype, \"filterType\", void 0);\n    __decorate([\n        Property(true)\n    ], DropDownBase.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property(1000)\n    ], DropDownBase.prototype, \"zIndex\", void 0);\n    __decorate([\n        Property(false)\n    ], DropDownBase.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], DropDownBase.prototype, \"locale\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"select\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DropDownBase.prototype, \"destroyed\", void 0);\n    DropDownBase = __decorate([\n        NotifyPropertyChanges\n    ], DropDownBase);\n    return DropDownBase;\n}(Component));\nexport { DropDownBase };\n"]},"metadata":{},"sourceType":"module"}