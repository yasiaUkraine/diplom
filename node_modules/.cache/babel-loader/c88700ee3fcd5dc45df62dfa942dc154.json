{"ast":null,"code":"var _jsxFileName = \"/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js\";\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore, database } from '../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatCreate = props => {\n  const {\n    setUserCurrent,\n    userCurrent,\n    idUser\n  } = props;\n\n  const handleEnd = async ({\n    steps,\n    values\n  }) => {\n    const user = {};\n    user.duration = values[1];\n    user.profession = values[2];\n    user.status = values[0];\n    user.address = values[4];\n    user.phone = values[3];\n    user.displayName = userCurrent.displayName;\n    user.new = false;\n    user.email = userCurrent.email;\n    setUserCurrent(user);\n    console.log(123, user, idUser);\n    firestore().collection('users').doc(idUser).update({\n      'displayName': '94040'\n    }).then(() => {\n      console.log('User updated!');\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatBot, {\n    steps: stepsStart,\n    handleEnd: handleEnd\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatCreate;\nChatCreate.propTypes = {\n  steps: PropTypes.object\n};\nChatCreate.defaultProps = {\n  steps: undefined\n};\nexport default ChatCreate;\nexport const stepsStart = [{\n  id: '1',\n  message: 'What is your position??',\n  trigger: 'position'\n}, {\n  id: 'position',\n  options: [{\n    value: 'Junior',\n    label: 'Junior',\n    trigger: '2'\n  }, {\n    value: 'Middle',\n    label: 'Middle',\n    trigger: '2'\n  }, {\n    value: 'Senior',\n    label: 'Senior',\n    trigger: '2'\n  }, {\n    value: 'Lead',\n    label: 'Lead',\n    trigger: '2'\n  }]\n}, {\n  id: '2',\n  message: 'What is your global direction?',\n  trigger: 'duration'\n}, {\n  id: 'duration',\n  options: [{\n    value: 'Frontend Developer',\n    label: 'Frontend Developer',\n    trigger: 'front'\n  }, {\n    value: 'Backend Developer',\n    label: 'Backend Developer',\n    trigger: 'back'\n  }, {\n    value: 'Testers',\n    label: 'Testers',\n    trigger: 'test'\n  }]\n}, {\n  id: '9',\n  user: true,\n  trigger: '3'\n}, {\n  id: 'front',\n  message: 'What is your key technology?',\n  trigger: 'front_options'\n}, {\n  id: 'front_options',\n  options: [{\n    value: 'ReactJS',\n    label: 'ReactJS',\n    trigger: '3'\n  }, {\n    value: 'React Native',\n    label: 'React Native',\n    trigger: '3'\n  }, {\n    value: 'AngularJS',\n    label: 'AngularJS',\n    trigger: '3'\n  }, {\n    value: 'NodeJS',\n    label: 'NodeJS',\n    trigger: '3'\n  }, {\n    value: 'Vue',\n    label: 'Vue',\n    trigger: '3'\n  }, {\n    value: 'BabelJs',\n    label: 'BabelJs',\n    trigger: '3'\n  }]\n}, {\n  id: 'back',\n  message: 'What is your key technology?',\n  trigger: 'back_options'\n}, {\n  id: 'back_options',\n  options: [{\n    value: 'Java',\n    label: 'Java',\n    trigger: '3'\n  }, {\n    value: '.NET',\n    label: '.NET',\n    trigger: '3'\n  }, {\n    value: 'PHP',\n    label: 'PHP',\n    trigger: '3'\n  }, {\n    value: 'Python',\n    label: 'Python',\n    trigger: '3'\n  }, {\n    value: 'C++',\n    label: 'C++',\n    trigger: '3'\n  }, {\n    value: 'Maven',\n    label: 'Maven',\n    trigger: '3'\n  }]\n}, {\n  id: 'test',\n  message: 'What is your key technology?',\n  trigger: 'test_options'\n}, {\n  id: 'test_options',\n  options: [{\n    value: 'Automated Test Specialists',\n    label: 'Automated Test Specialists',\n    trigger: '3'\n  }, {\n    value: 'DBMS testers',\n    label: 'DBMS testers',\n    trigger: '3'\n  }, {\n    value: 'Test Analysts',\n    label: 'Test Analysts',\n    trigger: '3'\n  }, {\n    value: 'Developers-testers',\n    label: 'Developers-testers',\n    trigger: '3'\n  }, {\n    value: 'Testers-DevOPs',\n    label: 'Testers-DevOPs',\n    trigger: '3'\n  }]\n}, {\n  id: '3',\n  message: 'What is your phone?',\n  trigger: 'phone'\n}, {\n  id: 'phone',\n  user: true,\n  trigger: '4',\n  validator: value => {\n    if (isNaN(value)) {\n      return 'value must be a number';\n    } else if (value < 0) {\n      return 'value must be positive';\n    } else if (value < 9) {\n      return `Your enter incorrect number`;\n    }\n\n    return true;\n  }\n}, {\n  id: '4',\n  message: 'What is your office address?',\n  trigger: 'address'\n}, {\n  id: 'address',\n  options: [{\n    value: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`,\n    label: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`,\n    trigger: '5'\n  }, {\n    value: `5200 Yonge Street North York, ON M2N 5P6 Canada`,\n    label: `5200 Yonge Street North York, ON M2N 5P6 Canada`,\n    trigger: '5'\n  }, {\n    value: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`,\n    label: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`,\n    trigger: '5'\n  }]\n}, {\n  id: '5',\n  message: 'Аre you a member of any project?',\n  trigger: '5_options'\n}, {\n  id: '5_options',\n  options: [{\n    value: 'yes',\n    label: 'Yes',\n    trigger: 'projectOptions'\n  }, {\n    value: 'no',\n    label: 'No',\n    trigger: 'end'\n  }]\n}, {\n  id: 'projectOptions',\n  message: 'Аre you a member of any project?',\n  trigger: 'end'\n}, {\n  id: 'end',\n  message: 'Thanks! Your data was submitted successfully!',\n  end: true\n}];\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatCreate\");","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/src/component/ChatCreate.js"],"names":["ChatBot","PropTypes","firestore","database","ChatCreate","props","setUserCurrent","userCurrent","idUser","handleEnd","steps","values","user","duration","profession","status","address","phone","displayName","new","email","console","log","collection","doc","update","then","stepsStart","propTypes","object","defaultProps","undefined","id","message","trigger","options","value","label","validator","isNaN","end"],"mappings":"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","sourcesContent":["\nimport ChatBot from 'react-simple-chatbot';\nimport PropTypes from 'prop-types';\nimport { firestore, database } from '../firebase';\n\nconst ChatCreate = (props) => {\n    const { setUserCurrent, userCurrent, idUser} = props;\n\n    const handleEnd = async ({ steps, values }) => {\n        const user = {};\n        user.duration = values[1];\n        user.profession = values[2];\n        user.status = values[0];\n        user.address = values[4];\n        user.phone = values[3];\n        user.displayName = userCurrent.displayName;\n        user.new = false;\n        user.email = userCurrent.email;\n\n        setUserCurrent(user);\n        console.log(123, user ,idUser);\n        firestore()\n        .collection('users')\n        .doc(idUser)\n        .update({\n            'displayName': '94040',\n        })\n        .then(() => {\n            console.log('User updated!');\n        });\n      }\n\n    return (\n        <ChatBot\n          steps={stepsStart}\n          handleEnd={handleEnd}\n        />\n    );\n}\n  \n  ChatCreate.propTypes = {\n    steps: PropTypes.object,\n  };\n  \n  ChatCreate.defaultProps = {\n    steps: undefined,\n  };\n  \n  export default ChatCreate;\n\n  export const stepsStart = [\n      {\n        id: '1',\n        message: 'What is your position??',\n        trigger: 'position',\n      },\n      {\n        id: 'position',\n        options: [\n          { value: 'Junior', label: 'Junior', trigger: '2' },\n          { value: 'Middle', label: 'Middle', trigger: '2' },\n          { value: 'Senior', label: 'Senior', trigger: '2' },\n          { value: 'Lead', label: 'Lead', trigger: '2' },\n        ],\n      },\n      {\n        id: '2',\n        message: 'What is your global direction?',\n        trigger: 'duration',\n      },\n      {\n        id: 'duration',\n        options: [\n          { value: 'Frontend Developer', label: 'Frontend Developer', trigger: 'front' },\n          { value: 'Backend Developer', label: 'Backend Developer', trigger: 'back' },\n          { value: 'Testers', label: 'Testers', trigger: 'test' },\n        ],\n      },\n      {\n        id: '9',\n        user: true,\n        trigger: '3',\n      },\n      {\n        id: 'front',\n        message: 'What is your key technology?',\n        trigger: 'front_options',\n      },\n      {\n        id: 'front_options',\n        options: [\n          { value: 'ReactJS', label: 'ReactJS', trigger: '3' },\n          { value: 'React Native', label: 'React Native', trigger: '3' },\n          { value: 'AngularJS', label: 'AngularJS', trigger: '3' },\n          { value: 'NodeJS', label: 'NodeJS', trigger: '3' },\n          { value: 'Vue', label: 'Vue', trigger: '3' },  \n          { value: 'BabelJs', label: 'BabelJs', trigger: '3' },\n        ],\n      },\n      {\n        id: 'back',\n        message: 'What is your key technology?',\n        trigger: 'back_options',\n      },\n      {\n        id: 'back_options',\n        options: [\n          { value: 'Java', label: 'Java', trigger: '3' },\n          { value: '.NET', label: '.NET', trigger: '3' },\n          { value: 'PHP', label: 'PHP', trigger: '3' },\n          { value: 'Python', label: 'Python', trigger: '3' },\n          { value: 'C++', label: 'C++', trigger: '3' },  \n          { value: 'Maven', label: 'Maven', trigger: '3' },\n        ],\n      },\n      {\n        id: 'test',\n        message: 'What is your key technology?',\n        trigger: 'test_options',\n      },\n      {\n        id: 'test_options',\n        options: [\n          { value: 'Automated Test Specialists', label: 'Automated Test Specialists', trigger: '3' },\n          { value: 'DBMS testers', label: 'DBMS testers', trigger: '3' },\n          { value: 'Test Analysts', label: 'Test Analysts', trigger: '3' },\n          { value: 'Developers-testers', label: 'Developers-testers', trigger: '3' },\n          { value: 'Testers-DevOPs', label: 'Testers-DevOPs', trigger: '3' },  \n        ],\n      },\n      {\n        id: '3',\n        message: 'What is your phone?',\n        trigger: 'phone',\n      },\n      {\n        id: 'phone',\n        user: true,\n        trigger: '4',\n        validator: (value) => {\n          if (isNaN(value)) {\n            return 'value must be a number';\n          } else if (value < 0) {\n            return 'value must be positive';\n          } else if (value < 9) {\n            return `Your enter incorrect number`;\n          }\n\n          return true;\n        },\n      },\n      {\n        id: '4',\n        message: 'What is your office address?',\n        trigger: 'address',\n      },\n      {\n        id: 'address',\n        options: [\n          { value: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`, \n            label: `343 Preston Street 11th Floor Ottawa, ON K1S 1N4\n          Canada`, \n            trigger: '5' },\n          { value: `5200 Yonge Street North York, ON M2N 5P6 Canada`, \n            label: `5200 Yonge Street North York, ON M2N 5P6 Canada`, \n            trigger: '5' },\n          { value: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`, \n            label: `110 110th Ave. NE Suite 310 Bellevue, WA 98004 USA`, \n            trigger: '5' },\n        ],\n      },\n      {\n        id: '5',\n        message: 'Аre you a member of any project?',\n        trigger: '5_options',\n      },\n      {\n        id: '5_options',\n        options: [\n            { value: 'yes', label: 'Yes', trigger: 'projectOptions' },\n            { value: 'no', label: 'No', trigger: 'end' },\n        ],\n      },\n      {\n        id: 'projectOptions',\n        message: 'Аre you a member of any project?',\n        trigger: 'end',\n      },\n      {\n        id: 'end',\n        message: 'Thanks! Your data was submitted successfully!',\n        end: true,\n      },\n];"]},"metadata":{},"sourceType":"module"}