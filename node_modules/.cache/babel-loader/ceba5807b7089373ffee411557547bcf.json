{"ast":null,"code":"import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\nvar globalTimeOut = {};\nvar DEFT_MAT_WIDTH = 30;\nvar DEFT_FAB_WIDTH = 30;\nvar DEFT_BOOT_WIDTH = 30;\nvar DEFT_BOOT4_WIDTH = 36;\nvar CLS_SHOWSPIN = 'e-spin-show';\nvar CLS_HIDESPIN = 'e-spin-hide';\nvar CLS_MATERIALSPIN = 'e-spin-material';\nvar CLS_FABRICSPIN = 'e-spin-fabric';\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\nvar CLS_SPINWRAP = 'e-spinner-pane';\nvar CLS_SPININWRAP = 'e-spinner-inner';\nvar CLS_SPINCIRCLE = 'e-path-circle';\nvar CLS_SPINARC = 'e-path-arc';\nvar CLS_SPINLABEL = 'e-spin-label';\nvar CLS_SPINTEMPLATE = 'e-spin-template';\nvar spinTemplate = null;\nvar spinCSSClass = null; // eslint-disable-next-line\n\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\n  * ```\n  *\n  * @param {string} action - specifies the string\n  * @param {CreateArgs} options - specifies the args\n  * @param {string} target - specifies the target\n  * @param {string} type - specifes the type\n  * @returns {void}\n  * @private\n  */\n\nexport function Spinner(action, options, target, type) {\n  switch (action) {\n    case 'Create':\n      /* eslint-disable */\n      var element = document.querySelector(options.target);\n      var args = {\n        type: type,\n        target: element,\n        cssClass: options.cssClass,\n        label: options.label,\n        width: options.width\n      };\n      /* eslint-enable */\n\n      createSpinner(args);\n      break;\n\n    case 'Show':\n      showSpinner(document.querySelector(target));\n      break;\n\n    case 'Hide':\n      hideSpinner(document.querySelector(target));\n      break;\n\n    case 'Set':\n      // eslint-disable-next-line\n      var setArgs = {\n        cssClass: options.cssClass,\n        type: type\n      };\n      setSpinner(setArgs);\n      break;\n  }\n}\n/**\n * Create a spinner for the specified target element.\n * ```\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\n * ```\n *\n * @param {SpinnerArgs} args - specifies the args\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\n * @returns {void}\n * @private\n */\n\nexport function createSpinner(args, internalCreateElement) {\n  if (!args.target) {\n    return;\n  }\n\n  var radius;\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement; // eslint-disable-next-line\n\n  var container = create_spinner_container(args.target, makeElement);\n\n  if (!isNullOrUndefined(args.cssClass)) {\n    container.wrap.classList.add(args.cssClass);\n  }\n\n  if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\n    var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\n    container.wrap.classList.add(CLS_SPINTEMPLATE);\n    replaceContent(container.wrap, template, spinCSSClass);\n  } else {\n    var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\n    var width = !isNullOrUndefined(args.width) ? args.width : undefined;\n    radius = calculateRadius(width, theme);\n    setTheme(theme, container.wrap, radius, makeElement);\n\n    if (!isNullOrUndefined(args.label)) {\n      createLabel(container.inner_wrap, args.label, makeElement);\n    }\n  }\n\n  container.wrap.classList.add(CLS_HIDESPIN);\n  container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} label - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {HTMLElement} - returns the element\n */\n\nfunction createLabel(container, label, makeElement) {\n  var labelEle = makeElement('div', {});\n  labelEle.classList.add(CLS_SPINLABEL);\n  labelEle.innerHTML = label;\n  container.appendChild(labelEle);\n  return labelEle;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createMaterialSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Material',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\n  mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createBootstrap4Spinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap4',\n    radius: radius\n  };\n  create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\n  mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} uniqueID - specifies the id.\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n\n\nfunction startMatAnimate(container, uniqueID, radius) {\n  var globalObject = {};\n  var timeOutVar = 0;\n  globalTimeOut[uniqueID].timeOut = 0;\n  globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0); // eslint-disable-next-line\n\n  var spinnerInfo = {\n    uniqueID: uniqueID,\n    container: container,\n    globalInfo: globalObject,\n    timeOutVar: timeOutVar\n  };\n  animateMaterial(spinnerInfo);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createFabricSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Fabric',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createHighContrastSpinner(container, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'HighContrast',\n    radius: radius\n  };\n  create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\n  fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @returns {string} - returns the string\n */\n\n\nfunction getTheme(container) {\n  var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n  return theme.replace(/['\"]+/g, '');\n}\n/**\n *\n * @param {string} theme - specifies the theme\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction setTheme(theme, container, radius, makeElement) {\n  var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\n  var svg = innerContainer.querySelector('svg');\n\n  if (!isNullOrUndefined(svg)) {\n    innerContainer.removeChild(svg);\n  }\n\n  switch (theme) {\n    case 'Material':\n      createMaterialSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Fabric':\n      createFabricSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap':\n      createBootstrapSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'HighContrast':\n      createHighContrastSpinner(innerContainer, radius, makeElement);\n      break;\n\n    case 'Bootstrap4':\n      createBootstrap4Spinner(innerContainer, radius, makeElement);\n      break;\n  }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n\n\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\n  var uniqueID = random_generator();\n  globalTimeOut[uniqueID] = {\n    timeOut: 0,\n    type: 'Bootstrap',\n    radius: radius\n  };\n  create_bootstrap_element(innerContainer, uniqueID, makeElement);\n  boot_calculate_attributes(innerContainer, radius);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the id\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\n  var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var viewBoxValue = 64;\n  var trans = 32;\n  var defaultRadius = 2;\n  svgBoot.setAttribute('id', uniqueID);\n  svgBoot.setAttribute('class', CLS_BOOTSPIN);\n  svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\n  innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\n\n  for (var item = 0; item <= 7; item++) {\n    var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\n    bootCircle.setAttribute('r', defaultRadius + '');\n    bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\n    svgBoot.appendChild(bootCircle);\n  }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction boot_calculate_attributes(innerContainer, radius) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var x = 0;\n  var y = 0;\n  var rad = 24;\n  svg.style.width = svg.style.height = radius + 'px';\n  var startArc = 90;\n\n  for (var item = 0; item <= 7; item++) {\n    var start = defineArcPoints(x, y, rad, startArc);\n    var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\n    circleEle.setAttribute('cx', start.x + '');\n    circleEle.setAttribute('cy', start.y + '');\n    startArc = startArc >= 360 ? 0 : startArc;\n    startArc = startArc + 45;\n  }\n}\n/**\n *\n * @param {number} begin - specifies the number\n * @param {number} stop  - specifirs the number\n * @returns {number[]} - returns the array of number\n */\n\n\nfunction generateSeries(begin, stop) {\n  var series = [];\n  var start = begin;\n  var end = stop; // eslint-disable-next-line\n\n  var increment = false,\n      count = 1;\n  formSeries(start);\n  /**\n   *\n   * @param {number} i - specifies the number\n   * @returns {void}\n   */\n\n  function formSeries(i) {\n    series.push(i);\n\n    if (i !== end || count === 1) {\n      if (i <= start && i > 1 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      } else if (i === 1) {\n        i = 7;\n        i = parseFloat((i + 0.2).toFixed(2));\n        increment = true;\n      } else if (i < 8 && increment) {\n        i = parseFloat((i + 0.2).toFixed(2));\n\n        if (i === 8) {\n          increment = false;\n        }\n      } else if (i <= 8 && !increment) {\n        i = parseFloat((i - 0.2).toFixed(2));\n      }\n\n      ++count;\n      formSeries(i);\n    }\n  }\n\n  return series;\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @returns {void}\n */\n\n\nfunction animateBootstrap(innerContainer) {\n  var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n  var id = svg.getAttribute('id');\n\n  for (var i = 1; i <= 8; i++) {\n    var circleEle = innerContainer.getElementsByClassName('e-path-circle_' + (i === 8 ? 0 : i))[0];\n    rotation(circleEle, i, i, generateSeries(i, i), id);\n  }\n  /**\n   *\n   * @param {SVGCircleElement} circle - specifies the circl element\n   * @param {number} start - specifies the number\n   * @param {number} end - specifies the end number\n   * @param {number} series - specifies the series\n   * @param {string} id - specifies the id\n   * @returns {void}\n   */\n\n\n  function rotation(circle, start, end, series, id) {\n    var count = 0;\n    boot_animate(start); // eslint-disable-next-line\n\n    function boot_animate(radius) {\n      if (globalTimeOut[id].isAnimate) {\n        ++count;\n        circle.setAttribute('r', radius + '');\n\n        if (count >= series.length) {\n          count = 0;\n        } // eslint-disable-next-line\n\n\n        globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\n      }\n    }\n  }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} template - specifies the template\n * @param {string} cssClass - specifies the css class.\n * @returns {void}\n */\n\n\nfunction replaceContent(container, template, cssClass) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var inner = container.querySelector('.e-spinner-inner');\n  inner.innerHTML = template;\n}\n/**\n *\n * @param {string} width - specifies the width\n * @param {string} theme - specifies the string\n * @returns {number} - returns the number\n */\n\n\nfunction calculateRadius(width, theme) {\n  var defaultSize;\n\n  switch (theme) {\n    case 'Material':\n      defaultSize = DEFT_MAT_WIDTH;\n      break;\n\n    case 'Fabric':\n      defaultSize = DEFT_FAB_WIDTH;\n      break;\n\n    case 'Bootstrap4':\n      defaultSize = DEFT_BOOT4_WIDTH;\n      break;\n\n    default:\n      defaultSize = DEFT_BOOT_WIDTH;\n  }\n\n  width = width ? parseFloat(width + '') : defaultSize;\n  return theme === 'Bootstrap' ? width : width / 2;\n}\n/**\n *\n * @param {string} id - specifies the id\n * @param {number} radius - specifies the radius\n * @param {number} count - specifies the number count\n * @param {number} previousId - specifies the previous id\n * @returns {GlobalVariables} - returns the variables\n */\n\n\nfunction globalVariables(id, radius, count, previousId) {\n  return {\n    radius: radius,\n    count: count,\n    previousId: previousId\n  };\n}\n/**\n * @returns {string} - returns the string\n */\n// eslint-disable-next-line\n\n\nfunction random_generator() {\n  var random = '';\n  var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (var i = 0; i < 5; i++) {\n    random += combine.charAt(Math.floor(Math.random() * combine.length));\n  }\n\n  return random;\n}\n/**\n *\n * @param {HTMLElement} innerCon - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {string} themeClass - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\n  var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svgFabric.setAttribute('id', uniqueID);\n  svgFabric.setAttribute('class', themeClass);\n  var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  fabricCircleArc.setAttribute('class', CLS_SPINARC);\n  innerCon.insertBefore(svgFabric, innerCon.firstChild);\n  svgFabric.appendChild(fabricCirclePath);\n  svgFabric.appendChild(fabricCircleArc);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {createElementParams} makeElement - specifies the element\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\n  var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  svgMaterial.setAttribute('class', cls);\n  svgMaterial.setAttribute('id', uniqueID);\n  matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n  innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\n  svgMaterial.appendChild(matCirclePath);\n}\n/**\n *\n * @param {HTMLElement} target - specifies the element\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction create_spinner_container(target, makeElement) {\n  var spinnerContainer = makeElement('div', {});\n  var spinnerInnerContainer = makeElement('div', {});\n  spinnerContainer.classList.add(CLS_SPINWRAP);\n  spinnerInnerContainer.classList.add(CLS_SPININWRAP);\n  target.appendChild(spinnerContainer);\n  spinnerContainer.appendChild(spinnerInnerContainer); // eslint-disable-next-line\n\n  return {\n    wrap: spinnerContainer,\n    inner_wrap: spinnerInnerContainer\n  };\n}\n/**\n *\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\n * @returns {void}\n */\n\n\nfunction animateMaterial(spinnerInfo) {\n  var start = 1;\n  var end = 149;\n  var duration = 1333;\n  var max = 75;\n  createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\n  spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\n}\n/**\n *\n * @param {number} start - specifies the number\n * @param {number} end - specifies the end number\n * @param {Function} easing - specifies the function\n * @param {number} duration - specifies the duration\n * @param {number} count - specifies the count\n * @param {number} max - specifies the max number\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\n  var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\n  var startTime = new Date().getTime();\n  var change = end - start;\n  var diameter = getSize(spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2 + '');\n  var strokeSize = getStrokeSize(diameter);\n  var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\n  mat_animation(spinnerInfo); // eslint-disable-next-line\n\n  function mat_animation(spinnerInfo) {\n    var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\n    updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\n\n    if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\n      // eslint-disable-next-line\n      globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\n    } else {\n      animateMaterial(spinnerInfo);\n    }\n  }\n  /**\n   *\n   * @param {number} value - specifies the number value\n   * @param {HTMLElement} container - specifies the container\n   * @returns {void}\n   */\n\n\n  function updatePath(value, container) {\n    if (!isNullOrUndefined(container.querySelector('svg.e-spin-material')) && !isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle'))) {\n      var svg = container.querySelector('svg.e-spin-material');\n      var path = svg.querySelector('path.e-path-circle');\n      path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\n      path.setAttribute('transform', 'rotate(' + rotate + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\n    }\n  }\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} container - specifies the element\n * @param {string} type - specifies the string type\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction mat_calculate_attributes(radius, container, type, cls) {\n  var diameter = radius * 2;\n  var svg = container.querySelector('svg.' + cls);\n  var path = svg.querySelector('path.e-path-circle');\n  var strokeSize = getStrokeSize(diameter);\n  var transformOrigin = diameter / 2 + 'px';\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.width = svg.style.height = diameter + 'px';\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  path.setAttribute('d', drawArc(diameter, strokeSize));\n\n  if (type === 'Material') {\n    path.setAttribute('stroke-width', strokeSize + '');\n    path.setAttribute('stroke-dasharray', (diameter - strokeSize) * Math.PI * 0.75 + '');\n    path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\n  }\n}\n/**\n *\n * @param {string} value - specifies the value\n * @returns {number} - returns the number\n */\n\n\nfunction getSize(value) {\n  var parsed = parseFloat(value);\n  return parsed;\n}\n/**\n *\n * @param {number} diameter - specifies the diameter\n * @param {number} strokeSize - specifies the size\n * @returns {string} - returns the string\n */\n\n\nfunction drawArc(diameter, strokeSize) {\n  var radius = diameter / 2;\n  var offset = strokeSize / 2;\n  return 'M' + radius + ',' + offset + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @returns {number} - returns the number\n */\n\n\nfunction getStrokeSize(diameter) {\n  return 10 / 100 * diameter;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @param {number} strokeSize - specifies the stroke size\n * @param {number} value - specifies the value\n * @param {number} max - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction getDashOffset(diameter, strokeSize, value, max) {\n  return (diameter - strokeSize) * Math.PI * (3 * max / 100 - value / 100);\n}\n/**\n *\n * @param {number} current - specifies the number\n * @param {number} start - specifies the stroke size\n * @param {number} change - specifies the value\n * @param {number} duration - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction easeAnimation(current, start, change, duration) {\n  var timestamp = (current /= duration) * current;\n  var timecount = timestamp * current;\n  return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} innerConainer - specifies the element\n * @param {string} trgClass - specifies the class\n * @returns {void}\n */\n// eslint-disable-next-line\n\n\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\n  var centerX = radius;\n  var centerY = radius;\n  var diameter = radius * 2; // eslint-disable-next-line\n\n  var startArc = 315,\n      endArc = 45;\n  var svg = innerConainer.querySelector('.' + trgClass);\n  var circle = svg.querySelector('.e-path-circle');\n  var path = svg.querySelector('.e-path-arc');\n  var transformOrigin = diameter / 2 + 'px';\n  circle.setAttribute('d', defineCircle(centerX, centerY, radius));\n  path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\n  svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n  svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n  svg.style.width = svg.style.height = diameter + 'px';\n}\n/**\n *\n * @param {number} centerX - specifies the number\n * @param {number} centerY - specifies the stroke size\n * @param {number} radius - specifies the value\n * @param {number} angle - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction defineArcPoints(centerX, centerY, radius, angle) {\n  var radians = (angle - 90) * Math.PI / 180.0;\n  return {\n    x: centerX + radius * Math.cos(radians),\n    y: centerY + radius * Math.sin(radians)\n  };\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the radius\n * @param {number} startArc - specifies the value\n * @param {number} endArc - specifies the max number\n * @returns {number} - returns the number\n */\n\n\nfunction defineArc(x, y, radius, startArc, endArc) {\n  var start = defineArcPoints(x, y, radius, endArc);\n  var end = defineArcPoints(x, y, radius, startArc);\n  var d = ['M', start.x, start.y, 'A', radius, radius, 0, 0, 0, end.x, end.y].join(' ');\n  return d;\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the value\n * @returns {string} - returns the string\n */\n\n\nfunction defineCircle(x, y, radius) {\n  var d = ['M', x, y, 'm', -radius, 0, 'a', radius, radius, 0, 1, 0, radius * 2, 0, 'a', radius, radius, 0, 1, 0, -radius * 2, 0].join(' ');\n  return d;\n} // eslint-disable-next-line\n\n/**\n * Function to show the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\n\n\nexport function showSpinner(container) {\n  showHideSpinner(container, false);\n  container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {boolean} isHide - specifies the boolean\n * @returns {void}\n */\n\nfunction showHideSpinner(container, isHide) {\n  var spinnerWrap;\n\n  if (container) {\n    spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container : container.querySelector('.' + CLS_SPINWRAP);\n  }\n\n  if (container && spinnerWrap) {\n    var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\n    var spinCheck = void 0; // eslint-disable-next-line\n\n    spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) : !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\n\n    if (spinCheck) {\n      var svgEle = spinnerWrap.querySelector('svg');\n\n      if (isNullOrUndefined(svgEle)) {\n        return;\n      }\n\n      var id = svgEle.getAttribute('id');\n      globalTimeOut[id].isAnimate = !isHide;\n\n      switch (globalTimeOut[id].type) {\n        case 'Material':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\n          break;\n\n        case 'Bootstrap':\n          // eslint-disable-next-line\n          isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\n          break;\n      }\n    } // eslint-disable-next-line\n\n\n    isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\n    container = null;\n  }\n}\n/**\n * Function to hide the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\n\n\nexport function hideSpinner(container) {\n  showHideSpinner(container, true);\n  container = null;\n} // eslint-disable-next-line\n\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\n  * ```\n  *\n  * @param {SetSpinnerArgs} args - specifies the args\n  * @param {createElementParams} internalCreateElement - specifies the element params\n  * @returns {void}\n  * @private\n  */\n\nexport function setSpinner(args, internalCreateElement) {\n  var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n\n  if (args.template !== undefined) {\n    spinTemplate = args.template;\n\n    if (args.template !== undefined) {\n      spinCSSClass = args.cssClass;\n    }\n  }\n\n  var container = document.querySelectorAll('.' + CLS_SPINWRAP);\n\n  for (var index = 0; index < container.length; index++) {\n    ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\n  }\n}\n/**\n *\n * @param {string} template - specifies the string\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\n\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\n  if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\n    replaceTheme(container, theme, cssClass, makeEle);\n\n    if (container.classList.contains(CLS_SHOWSPIN)) {\n      container.classList.remove(CLS_SHOWSPIN);\n      showSpinner(container);\n    } else {\n      container.classList.remove(CLS_HIDESPIN);\n      hideSpinner(container);\n    }\n  } else {\n    spinTemplate = template;\n\n    if (!isNullOrUndefined(cssClass)) {\n      spinCSSClass = cssClass;\n    }\n  }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\n\n\nfunction replaceTheme(container, theme, cssClass, makeEle) {\n  if (!isNullOrUndefined(cssClass)) {\n    container.classList.add(cssClass);\n  }\n\n  var svgElement = container.querySelector('svg');\n  var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\n  var classNames = svgElement.getAttribute('class');\n  var svgClassList = classNames.split(/\\s/);\n\n  if (svgClassList.indexOf('e-spin-material') >= 0) {\n    var id = svgElement.getAttribute('id');\n    clearTimeout(globalTimeOut[id].timeOut);\n  }\n\n  setTheme(theme, container, radius, makeEle);\n}","map":{"version":3,"sources":["/Users/Yana_Krupina/diplom/react_chat/node_modules/@syncfusion/ej2-popups/src/spinner/spinner.js"],"names":["isNullOrUndefined","classList","createElement","globalTimeOut","DEFT_MAT_WIDTH","DEFT_FAB_WIDTH","DEFT_BOOT_WIDTH","DEFT_BOOT4_WIDTH","CLS_SHOWSPIN","CLS_HIDESPIN","CLS_MATERIALSPIN","CLS_FABRICSPIN","CLS_BOOTSPIN","CLS_BOOT4SPIN","CLS_HIGHCONTRASTSPIN","CLS_SPINWRAP","CLS_SPININWRAP","CLS_SPINCIRCLE","CLS_SPINARC","CLS_SPINLABEL","CLS_SPINTEMPLATE","spinTemplate","spinCSSClass","Spinner","action","options","target","type","element","document","querySelector","args","cssClass","label","width","createSpinner","showSpinner","hideSpinner","setArgs","setSpinner","internalCreateElement","radius","makeElement","container","create_spinner_container","wrap","add","template","replaceContent","theme","getTheme","undefined","calculateRadius","setTheme","createLabel","inner_wrap","labelEle","innerHTML","appendChild","createMaterialSpinner","uniqueID","random_generator","timeOut","create_material_element","mat_calculate_attributes","createBootstrap4Spinner","startMatAnimate","globalObject","timeOutVar","globalVariables","spinnerInfo","globalInfo","animateMaterial","createFabricSpinner","create_fabric_element","fb_calculate_attributes","createHighContrastSpinner","window","getComputedStyle","getPropertyValue","replace","innerContainer","svg","removeChild","createBootstrapSpinner","create_bootstrap_element","boot_calculate_attributes","svgBoot","createElementNS","viewBoxValue","trans","defaultRadius","setAttribute","insertBefore","firstChild","item","bootCircle","x","y","rad","style","height","startArc","start","defineArcPoints","circleEle","generateSeries","begin","stop","series","end","increment","count","formSeries","i","push","parseFloat","toFixed","animateBootstrap","id","getAttribute","getElementsByClassName","rotation","circle","boot_animate","isAnimate","length","setTimeout","bind","inner","defaultSize","previousId","random","combine","charAt","Math","floor","innerCon","themeClass","svgFabric","fabricCirclePath","fabricCircleArc","cls","svgMaterial","matCirclePath","spinnerContainer","spinnerInnerContainer","duration","max","createCircle","easeAnimation","easing","startTime","Date","getTime","change","diameter","getSize","strokeSize","getStrokeSize","rotate","mat_animation","currentTime","min","updatePath","value","path","getDashOffset","transformOrigin","drawArc","PI","parsed","offset","current","timestamp","timecount","innerConainer","trgClass","centerX","centerY","endArc","defineCircle","defineArc","angle","radians","cos","sin","d","join","showHideSpinner","isHide","spinnerWrap","contains","spinCheck","svgEle","clearTimeout","querySelectorAll","index","ensureTemplate","makeEle","replaceTheme","remove","svgElement","classNames","svgClassList","split","indexOf"],"mappings":"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","sourcesContent":["import { isNullOrUndefined, classList, createElement } from '@syncfusion/ej2-base';\nvar globalTimeOut = {};\nvar DEFT_MAT_WIDTH = 30;\nvar DEFT_FAB_WIDTH = 30;\nvar DEFT_BOOT_WIDTH = 30;\nvar DEFT_BOOT4_WIDTH = 36;\nvar CLS_SHOWSPIN = 'e-spin-show';\nvar CLS_HIDESPIN = 'e-spin-hide';\nvar CLS_MATERIALSPIN = 'e-spin-material';\nvar CLS_FABRICSPIN = 'e-spin-fabric';\nvar CLS_BOOTSPIN = 'e-spin-bootstrap';\nvar CLS_BOOT4SPIN = 'e-spin-bootstrap4';\nvar CLS_HIGHCONTRASTSPIN = 'e-spin-high-contrast';\nvar CLS_SPINWRAP = 'e-spinner-pane';\nvar CLS_SPININWRAP = 'e-spinner-inner';\nvar CLS_SPINCIRCLE = 'e-path-circle';\nvar CLS_SPINARC = 'e-path-arc';\nvar CLS_SPINLABEL = 'e-spin-label';\nvar CLS_SPINTEMPLATE = 'e-spin-template';\nvar spinTemplate = null;\nvar spinCSSClass = null;\n// eslint-disable-next-line\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : blazorSpinner({ action: \"Create\", options: {target: targetElement}, type: \"\" });\n  * ```\n  *\n  * @param {string} action - specifies the string\n  * @param {CreateArgs} options - specifies the args\n  * @param {string} target - specifies the target\n  * @param {string} type - specifes the type\n  * @returns {void}\n  * @private\n  */\nexport function Spinner(action, options, target, type) {\n    switch (action) {\n        case 'Create':\n            /* eslint-disable */\n            var element = document.querySelector(options.target);\n            var args = { type: type, target: element, cssClass: options.cssClass,\n                label: options.label, width: options.width };\n            /* eslint-enable */\n            createSpinner(args);\n            break;\n        case 'Show':\n            showSpinner(document.querySelector(target));\n            break;\n        case 'Hide':\n            hideSpinner(document.querySelector(target));\n            break;\n        case 'Set':\n            // eslint-disable-next-line\n            var setArgs = { cssClass: options.cssClass, type: type };\n            setSpinner(setArgs);\n            break;\n    }\n}\n/**\n * Create a spinner for the specified target element.\n * ```\n * E.g : createSpinner({ target: targetElement, width: '34px', label: 'Loading..' });\n * ```\n *\n * @param {SpinnerArgs} args - specifies the args\n * @param {CreateElementArgs} internalCreateElement - specifis the element args\n * @returns {void}\n * @private\n */\nexport function createSpinner(args, internalCreateElement) {\n    if (!args.target) {\n        return;\n    }\n    var radius;\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    // eslint-disable-next-line\n    var container = create_spinner_container(args.target, makeElement);\n    if (!isNullOrUndefined(args.cssClass)) {\n        container.wrap.classList.add(args.cssClass);\n    }\n    if (!isNullOrUndefined(args.template) || !isNullOrUndefined(spinTemplate)) {\n        var template = !isNullOrUndefined(args.template) ? args.template : spinTemplate;\n        container.wrap.classList.add(CLS_SPINTEMPLATE);\n        replaceContent(container.wrap, template, spinCSSClass);\n    }\n    else {\n        var theme = !isNullOrUndefined(args.type) ? args.type : getTheme(container.wrap);\n        var width = !isNullOrUndefined(args.width) ? args.width : undefined;\n        radius = calculateRadius(width, theme);\n        setTheme(theme, container.wrap, radius, makeElement);\n        if (!isNullOrUndefined(args.label)) {\n            createLabel(container.inner_wrap, args.label, makeElement);\n        }\n    }\n    container.wrap.classList.add(CLS_HIDESPIN);\n    container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} label - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {HTMLElement} - returns the element\n */\nfunction createLabel(container, label, makeElement) {\n    var labelEle = makeElement('div', {});\n    labelEle.classList.add(CLS_SPINLABEL);\n    labelEle.innerHTML = label;\n    container.appendChild(labelEle);\n    return labelEle;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createMaterialSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Material', radius: radius };\n    create_material_element(container, uniqueID, makeElement, CLS_MATERIALSPIN);\n    mat_calculate_attributes(radius, container, 'Material', CLS_MATERIALSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createBootstrap4Spinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap4', radius: radius };\n    create_material_element(container, uniqueID, makeElement, CLS_BOOT4SPIN);\n    mat_calculate_attributes(radius, container, 'Bootstrap4', CLS_BOOT4SPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} uniqueID - specifies the id.\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\nfunction startMatAnimate(container, uniqueID, radius) {\n    var globalObject = {};\n    var timeOutVar = 0;\n    globalTimeOut[uniqueID].timeOut = 0;\n    globalObject[uniqueID] = globalVariables(uniqueID, radius, 0, 0);\n    // eslint-disable-next-line\n    var spinnerInfo = { uniqueID: uniqueID, container: container, globalInfo: globalObject, timeOutVar: timeOutVar };\n    animateMaterial(spinnerInfo);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createFabricSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Fabric', radius: radius };\n    create_fabric_element(container, uniqueID, CLS_FABRICSPIN, makeElement);\n    fb_calculate_attributes(radius, container, CLS_FABRICSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createHighContrastSpinner(container, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'HighContrast', radius: radius };\n    create_fabric_element(container, uniqueID, CLS_HIGHCONTRASTSPIN, makeElement);\n    fb_calculate_attributes(radius, container, CLS_HIGHCONTRASTSPIN);\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @returns {string} - returns the string\n */\nfunction getTheme(container) {\n    var theme = window.getComputedStyle(container, ':after').getPropertyValue('content');\n    return theme.replace(/['\"]+/g, '');\n}\n/**\n *\n * @param {string} theme - specifies the theme\n * @param {HTMLElement} container - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction setTheme(theme, container, radius, makeElement) {\n    var innerContainer = container.querySelector('.' + CLS_SPININWRAP);\n    var svg = innerContainer.querySelector('svg');\n    if (!isNullOrUndefined(svg)) {\n        innerContainer.removeChild(svg);\n    }\n    switch (theme) {\n        case 'Material':\n            createMaterialSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Fabric':\n            createFabricSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Bootstrap':\n            createBootstrapSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'HighContrast':\n            createHighContrastSpinner(innerContainer, radius, makeElement);\n            break;\n        case 'Bootstrap4':\n            createBootstrap4Spinner(innerContainer, radius, makeElement);\n            break;\n    }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\nfunction createBootstrapSpinner(innerContainer, radius, makeElement) {\n    var uniqueID = random_generator();\n    globalTimeOut[uniqueID] = { timeOut: 0, type: 'Bootstrap', radius: radius };\n    create_bootstrap_element(innerContainer, uniqueID, makeElement);\n    boot_calculate_attributes(innerContainer, radius);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the id\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_bootstrap_element(innerContainer, uniqueID, makeElement) {\n    var svgBoot = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    var viewBoxValue = 64;\n    var trans = 32;\n    var defaultRadius = 2;\n    svgBoot.setAttribute('id', uniqueID);\n    svgBoot.setAttribute('class', CLS_BOOTSPIN);\n    svgBoot.setAttribute('viewBox', '0 0 ' + viewBoxValue + ' ' + viewBoxValue);\n    innerContainer.insertBefore(svgBoot, innerContainer.firstChild);\n    for (var item = 0; item <= 7; item++) {\n        var bootCircle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n        bootCircle.setAttribute('class', CLS_SPINCIRCLE + '_' + item);\n        bootCircle.setAttribute('r', defaultRadius + '');\n        bootCircle.setAttribute('transform', 'translate(' + trans + ',' + trans + ')');\n        svgBoot.appendChild(bootCircle);\n    }\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {number} radius - specifies the radius\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction boot_calculate_attributes(innerContainer, radius) {\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n    var x = 0;\n    var y = 0;\n    var rad = 24;\n    svg.style.width = svg.style.height = radius + 'px';\n    var startArc = 90;\n    for (var item = 0; item <= 7; item++) {\n        var start = defineArcPoints(x, y, rad, startArc);\n        var circleEle = svg.querySelector('.' + CLS_SPINCIRCLE + '_' + item);\n        circleEle.setAttribute('cx', start.x + '');\n        circleEle.setAttribute('cy', start.y + '');\n        startArc = startArc >= 360 ? 0 : startArc;\n        startArc = startArc + 45;\n    }\n}\n/**\n *\n * @param {number} begin - specifies the number\n * @param {number} stop  - specifirs the number\n * @returns {number[]} - returns the array of number\n */\nfunction generateSeries(begin, stop) {\n    var series = [];\n    var start = begin;\n    var end = stop;\n    // eslint-disable-next-line\n    var increment = false, count = 1;\n    formSeries(start);\n    /**\n     *\n     * @param {number} i - specifies the number\n     * @returns {void}\n     */\n    function formSeries(i) {\n        series.push(i);\n        if (i !== end || count === 1) {\n            if (i <= start && i > 1 && !increment) {\n                i = parseFloat((i - 0.2).toFixed(2));\n            }\n            else if (i === 1) {\n                i = 7;\n                i = parseFloat((i + 0.2).toFixed(2));\n                increment = true;\n            }\n            else if (i < 8 && increment) {\n                i = parseFloat((i + 0.2).toFixed(2));\n                if (i === 8) {\n                    increment = false;\n                }\n            }\n            else if (i <= 8 && !increment) {\n                i = parseFloat((i - 0.2).toFixed(2));\n            }\n            ++count;\n            formSeries(i);\n        }\n    }\n    return series;\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @returns {void}\n */\nfunction animateBootstrap(innerContainer) {\n    var svg = innerContainer.querySelector('svg.e-spin-bootstrap');\n    var id = svg.getAttribute('id');\n    for (var i = 1; i <= 8; i++) {\n        var circleEle = (innerContainer.getElementsByClassName('e-path-circle_' +\n            (i === 8 ? 0 : i))[0]);\n        rotation(circleEle, i, i, generateSeries(i, i), id);\n    }\n    /**\n     *\n     * @param {SVGCircleElement} circle - specifies the circl element\n     * @param {number} start - specifies the number\n     * @param {number} end - specifies the end number\n     * @param {number} series - specifies the series\n     * @param {string} id - specifies the id\n     * @returns {void}\n     */\n    function rotation(circle, start, end, series, id) {\n        var count = 0;\n        boot_animate(start);\n        // eslint-disable-next-line\n        function boot_animate(radius) {\n            if (globalTimeOut[id].isAnimate) {\n                ++count;\n                circle.setAttribute('r', radius + '');\n                if (count >= series.length) {\n                    count = 0;\n                }\n                // eslint-disable-next-line\n                globalTimeOut[id].timeOut = setTimeout(boot_animate.bind(null, series[count]), 18);\n            }\n        }\n    }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {string} template - specifies the template\n * @param {string} cssClass - specifies the css class.\n * @returns {void}\n */\nfunction replaceContent(container, template, cssClass) {\n    if (!isNullOrUndefined(cssClass)) {\n        container.classList.add(cssClass);\n    }\n    var inner = container.querySelector('.e-spinner-inner');\n    inner.innerHTML = template;\n}\n/**\n *\n * @param {string} width - specifies the width\n * @param {string} theme - specifies the string\n * @returns {number} - returns the number\n */\nfunction calculateRadius(width, theme) {\n    var defaultSize;\n    switch (theme) {\n        case 'Material':\n            defaultSize = DEFT_MAT_WIDTH;\n            break;\n        case 'Fabric':\n            defaultSize = DEFT_FAB_WIDTH;\n            break;\n        case 'Bootstrap4':\n            defaultSize = DEFT_BOOT4_WIDTH;\n            break;\n        default:\n            defaultSize = DEFT_BOOT_WIDTH;\n    }\n    width = width ? parseFloat(width + '') : defaultSize;\n    return theme === 'Bootstrap' ? width : width / 2;\n}\n/**\n *\n * @param {string} id - specifies the id\n * @param {number} radius - specifies the radius\n * @param {number} count - specifies the number count\n * @param {number} previousId - specifies the previous id\n * @returns {GlobalVariables} - returns the variables\n */\nfunction globalVariables(id, radius, count, previousId) {\n    return {\n        radius: radius,\n        count: count,\n        previousId: previousId\n    };\n}\n/**\n * @returns {string} - returns the string\n */\n// eslint-disable-next-line\nfunction random_generator() {\n    var random = '';\n    var combine = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < 5; i++) {\n        random += combine.charAt(Math.floor(Math.random() * combine.length));\n    }\n    return random;\n}\n/**\n *\n * @param {HTMLElement} innerCon - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {string} themeClass - specifies the string\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_fabric_element(innerCon, uniqueID, themeClass, makeElement) {\n    var svgFabric = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    svgFabric.setAttribute('id', uniqueID);\n    svgFabric.setAttribute('class', themeClass);\n    var fabricCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    fabricCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n    var fabricCircleArc = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    fabricCircleArc.setAttribute('class', CLS_SPINARC);\n    innerCon.insertBefore(svgFabric, innerCon.firstChild);\n    svgFabric.appendChild(fabricCirclePath);\n    svgFabric.appendChild(fabricCircleArc);\n}\n/**\n *\n * @param {HTMLElement} innerContainer - specifies the element\n * @param {string} uniqueID - specifies the unique id\n * @param {createElementParams} makeElement - specifies the element\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_material_element(innerContainer, uniqueID, makeElement, cls) {\n    var svgMaterial = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n    var matCirclePath = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    svgMaterial.setAttribute('class', cls);\n    svgMaterial.setAttribute('id', uniqueID);\n    matCirclePath.setAttribute('class', CLS_SPINCIRCLE);\n    innerContainer.insertBefore(svgMaterial, innerContainer.firstChild);\n    svgMaterial.appendChild(matCirclePath);\n}\n/**\n *\n * @param {HTMLElement} target - specifies the element\n * @param {createElementParams} makeElement - specifies the element\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction create_spinner_container(target, makeElement) {\n    var spinnerContainer = makeElement('div', {});\n    var spinnerInnerContainer = makeElement('div', {});\n    spinnerContainer.classList.add(CLS_SPINWRAP);\n    spinnerInnerContainer.classList.add(CLS_SPININWRAP);\n    target.appendChild(spinnerContainer);\n    spinnerContainer.appendChild(spinnerInnerContainer);\n    // eslint-disable-next-line\n    return { wrap: spinnerContainer, inner_wrap: spinnerInnerContainer };\n}\n/**\n *\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner\n * @returns {void}\n */\nfunction animateMaterial(spinnerInfo) {\n    var start = 1;\n    var end = 149;\n    var duration = 1333;\n    var max = 75;\n    createCircle(start, end, easeAnimation, duration, spinnerInfo.globalInfo[spinnerInfo.uniqueID].count, max, spinnerInfo);\n    spinnerInfo.globalInfo[spinnerInfo.uniqueID].count = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].count % 4;\n}\n/**\n *\n * @param {number} start - specifies the number\n * @param {number} end - specifies the end number\n * @param {Function} easing - specifies the function\n * @param {number} duration - specifies the duration\n * @param {number} count - specifies the count\n * @param {number} max - specifies the max number\n * @param {SpinnerInfo} spinnerInfo - specifies the spinner info\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction createCircle(start, end, easing, duration, count, max, spinnerInfo) {\n    var id = ++spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId;\n    var startTime = new Date().getTime();\n    var change = end - start;\n    var diameter = getSize((spinnerInfo.globalInfo[spinnerInfo.uniqueID].radius * 2) + '');\n    var strokeSize = getStrokeSize(diameter);\n    var rotate = -90 * (spinnerInfo.globalInfo[spinnerInfo.uniqueID].count || 0);\n    mat_animation(spinnerInfo);\n    // eslint-disable-next-line\n    function mat_animation(spinnerInfo) {\n        var currentTime = Math.max(0, Math.min(new Date().getTime() - startTime, duration));\n        updatePath(easing(currentTime, start, change, duration), spinnerInfo.container);\n        if (id === spinnerInfo.globalInfo[spinnerInfo.uniqueID].previousId && currentTime < duration) {\n            // eslint-disable-next-line\n            globalTimeOut[spinnerInfo.uniqueID].timeOut = setTimeout(mat_animation.bind(null, spinnerInfo), 1);\n        }\n        else {\n            animateMaterial(spinnerInfo);\n        }\n    }\n    /**\n     *\n     * @param {number} value - specifies the number value\n     * @param {HTMLElement} container - specifies the container\n     * @returns {void}\n     */\n    function updatePath(value, container) {\n        if ((!isNullOrUndefined(container.querySelector('svg.e-spin-material')))\n            && (!isNullOrUndefined(container.querySelector('svg.e-spin-material').querySelector('path.e-path-circle')))) {\n            var svg = container.querySelector('svg.e-spin-material');\n            var path = svg.querySelector('path.e-path-circle');\n            path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, value, max) + '');\n            path.setAttribute('transform', 'rotate(' + (rotate) + ' ' + diameter / 2 + ' ' + diameter / 2 + ')');\n        }\n    }\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} container - specifies the element\n * @param {string} type - specifies the string type\n * @param {string} cls - specifies the string\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction mat_calculate_attributes(radius, container, type, cls) {\n    var diameter = radius * 2;\n    var svg = container.querySelector('svg.' + cls);\n    var path = svg.querySelector('path.e-path-circle');\n    var strokeSize = getStrokeSize(diameter);\n    var transformOrigin = (diameter / 2) + 'px';\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n    svg.style.width = svg.style.height = diameter + 'px';\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n    path.setAttribute('d', drawArc(diameter, strokeSize));\n    if (type === 'Material') {\n        path.setAttribute('stroke-width', strokeSize + '');\n        path.setAttribute('stroke-dasharray', ((diameter - strokeSize) * Math.PI * 0.75) + '');\n        path.setAttribute('stroke-dashoffset', getDashOffset(diameter, strokeSize, 1, 75) + '');\n    }\n}\n/**\n *\n * @param {string} value - specifies the value\n * @returns {number} - returns the number\n */\nfunction getSize(value) {\n    var parsed = parseFloat(value);\n    return parsed;\n}\n/**\n *\n * @param {number} diameter - specifies the diameter\n * @param {number} strokeSize - specifies the size\n * @returns {string} - returns the string\n */\nfunction drawArc(diameter, strokeSize) {\n    var radius = diameter / 2;\n    var offset = strokeSize / 2;\n    return 'M' + radius + ',' + offset\n        + 'A' + (radius - offset) + ',' + (radius - offset) + ' 0 1 1 ' + offset + ',' + radius;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @returns {number} - returns the number\n */\nfunction getStrokeSize(diameter) {\n    return 10 / 100 * diameter;\n}\n/**\n *\n * @param {number} diameter - specifies the number\n * @param {number} strokeSize - specifies the stroke size\n * @param {number} value - specifies the value\n * @param {number} max - specifies the max number\n * @returns {number} - returns the number\n */\nfunction getDashOffset(diameter, strokeSize, value, max) {\n    return (diameter - strokeSize) * Math.PI * ((3 * (max) / 100) - (value / 100));\n}\n/**\n *\n * @param {number} current - specifies the number\n * @param {number} start - specifies the stroke size\n * @param {number} change - specifies the value\n * @param {number} duration - specifies the max number\n * @returns {number} - returns the number\n */\nfunction easeAnimation(current, start, change, duration) {\n    var timestamp = (current /= duration) * current;\n    var timecount = timestamp * current;\n    return start + change * (6 * timecount * timestamp + -15 * timestamp * timestamp + 10 * timecount);\n}\n/**\n *\n * @param {number} radius - specifies the number\n * @param {HTMLElement} innerConainer - specifies the element\n * @param {string} trgClass - specifies the class\n * @returns {void}\n */\n// eslint-disable-next-line\nfunction fb_calculate_attributes(radius, innerConainer, trgClass) {\n    var centerX = radius;\n    var centerY = radius;\n    var diameter = radius * 2;\n    // eslint-disable-next-line\n    var startArc = 315, endArc = 45;\n    var svg = innerConainer.querySelector('.' + trgClass);\n    var circle = svg.querySelector('.e-path-circle');\n    var path = svg.querySelector('.e-path-arc');\n    var transformOrigin = (diameter / 2) + 'px';\n    circle.setAttribute('d', defineCircle(centerX, centerY, radius));\n    path.setAttribute('d', defineArc(centerX, centerY, radius, startArc, endArc));\n    svg.setAttribute('viewBox', '0 0 ' + diameter + ' ' + diameter);\n    svg.style.transformOrigin = transformOrigin + ' ' + transformOrigin + ' ' + transformOrigin;\n    svg.style.width = svg.style.height = diameter + 'px';\n}\n/**\n *\n * @param {number} centerX - specifies the number\n * @param {number} centerY - specifies the stroke size\n * @param {number} radius - specifies the value\n * @param {number} angle - specifies the max number\n * @returns {number} - returns the number\n */\nfunction defineArcPoints(centerX, centerY, radius, angle) {\n    var radians = (angle - 90) * Math.PI / 180.0;\n    return {\n        x: centerX + (radius * Math.cos(radians)),\n        y: centerY + (radius * Math.sin(radians))\n    };\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the radius\n * @param {number} startArc - specifies the value\n * @param {number} endArc - specifies the max number\n * @returns {number} - returns the number\n */\nfunction defineArc(x, y, radius, startArc, endArc) {\n    var start = defineArcPoints(x, y, radius, endArc);\n    var end = defineArcPoints(x, y, radius, startArc);\n    var d = [\n        'M', start.x, start.y,\n        'A', radius, radius, 0, 0, 0, end.x, end.y\n    ].join(' ');\n    return d;\n}\n/**\n *\n * @param {number} x - specifies the number\n * @param {number} y - specifies the stroke size\n * @param {number} radius - specifies the value\n * @returns {string} - returns the string\n */\nfunction defineCircle(x, y, radius) {\n    var d = [\n        'M', x, y,\n        'm', -radius, 0,\n        'a', radius, radius, 0, 1, 0, radius * 2, 0,\n        'a', radius, radius, 0, 1, 0, -radius * 2, 0\n    ].join(' ');\n    return d;\n}\n// eslint-disable-next-line\n/**\n * Function to show the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\nexport function showSpinner(container) {\n    showHideSpinner(container, false);\n    container = null;\n}\n/**\n *\n * @param {HTMLElement} container - specifies the element\n * @param {boolean} isHide - specifies the boolean\n * @returns {void}\n */\nfunction showHideSpinner(container, isHide) {\n    var spinnerWrap;\n    if (container) {\n        spinnerWrap = container.classList.contains(CLS_SPINWRAP) ? container :\n            container.querySelector('.' + CLS_SPINWRAP);\n    }\n    if (container && spinnerWrap) {\n        var inner = spinnerWrap.querySelector('.' + CLS_SPININWRAP);\n        var spinCheck = void 0;\n        // eslint-disable-next-line\n        spinCheck = isHide ? !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_HIDESPIN) :\n            !spinnerWrap.classList.contains(CLS_SPINTEMPLATE) && !spinnerWrap.classList.contains(CLS_SHOWSPIN);\n        if (spinCheck) {\n            var svgEle = spinnerWrap.querySelector('svg');\n            if (isNullOrUndefined(svgEle)) {\n                return;\n            }\n            var id = svgEle.getAttribute('id');\n            globalTimeOut[id].isAnimate = !isHide;\n            switch (globalTimeOut[id].type) {\n                case 'Material':\n                    // eslint-disable-next-line\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : startMatAnimate(inner, id, globalTimeOut[id].radius);\n                    break;\n                case 'Bootstrap':\n                    // eslint-disable-next-line\n                    isHide ? clearTimeout(globalTimeOut[id].timeOut) : animateBootstrap(inner);\n                    break;\n            }\n        }\n        // eslint-disable-next-line\n        isHide ? classList(spinnerWrap, [CLS_HIDESPIN], [CLS_SHOWSPIN]) : classList(spinnerWrap, [CLS_SHOWSPIN], [CLS_HIDESPIN]);\n        container = null;\n    }\n}\n/**\n * Function to hide the Spinner.\n *\n * @param {HTMLElement} container - Specify the target of the Spinner.\n * @returns {void}\n * @private\n */\nexport function hideSpinner(container) {\n    showHideSpinner(container, true);\n    container = null;\n}\n// eslint-disable-next-line\n/**\n  * Function to change the Spinners in a page globally from application end.\n  * ```\n  * E.g : setSpinner({ cssClass: 'custom-css'; type: 'Material' });\n  * ```\n  *\n  * @param {SetSpinnerArgs} args - specifies the args\n  * @param {createElementParams} internalCreateElement - specifies the element params\n  * @returns {void}\n  * @private\n  */\nexport function setSpinner(args, internalCreateElement) {\n    var makeElement = !isNullOrUndefined(internalCreateElement) ? internalCreateElement : createElement;\n    if (args.template !== undefined) {\n        spinTemplate = args.template;\n        if (args.template !== undefined) {\n            spinCSSClass = args.cssClass;\n        }\n    }\n    var container = document.querySelectorAll('.' + CLS_SPINWRAP);\n    for (var index = 0; index < container.length; index++) {\n        ensureTemplate(args.template, container[index], args.type, args.cssClass, makeElement);\n    }\n}\n/**\n *\n * @param {string} template - specifies the string\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\nfunction ensureTemplate(template, container, theme, cssClass, makeEle) {\n    if (isNullOrUndefined(template) && !container.classList.contains(CLS_SPINTEMPLATE)) {\n        replaceTheme(container, theme, cssClass, makeEle);\n        if (container.classList.contains(CLS_SHOWSPIN)) {\n            container.classList.remove(CLS_SHOWSPIN);\n            showSpinner(container);\n        }\n        else {\n            container.classList.remove(CLS_HIDESPIN);\n            hideSpinner(container);\n        }\n    }\n    else {\n        spinTemplate = template;\n        if (!isNullOrUndefined(cssClass)) {\n            spinCSSClass = cssClass;\n        }\n    }\n}\n/**\n *\n * @param {HTMLElement} container - specifies the container\n * @param {string} theme - specifies the theme\n * @param {string} cssClass - specifies the string class\n * @param {createElementParams} makeEle - specifies the params\n * @returns {void}\n */\nfunction replaceTheme(container, theme, cssClass, makeEle) {\n    if (!isNullOrUndefined(cssClass)) {\n        container.classList.add(cssClass);\n    }\n    var svgElement = container.querySelector('svg');\n    var radius = theme === 'Bootstrap' ? parseFloat(svgElement.style.height) : parseFloat(svgElement.style.height) / 2;\n    var classNames = svgElement.getAttribute('class');\n    var svgClassList = classNames.split(/\\s/);\n    if (svgClassList.indexOf('e-spin-material') >= 0) {\n        var id = svgElement.getAttribute('id');\n        clearTimeout(globalTimeOut[id].timeOut);\n    }\n    setTheme(theme, container, radius, makeEle);\n}\n"]},"metadata":{},"sourceType":"module"}